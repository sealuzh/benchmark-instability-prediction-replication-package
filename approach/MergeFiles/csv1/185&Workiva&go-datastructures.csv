function,id,pkgfiles,fileloc,namelength,parameters,returns,loc,funccalls,loops,nestedloops,channels,sends,receives,closes,gos,concrranges,selects,selectcases,variables,pointers,slices,maps,ifelses,switches,switchcases,panics,recovers,defers,cyclomaticcomplexity,bufio,bytes,crypto,database/sql,encoding,encoding/binary,encoding/csv,encoding/json,encoding/xml,io,io/ioutil,math,math/rand,mime,net,net/http,net/http/httptest,net/http/httptrace,net/http/httputil,net/rpc,net/rpc/jsonrpc,net/smtp,net/textproto,os,os/exec,os/signal,sort,strconv,sync,sync/atomic,syscall
/tree/avl/avl_test.go/TestAVLInsertLeftLeaning,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLInsertLeftLeaning""",5,372,24,1,0,22,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand.go/nandDenseWithDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.nandDenseWithDenseBitArray""",20,136,26,1,1,13,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestFibHeap_Min_EmptyHeap,"""github.com/Workiva/go-datastructures/fibheap.TestFibHeap_Min_EmptyHeap""",4,444,25,1,0,13,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Add,"""(*github.com/Workiva/go-datastructures/list.emptyList).Add""",2,235,3,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestMultipleInsertsCauseInternalSplitOddAry,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestMultipleInsertsCauseInternalSplitOddAry""",7,457,43,1,0,20,16,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/lenValues,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).lenValues""",14,476,9,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestSuccessorCloseToKey,"""github.com/Workiva/go-datastructures/trie/xfast.TestSuccessorCloseToKey""",5,579,23,1,0,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/TestDeleteClearsCache,"""github.com/Workiva/go-datastructures/set.TestDeleteClearsCache""",2,221,21,1,0,11,5,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestReplaceAtPosition,"""github.com/Workiva/go-datastructures/slice/skip.TestReplaceAtPosition""",7,404,21,1,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/search,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).search""",7,400,6,1,1,18,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/iremove,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).iremove""",2,895,7,5,3,71,21,0,0,0,0,0,0,0,0,0,0,0,1,0,0,9,1,4,2,0,0,17,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/ClearBit,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).ClearBit""",20,294,8,1,1,18,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/TestGetSetCompressedBit,"""github.com/Workiva/go-datastructures/bitarray.TestGetSetCompressedBit""",20,294,23,1,0,17,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/checkTrie,"""github.com/Workiva/go-datastructures/trie/xfast.checkTrie""",5,579,9,2,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/Delete,"""(*github.com/Workiva/go-datastructures/augmentedtree.tree).Delete""",7,402,6,1,0,7,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/Get,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).Get""",12,248,3,1,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/complete,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.getAction).complete""",7,171,8,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/tree/avl/avl.go/insertBalance,"""github.com/Workiva/go-datastructures/tree/avl.insertBalance""",5,407,13,2,1,18,6,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/newNode,"""github.com/Workiva/go-datastructures/btree/_link.newNode""",7,290,7,3,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestInsertOverwrite,"""github.com/Workiva/go-datastructures/trie/xfast.TestInsertOverwrite""",5,579,19,1,0,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/util.go/defaultHasher,"""github.com/Workiva/go-datastructures/trie/dtrie.defaultHasher""",4,44,13,1,1,32,17,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/Equals,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).Equals""",20,308,6,1,1,39,9,1,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hash_test.go/BenchmarkHash,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.BenchmarkHash""",4,56,13,1,0,16,10,3,1,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/toContracted,"""github.com/Workiva/go-datastructures/trie/ctrie.toContracted""",2,895,12,2,1,11,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/gcas,"""github.com/Workiva/go-datastructures/trie/ctrie.gcas""",2,895,4,3,1,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0
/slice/skip/mock_test.go/newMockEntry,"""github.com/Workiva/go-datastructures/slice/skip.newMockEntry""",7,49,12,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block.go/insert,"""(github.com/Workiva/go-datastructures/bitarray.block).insert""",20,86,6,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestDeleteAllFromRoot,"""github.com/Workiva/go-datastructures/btree/immutable.TestDeleteAllFromRoot""",14,991,21,1,0,14,13,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/FindIndex,"""(*github.com/Workiva/go-datastructures/list.emptyList).FindIndex""",2,235,9,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/entries.go/Key,"""(*github.com/Workiva/go-datastructures/trie/yfast.entriesWrapper).Key""",7,142,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher.go/flush,"""(*github.com/Workiva/go-datastructures/batcher.basicBatcher).flush""",2,274,5,0,0,4,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/generateRandomQuery,"""github.com/Workiva/go-datastructures/btree/immutable.generateRandomQuery""",14,991,19,0,2,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue.go/NewPriorityQueue,"""github.com/Workiva/go-datastructures/queue.NewPriorityQueue""",8,242,16,2,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/complete,"""(*github.com/Workiva/go-datastructures/btree/palm.insertAction).complete""",7,199,8,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/rangetree/orderedtree_test.go/BenchmarkOTDeleteItemsMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkOTDeleteItemsMultiDimensions""",12,628,37,1,0,20,13,3,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/Intersects,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).Intersects""",20,294,10,1,1,10,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/rotate,"""github.com/Workiva/go-datastructures/tree/avl.rotate""",5,407,6,2,1,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/find,"""(*github.com/Workiva/go-datastructures/btree/plus.lnode).find""",7,254,4,1,1,18,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestNoMatchRight,"""github.com/Workiva/go-datastructures/augmentedtree.TestNoMatchRight""",7,630,16,1,0,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestAddDuplicateRanges,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddDuplicateRanges""",7,630,22,1,0,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestPut,"""github.com/Workiva/go-datastructures/queue.TestPut""",8,595,7,1,0,22,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/BenchmarkImmutableMultiDimensionBulkInsert,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkImmutableMultiDimensionBulkInsert""",12,533,42,1,0,15,9,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestEmptyMinMax,"""github.com/Workiva/go-datastructures/trie/xfast.TestEmptyMinMax""",5,579,15,1,0,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block.go/findRightPosition,"""(github.com/Workiva/go-datastructures/bitarray.block).findRightPosition""",20,86,17,0,1,9,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestExecuteInParallelEmptyQueue,"""github.com/Workiva/go-datastructures/queue.TestExecuteInParallelEmptyQueue""",8,595,31,1,0,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node_gen.go/MarshalMsg,"""(github.com/Workiva/go-datastructures/btree/immutable.ID).MarshalMsg""",14,304,10,1,2,4,4,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/key.go/reverseKeys,"""github.com/Workiva/go-datastructures/btree/palm.reverseKeys""",7,20,11,1,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree.go/insert,"""(*github.com/Workiva/go-datastructures/btree/plus.btree).insert""",7,97,6,1,0,16,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestSymMergeAlreadySorted,"""github.com/Workiva/go-datastructures/sort.TestSymMergeAlreadySorted""",5,223,25,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/or.go/orDenseWithDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.orDenseWithDenseBitArray""",20,136,24,2,1,31,20,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/itemsToValues,"""github.com/Workiva/go-datastructures/btree/immutable.itemsToValues""",14,991,13,1,1,7,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/BenchmarkFibHeap_DecreaseKey,"""github.com/Workiva/go-datastructures/fibheap.BenchmarkFibHeap_DecreaseKey""",4,444,28,1,0,21,11,2,0,0,0,0,0,0,0,0,0,3,0,2,0,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestBitArrayIntersectsSparse,"""github.com/Workiva/go-datastructures/bitarray.TestBitArrayIntersectsSparse""",20,466,28,1,0,17,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestOTRootAddMultipleDimensions,"""github.com/Workiva/go-datastructures/rangetree.TestOTRootAddMultipleDimensions""",12,628,31,1,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/node.go/remove,"""github.com/Workiva/go-datastructures/trie/dtrie.remove""",4,208,6,3,1,43,16,2,0,0,0,0,0,0,0,0,0,1,0,0,0,7,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/Iter,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).Iter""",7,246,4,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/Or,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).Or""",20,308,2,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/cacher.go/deleteFromCache,"""(*github.com/Workiva/go-datastructures/btree/immutable.cacher).deleteFromCache""",14,117,15,1,0,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/btree/immutable/cacher.go/loadNode,"""(*github.com/Workiva/go-datastructures/btree/immutable.cacher).loadNode""",14,117,8,2,2,12,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/BenchmarkImmutableInsert,"""github.com/Workiva/go-datastructures/tree/avl.BenchmarkImmutableInsert""",5,372,24,1,0,12,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_examples_test.go/ExampleFloatingFibonacciHeap_Enqueue,"""github.com/Workiva/go-datastructures/fibheap.ExampleFloatingFibonacciHeap_Enqueue""",4,104,36,0,0,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered_test.go/TestOrderedDelete,"""github.com/Workiva/go-datastructures/rangetree.TestOrderedDelete""",12,158,17,1,0,24,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/splitAt,"""github.com/Workiva/go-datastructures/slice/skip.splitAt""",7,424,7,2,2,25,9,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/queue/ring.go/Put,"""(*github.com/Workiva/go-datastructures/queue.RingBuffer).Put""",8,179,3,1,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring_test.go/TestRingLen,"""github.com/Workiva/go-datastructures/queue.TestRingLen""",8,295,11,1,0,17,20,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableMultiDimensionAdd,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableMultiDimensionAdd""",12,533,30,1,0,14,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand_test.go/TestNandDenseWithEmptyDense,"""github.com/Workiva/go-datastructures/bitarray.TestNandDenseWithEmptyDense""",20,300,27,1,0,12,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/futures.go/setItem,"""(*github.com/Workiva/go-datastructures/futures.Future).setItem""",4,82,7,2,0,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/trie/dtrie/dtrie_test.go/TestGet,"""github.com/Workiva/go-datastructures/trie/dtrie.TestGet""",4,145,7,1,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent_test.go/TestMap,"""github.com/Workiva/go-datastructures/list.TestMap""",2,273,7,1,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/TestSnapshot,"""github.com/Workiva/go-datastructures/trie/ctrie.TestSnapshot""",2,411,12,1,0,82,71,10,0,0,0,0,0,0,0,0,0,10,0,17,0,0,0,0,0,1,1,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0
/trie/xfast/xfast_test.go/TestSuccessorGreaterThanKey,"""github.com/Workiva/go-datastructures/trie/xfast.TestSuccessorGreaterThanKey""",5,579,27,1,0,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/newTree,"""github.com/Workiva/go-datastructures/btree/immutable.newTree""",14,212,7,1,1,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/int64.go/Len,"""(github.com/Workiva/go-datastructures/slice.Int64Slice).Len""",2,69,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/binarySearchHashMaps,"""github.com/Workiva/go-datastructures/trie/xfast.binarySearchHashMaps""",5,587,20,2,2,17,2,1,0,0,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/searchNode,"""(*github.com/Workiva/go-datastructures/btree/palm.node).searchNode""",7,255,10,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree.go/Iter,"""(*github.com/Workiva/go-datastructures/btree/plus.btree).Iter""",7,97,4,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/Len,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).Len""",12,248,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestAddLargeNumberOfItems,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddLargeNumberOfItems""",7,630,25,1,0,13,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node_test.go/newTestNode,"""github.com/Workiva/go-datastructures/btree/_link.newTestNode""",7,148,11,2,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/add.go/insertByMerge,"""github.com/Workiva/go-datastructures/btree/immutable.insertByMerge""",14,303,13,3,2,39,8,3,0,0,0,0,0,0,0,0,0,1,1,0,1,2,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/slice/skip/skip_test.go/TestSimpleDelete,"""github.com/Workiva/go-datastructures/slice/skip.TestSimpleDelete""",7,404,16,1,0,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/lenKeys,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).lenKeys""",14,476,7,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/addNode,"""(*github.com/Workiva/go-datastructures/btree/palm.insertAction).addNode""",7,199,7,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestCrossNodeQuery,"""github.com/Workiva/go-datastructures/btree/palm.TestCrossNodeQuery""",7,584,18,1,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/newSparseBitArray,"""github.com/Workiva/go-datastructures/bitarray.newSparseBitArray""",20,308,17,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/sort,"""(github.com/Workiva/go-datastructures/numerics/optimization.vertices).sort""",3,559,4,1,0,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestExecuteInParallel,"""github.com/Workiva/go-datastructures/queue.TestExecuteInParallel""",8,595,21,1,0,15,10,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/trie/dtrie/dtrie.go/New,"""github.com/Workiva/go-datastructures/trie/dtrie.New""",4,74,3,1,1,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/Predecessor,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).Predecessor""",5,587,11,1,1,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/interface.go/Swap,"""(github.com/Workiva/go-datastructures/sort.Comparators).Swap""",5,33,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/executeInterfacesInParallel,"""github.com/Workiva/go-datastructures/btree/palm.executeInterfacesInParallel""",7,199,27,2,0,32,17,2,1,0,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0
/rangetree/skiplist/skiplist_test.go/TestRTSingleDimensionQuery,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTSingleDimensionQuery""",3,397,26,1,0,21,20,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/splitAt,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.keys).splitAt""",7,347,7,1,2,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/TestCompressedIntersects,"""github.com/Workiva/go-datastructures/bitarray.TestCompressedIntersects""",20,294,24,1,0,20,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/isLastDimension,"""github.com/Workiva/go-datastructures/rangetree/skiplist.isLastDimension""",3,413,15,1,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/rdcssComplete,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).rdcssComplete""",2,895,13,1,1,35,9,1,0,0,0,0,0,0,0,0,0,1,0,0,0,6,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0
/queue/queue_test.go/TestPeek,"""github.com/Workiva/go-datastructures/queue.TestPeek""",8,595,8,1,0,15,16,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/Delete,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).Delete""",12,248,6,1,1,18,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableMultiDimensionBulkDeletes,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableMultiDimensionBulkDeletes""",12,533,38,1,0,20,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/threadsafe/err/error.go/New,"""github.com/Workiva/go-datastructures/threadsafe/err.New""",2,33,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/ExecuteInParallel,"""github.com/Workiva/go-datastructures/queue.ExecuteInParallel""",8,360,17,2,0,39,15,2,1,0,0,0,0,1,0,0,0,3,0,0,0,4,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0
/trie/dtrie/util.go/mask,"""github.com/Workiva/go-datastructures/trie/dtrie.mask""",4,44,4,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block.go/String,"""(github.com/Workiva/go-datastructures/bitarray.block).String""",20,86,6,0,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/search,"""(github.com/Workiva/go-datastructures/bitarray.uintSlice).search""",20,308,6,1,1,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/btree/palm/action.go/addNode,"""(*github.com/Workiva/go-datastructures/btree/palm.applyAction).addNode""",7,199,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/constructMockInternalNode,"""github.com/Workiva/go-datastructures/btree/plus.constructMockInternalNode""",7,204,25,1,1,15,5,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableInsertMultiplePositiveIndexFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertMultiplePositiveIndexFirstDimension""",12,533,54,1,0,12,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher.go/TryLock,"""(*github.com/Workiva/go-datastructures/batcher.mutex).TryLock""",2,274,7,0,1,7,0,0,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/or_test.go/TestOrSparseWithDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestOrSparseWithDenseBitArray""",20,257,29,1,0,45,27,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/mock_test.go/Compare,"""(github.com/Workiva/go-datastructures/btree/palm.mockKey).Compare""",7,19,7,1,1,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/addNode,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.getAction).addNode""",7,171,7,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/iterator.go/exhaust,"""(*github.com/Workiva/go-datastructures/trie/yfast.Iterator).exhaust""",7,79,7,0,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/reset,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).reset""",14,212,5,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/selectable_test.go/BenchmarkSelectable,"""github.com/Workiva/go-datastructures/futures.BenchmarkSelectable""",4,71,19,1,0,21,11,1,0,0,0,2,0,1,0,1,2,2,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/queue/queue_test.go/TestGetEmpty,"""github.com/Workiva/go-datastructures/queue.TestGetEmpty""",8,595,12,1,0,14,7,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTSingleDimensionInsert,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTSingleDimensionInsert""",3,397,27,1,0,16,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestInsertOverwrite,"""github.com/Workiva/go-datastructures/btree/palm.TestInsertOverwrite""",7,584,19,1,0,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/and_test.go/checkBit,"""github.com/Workiva/go-datastructures/bitarray.checkBit""",20,189,8,4,0,9,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/config.go/DefaultConfig,"""github.com/Workiva/go-datastructures/btree/immutable.DefaultConfig""",14,27,13,2,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node_gen.go/UnmarshalMsg,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).UnmarshalMsg""",14,304,12,1,2,83,21,3,2,0,0,0,0,0,0,0,0,3,0,4,0,14,1,5,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/max,"""github.com/Workiva/go-datastructures/augmentedtree.max""",7,630,3,1,1,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestMergeVeryUnevenListsAlreadySorted,"""github.com/Workiva/go-datastructures/sort.TestMergeVeryUnevenListsAlreadySorted""",5,223,37,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/removed,"""(*github.com/Workiva/go-datastructures/trie/ctrie.lNode).removed""",2,895,7,1,1,9,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/search,"""(github.com/Workiva/go-datastructures/btree/plus.keys).search""",7,254,6,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/removeTest,"""github.com/Workiva/go-datastructures/trie/dtrie.removeTest""",4,145,10,3,0,10,4,2,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher_test.go/TestFlush,"""github.com/Workiva/go-datastructures/batcher.TestFlush""",2,163,9,1,0,17,12,0,0,1,1,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestGetPutDisposed,"""github.com/Workiva/go-datastructures/queue.TestGetPutDisposed""",8,595,18,1,0,10,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTMultiDimensionInsert,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTMultiDimensionInsert""",3,397,26,1,0,16,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/hash,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).hash""",2,895,4,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/TestLeafNodeSplitOddNumber,"""github.com/Workiva/go-datastructures/btree/plus.TestLeafNodeSplitOddNumber""",7,204,26,1,0,12,6,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/futures_test.go/TestTimeout,"""github.com/Workiva/go-datastructures/futures.TestTimeout""",4,83,11,1,0,8,6,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/Get,"""(*github.com/Workiva/go-datastructures/queue.Queue).Get""",8,360,3,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/TestClearCompressedBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestClearCompressedBitArray""",20,294,27,1,0,18,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/insert,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).insert""",3,413,6,4,0,51,21,2,0,0,0,0,0,0,0,0,0,3,0,0,0,7,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie.go/Insert,"""(*github.com/Workiva/go-datastructures/trie/dtrie.Dtrie).Insert""",4,74,6,1,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/encoding.go/Serialize,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).Serialize""",20,218,9,0,2,32,11,0,0,0,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,6,0,1,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/TestClearCompressedBit,"""github.com/Workiva/go-datastructures/bitarray.TestClearCompressedBit""",20,294,22,1,0,18,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/multiply,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nmVertex).multiply""",3,559,8,1,1,9,4,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/lookup,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).lookup""",2,895,6,1,2,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/util.go/maxInt64,"""github.com/Workiva/go-datastructures/bitarray.maxInt64""",20,37,8,1,1,9,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree.go/Len,"""(*github.com/Workiva/go-datastructures/btree/_link.blink).Len""",7,129,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/cache/cache.go/Remove,"""(*github.com/Workiva/go-datastructures/cache.cache).Remove""",2,182,6,1,0,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/rangetree/immutable.go/add,"""(*github.com/Workiva/go-datastructures/rangetree.immutableRangeTree).add""",12,259,3,4,0,35,16,1,0,0,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/Query,"""(*github.com/Workiva/go-datastructures/augmentedtree.tree).Query""",7,402,5,1,1,16,5,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/btree/immutable/node.go/Less,"""(*github.com/Workiva/go-datastructures/btree/immutable.nodeSortWrapper).Less""",14,476,4,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestEnqueueDequeueMin,"""github.com/Workiva/go-datastructures/fibheap.TestEnqueueDequeueMin""",4,444,21,1,0,24,14,2,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie.go/Size,"""(*github.com/Workiva/go-datastructures/trie/dtrie.Dtrie).Size""",4,74,4,0,1,5,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestSuccessorBetweenTwoKeys,"""github.com/Workiva/go-datastructures/trie/xfast.TestSuccessorBetweenTwoKeys""",5,579,27,1,0,17,12,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/intFromBool,"""github.com/Workiva/go-datastructures/augmentedtree.intFromBool""",7,402,11,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/FindIndex,"""(*github.com/Workiva/go-datastructures/list.list).FindIndex""",2,235,9,1,1,14,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/New,"""github.com/Workiva/go-datastructures/rtree/hilbert.New""",7,400,3,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLInsertOverwrite,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLInsertOverwrite""",5,372,22,1,0,15,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/newInternalNode,"""github.com/Workiva/go-datastructures/btree/plus.newInternalNode""",7,254,15,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/New,"""github.com/Workiva/go-datastructures/rangetree.New""",12,248,3,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestInsertCausesRootSplitEvenAry,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestInsertCausesRootSplitEvenAry""",7,457,32,1,0,16,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestMultipleInsertCausesSplitOddAryReverseOrder,"""github.com/Workiva/go-datastructures/btree/palm.TestMultipleInsertCausesSplitOddAryReverseOrder""",7,584,47,1,0,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/Delete,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).Delete""",7,400,6,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/mock/batcher.go/Get,"""(*github.com/Workiva/go-datastructures/mock.Batcher).Get""",2,41,3,0,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/GetWithPosition,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).GetWithPosition""",7,424,15,1,2,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/successor,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).successor""",5,587,9,1,1,29,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/Less,"""(*github.com/Workiva/go-datastructures/btree/immutable.valueSortWrapper).Less""",14,991,4,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/complete,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.insertAction).complete""",7,171,8,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/trie/ctrie/ctrie_test.go/Sum32,"""(*github.com/Workiva/go-datastructures/trie/ctrie.mockHash32).Sum32""",2,411,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/takeOpposite,"""github.com/Workiva/go-datastructures/augmentedtree.takeOpposite""",7,402,12,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/insertAt,"""(*github.com/Workiva/go-datastructures/btree/plus.nodes).insertAt""",7,254,8,2,0,9,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/mock_test.go/constructMockEntry,"""github.com/Workiva/go-datastructures/rangetree.constructMockEntry""",12,43,18,2,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/path.go/append,"""(*github.com/Workiva/go-datastructures/btree/immutable.path).append""",14,49,6,1,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/operation,"""(*github.com/Workiva/go-datastructures/btree/palm.getAction).operation""",7,199,9,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered_test.go/BenchmarkPrepend,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkPrepend""",12,158,16,1,0,13,14,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/Compare,"""(*github.com/Workiva/go-datastructures/btree/palm.node).Compare""",7,255,7,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/print,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).print""",7,544,5,1,0,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestMultipleQuery,"""github.com/Workiva/go-datastructures/btree/palm.TestMultipleQuery""",7,584,17,1,0,18,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/selectable.go/init,"""github.com/Workiva/go-datastructures/futures.init""",4,96,4,0,0,2,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestAddRootLeftAndRight,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddRootLeftAndRight""",7,630,23,1,0,24,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/encoding_test.go/TestSparseBitArrayMarshalUnmarshal,"""github.com/Workiva/go-datastructures/bitarray.TestSparseBitArrayMarshalUnmarshal""",20,122,34,1,0,19,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/key.go/last,"""(github.com/Workiva/go-datastructures/btree/_link.Keys).last""",7,80,4,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestDeleteMultipleLevelsWithCommit,"""github.com/Workiva/go-datastructures/btree/immutable.TestDeleteMultipleLevelsWithCommit""",14,991,34,1,0,29,25,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/BenchmarkFibHeap_Delete,"""github.com/Workiva/go-datastructures/fibheap.BenchmarkFibHeap_Delete""",4,444,23,1,0,18,10,2,0,0,0,0,0,0,0,0,0,3,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/threadsafe/err/error_test.go/TestGetSetError,"""github.com/Workiva/go-datastructures/threadsafe/err.TestGetSetError""",2,18,15,1,0,8,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/node.go/String,"""(*github.com/Workiva/go-datastructures/trie/dtrie.node).String""",4,208,6,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/setMax,"""github.com/Workiva/go-datastructures/augmentedtree.setMax""",7,402,6,1,0,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestConstructorSetBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestConstructorSetBitArray""",20,466,26,1,0,9,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/add.go/walkupInsert,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).walkupInsert""",14,303,12,1,1,84,42,6,4,0,0,0,0,1,0,0,0,1,0,0,3,6,0,0,0,0,1,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/set/dict_test.go/BenchmarkClear,"""github.com/Workiva/go-datastructures/set.BenchmarkClear""",2,221,14,1,0,5,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/moveRight,"""github.com/Workiva/go-datastructures/btree/_link.moveRight""",7,290,9,3,1,21,7,1,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0
/queue/queue_test.go/BenchmarkQueue,"""github.com/Workiva/go-datastructures/queue.BenchmarkQueue""",8,595,14,1,0,22,8,2,0,0,0,0,0,1,0,0,0,3,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/rangetree/orderedtree_test.go/TestInsertNegativeIndexFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertNegativeIndexFirstDimension""",12,628,37,1,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/get,"""(*github.com/Workiva/go-datastructures/queue.waiters).get""",8,360,3,0,1,10,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/Apply,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).Apply""",12,248,5,2,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/GetBit,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).GetBit""",20,308,6,1,2,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/Query,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).Query""",7,544,5,1,1,9,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/futures/futures_test.go/BenchmarkFuture,"""github.com/Workiva/go-datastructures/futures.BenchmarkFuture""",4,83,15,1,0,18,9,1,0,1,1,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/tree/avl/avl.go/insert,"""(*github.com/Workiva/go-datastructures/tree/avl.Immutable).insert""",5,407,6,1,1,81,15,2,0,0,0,0,0,0,0,0,0,1,0,0,0,10,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLInsertRightLeaning,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLInsertRightLeaning""",5,372,25,1,0,22,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/Delete,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).Delete""",7,424,6,1,1,8,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/newKeyBundle,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).newKeyBundle""",7,544,12,1,1,11,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestSearchKeys,"""github.com/Workiva/go-datastructures/btree/plus.TestSearchKeys""",7,412,14,1,0,16,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableMultiDimensionMultipleDeletes,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableMultiDimensionMultipleDeletes""",12,533,42,1,0,33,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/BenchmarkQueuePut,"""github.com/Workiva/go-datastructures/queue.BenchmarkQueuePut""",8,595,17,1,0,17,7,3,1,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/apply,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).apply""",3,413,5,4,1,26,11,1,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/searchNode,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).searchNode""",7,347,10,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/cache/cache.go/Get,"""(*github.com/Workiva/go-datastructures/cache.cache).Get""",2,182,3,1,1,16,5,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/slice/int64.go/Search,"""(github.com/Workiva/go-datastructures/slice.Int64Slice).Search""",2,69,6,1,1,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/trie/yfast/yfast_test.go/BenchmarkSuccessor,"""github.com/Workiva/go-datastructures/trie/yfast.BenchmarkSuccessor""",7,266,18,1,0,16,12,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/BenchmarkCompressedEquals,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkCompressedEquals""",20,294,25,1,0,15,8,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInsert3_4_5_WithMiddleDuplicate,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsert3_4_5_WithMiddleDuplicate""",7,412,39,1,0,13,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast_test.go/generateEntries,"""github.com/Workiva/go-datastructures/trie/yfast.generateEntries""",7,266,15,1,1,7,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/put,"""(*github.com/Workiva/go-datastructures/queue.waiters).put""",8,360,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/len,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.keys).len""",7,347,3,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/BenchmarkUpdate,"""github.com/Workiva/go-datastructures/trie/dtrie.BenchmarkUpdate""",4,145,15,1,0,7,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestIntersects,"""github.com/Workiva/go-datastructures/bitarray.TestIntersects""",20,466,14,1,0,25,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInternalNodeSplitRandomOrder,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInternalNodeSplitRandomOrder""",7,412,36,1,0,18,12,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/cache/cache_test.go/Size,"""(github.com/Workiva/go-datastructures/cache.testItem).Size""",2,122,4,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead_test.go/TestNelderMead,"""github.com/Workiva/go-datastructures/numerics/optimization.TestNelderMead""",3,144,14,1,0,12,5,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring.go/init,"""(*github.com/Workiva/go-datastructures/queue.RingBuffer).init""",8,179,4,1,0,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/operation,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.getAction).operation""",7,171,9,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/constructMockPoints,"""github.com/Workiva/go-datastructures/rtree/hilbert.constructMockPoints""",7,457,19,1,1,6,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestDeleteAll,"""github.com/Workiva/go-datastructures/slice/skip.TestDeleteAll""",7,404,13,1,0,10,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/checkRedBlack,"""github.com/Workiva/go-datastructures/augmentedtree.checkRedBlack""",7,630,13,3,3,56,23,0,0,0,0,0,0,0,0,0,0,2,0,0,0,13,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/insert,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).insert""",14,476,6,2,1,26,9,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestMultipleInsertCausesSplitOddAry,"""github.com/Workiva/go-datastructures/btree/palm.TestMultipleInsertCausesSplitOddAry""",7,584,35,1,0,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring.go/IsDisposed,"""(*github.com/Workiva/go-datastructures/queue.RingBuffer).IsDisposed""",8,179,10,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/queue/queue_test.go/TestGetNonPositiveNumber,"""github.com/Workiva/go-datastructures/queue.TestGetNonPositiveNumber""",8,595,24,1,0,12,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTSingleDimensionInsertNegative,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTSingleDimensionInsertNegative""",3,397,35,1,0,16,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/TestRemove,"""github.com/Workiva/go-datastructures/trie/dtrie.TestRemove""",4,145,10,1,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/and.go/andSparseWithSparseBitArray,"""github.com/Workiva/go-datastructures/bitarray.andSparseWithSparseBitArray""",20,103,27,1,1,52,12,1,0,0,0,0,0,0,0,0,0,3,0,0,0,2,1,3,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/IsEmpty,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).IsEmpty""",20,308,7,0,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/Len,"""(*github.com/Workiva/go-datastructures/queue.Queue).Len""",8,360,3,0,1,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/rangetree/skiplist/skiplist.go/Get,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).Get""",3,413,3,1,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/Insert,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).Insert""",7,400,6,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/cache/cache.go/record,"""(*github.com/Workiva/go-datastructures/cache.cache).record""",2,182,6,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Tail,"""(*github.com/Workiva/go-datastructures/list.list).Tail""",2,235,4,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestMultipleGetEmpty,"""github.com/Workiva/go-datastructures/queue.TestMultipleGetEmpty""",8,595,20,1,0,33,20,0,0,0,0,0,0,2,0,0,0,1,0,2,0,1,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0
/augmentedtree/multidimensional_test.go/TestAddDeleteDuplicatesRebalanceInOrderMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddDeleteDuplicatesRebalanceInOrderMultiDimensions""",7,454,54,1,0,15,10,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/reset,"""(*github.com/Workiva/go-datastructures/btree/_link.nodes).reset""",7,290,5,0,0,6,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInsert3_4_5LateQuery,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsert3_4_5LateQuery""",7,412,28,1,0,10,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/sort.go/chunk,"""github.com/Workiva/go-datastructures/sort.chunk""",5,72,5,2,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/append,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).append""",14,476,6,1,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring.go/Get,"""(*github.com/Workiva/go-datastructures/queue.RingBuffer).Get""",8,179,3,0,2,34,8,1,0,0,0,0,0,0,0,0,0,2,0,0,0,3,1,3,1,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0
/rtree/hilbert/action.go/operation,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.removeAction).operation""",7,171,9,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/doubleRotate,"""github.com/Workiva/go-datastructures/augmentedtree.doubleRotate""",7,402,12,2,1,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestAddDeleteDuplicatesRebalanceInOrder,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddDeleteDuplicatesRebalanceInOrder""",7,630,39,1,0,14,10,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/Equals,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).Equals""",20,294,6,1,1,33,7,2,1,0,0,0,0,0,0,0,0,1,0,0,0,6,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/sort,"""(*github.com/Workiva/go-datastructures/btree/immutable.keySortWrapper).sort""",14,476,4,0,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/rtree/hilbert/node.go/withPosition,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.keys).withPosition""",7,347,12,1,2,10,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/search,"""(*github.com/Workiva/go-datastructures/btree/palm.node).search""",7,255,6,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/insert,"""(*github.com/Workiva/go-datastructures/btree/palm.keys).insert""",7,255,6,1,2,16,6,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/ByPosition,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).ByPosition""",7,424,10,1,1,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_examples_test.go/ExampleFloatingFibonacciHeap_Merge,"""github.com/Workiva/go-datastructures/fibheap.ExampleFloatingFibonacciHeap_Merge""",4,104,34,0,0,17,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block.go/nand,"""(github.com/Workiva/go-datastructures/bitarray.block).nand""",20,86,4,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/Get,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).Get""",7,544,3,1,1,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/list/persistent.go/Remove,"""(*github.com/Workiva/go-datastructures/list.list).Remove""",2,235,6,1,2,11,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/appendChild,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).appendChild""",14,476,11,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/Load,"""(*github.com/Workiva/go-datastructures/btree/immutable.delayedPersister).Load""",14,991,4,1,2,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/TestInternalNodeSplit3_4_5,"""github.com/Workiva/go-datastructures/btree/plus.TestInternalNodeSplit3_4_5""",7,204,26,1,0,10,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_examples_test.go/ExampleFloatingFibonacciHeap_IsEmpty,"""github.com/Workiva/go-datastructures/fibheap.ExampleFloatingFibonacciHeap_IsEmpty""",4,104,36,0,0,8,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/evaluate,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nelderMead).evaluate""",3,559,8,0,0,86,34,2,1,0,0,0,0,0,0,0,0,2,0,0,0,13,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block.go/and,"""(github.com/Workiva/go-datastructures/bitarray.block).and""",20,86,3,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block_test.go/TestBlockToNums,"""github.com/Workiva/go-datastructures/bitarray.TestBlockToNums""",20,34,15,1,0,11,6,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/nodeFromBytes,"""github.com/Workiva/go-datastructures/btree/immutable.nodeFromBytes""",14,476,13,2,2,9,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/popKey,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).popKey""",14,476,6,0,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Head,"""(*github.com/Workiva/go-datastructures/list.list).Head""",2,235,4,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/getConsoleLogger,"""github.com/Workiva/go-datastructures/btree/_link.getConsoleLogger""",7,253,16,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/checkTree,"""github.com/Workiva/go-datastructures/btree/palm.checkTree""",7,584,9,2,1,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge.go/symMerge,"""github.com/Workiva/go-datastructures/sort.symMerge""",5,196,8,2,0,16,5,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/inserted,"""(*github.com/Workiva/go-datastructures/trie/ctrie.lNode).inserted""",2,895,8,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/encoding.go/Marshal,"""github.com/Workiva/go-datastructures/bitarray.Marshal""",20,218,7,1,2,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/generateRandomItem,"""github.com/Workiva/go-datastructures/btree/immutable.generateRandomItem""",14,991,18,0,1,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestEnqueueDelete,"""github.com/Workiva/go-datastructures/fibheap.TestEnqueueDelete""",4,444,17,1,0,34,19,2,0,0,0,0,0,0,0,0,0,7,0,0,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestRootDeleteMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestRootDeleteMultiDimensions""",7,454,29,1,0,17,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/setHighest,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).setHighest""",20,294,10,0,0,15,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/and_test.go/TestAndDenseWithDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestAndDenseWithDenseBitArray""",20,189,29,1,0,24,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/TestInternalNodeLessThan3Keys,"""github.com/Workiva/go-datastructures/btree/plus.TestInternalNodeLessThan3Keys""",7,204,29,1,0,8,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestDeleteLateBranching,"""github.com/Workiva/go-datastructures/trie/xfast.TestDeleteLateBranching""",5,579,23,1,0,21,16,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/BenchmarkFibHeap_DequeueMin,"""github.com/Workiva/go-datastructures/fibheap.BenchmarkFibHeap_DequeueMin""",4,444,27,1,0,15,7,2,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable.go/InsertAtDimension,"""(*github.com/Workiva/go-datastructures/rangetree.immutableRangeTree).InsertAtDimension""",12,259,17,2,3,18,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict.go/Len,"""(*github.com/Workiva/go-datastructures/set.Set).Len""",2,136,3,0,1,8,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/augmentedtree/atree.go/add,"""(*github.com/Workiva/go-datastructures/augmentedtree.tree).add""",7,402,3,1,0,71,18,1,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_examples_test.go/ExampleFloatingFibonacciHeap_DequeueMin,"""github.com/Workiva/go-datastructures/fibheap.ExampleFloatingFibonacciHeap_DequeueMin""",4,104,39,0,0,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/entries.go/predecessor,"""(github.com/Workiva/go-datastructures/trie/yfast.Entries).predecessor""",7,142,11,1,2,21,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/splitAt,"""(*github.com/Workiva/go-datastructures/btree/_link.nodes).splitAt""",7,290,7,1,2,9,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/newApplyAction,"""github.com/Workiva/go-datastructures/btree/palm.newApplyAction""",7,199,14,2,1,9,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/trie/dtrie/node.go/String,"""(*github.com/Workiva/go-datastructures/trie/dtrie.collisionNode).String""",4,208,6,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/splitInternalAt,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).splitInternalAt""",14,476,15,1,2,17,7,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered.go/search,"""(github.com/Workiva/go-datastructures/rangetree.orderedNodes).search""",12,225,6,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/slice/skip/skip_test.go/TestIterAtPosition,"""github.com/Workiva/go-datastructures/slice/skip.TestIterAtPosition""",7,404,18,1,0,15,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/createRoot,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).createRoot""",14,212,10,0,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/rectangle.go/newRectangleFromRects,"""github.com/Workiva/go-datastructures/rtree/hilbert.newRectangleFromRects""",7,77,21,1,1,19,6,1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/reset,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).reset""",7,400,5,0,0,8,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/queue/queue_test.go/TestPeekOnDisposedQueue,"""github.com/Workiva/go-datastructures/queue.TestPeekOnDisposedQueue""",8,595,23,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/hilbert.go/chunkRectangles,"""github.com/Workiva/go-datastructures/rtree/hilbert.chunkRectangles""",7,63,15,2,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap_test.go/TestBitmap64_SetBit,"""github.com/Workiva/go-datastructures/bitarray.TestBitmap64_SetBit""",20,79,19,1,0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node_test.go/checkNode,"""github.com/Workiva/go-datastructures/btree/_link.checkNode""",7,148,9,2,1,36,21,2,0,0,0,0,0,0,0,0,0,1,0,0,0,7,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/Poll,"""(*github.com/Workiva/go-datastructures/queue.Queue).Poll""",8,360,4,2,2,53,15,0,0,1,1,2,0,0,0,2,4,1,0,2,0,5,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0
/btree/palm/tree_test.go/BenchmarkSimultaneousReadsAndWrites,"""github.com/Workiva/go-datastructures/btree/palm.BenchmarkSimultaneousReadsAndWrites""",7,584,35,1,0,26,13,3,1,0,0,0,0,1,0,0,0,6,0,1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/btree/palm/tree_test.go/BenchmarkGet,"""github.com/Workiva/go-datastructures/btree/palm.BenchmarkGet""",7,584,12,1,0,11,5,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/constructMultiDimensionQueryTestTree,"""github.com/Workiva/go-datastructures/augmentedtree.constructMultiDimensionQueryTestTree""",7,454,36,0,4,21,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/firstValue,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).firstValue""",14,476,10,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/prependValue,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).prependValue""",14,476,12,1,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/TestSparseIntersectsBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestSparseIntersectsBitArray""",20,294,28,1,0,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/apply,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).apply""",12,248,5,4,1,22,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/BenchmarkImmutableBulkInsert,"""github.com/Workiva/go-datastructures/tree/avl.BenchmarkImmutableBulkInsert""",5,372,28,1,0,11,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/Iterator,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).Iterator""",2,895,8,1,1,8,6,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestClearHighestLowest,"""github.com/Workiva/go-datastructures/bitarray.TestClearHighestLowest""",20,466,22,1,0,34,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/add.go/determinePaths,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).determinePaths""",14,303,14,1,2,44,23,4,2,0,0,0,0,1,0,0,0,1,0,2,3,3,0,0,0,0,1,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/numerics/optimization/nelder_mead.go/NelderMead,"""github.com/Workiva/go-datastructures/numerics/optimization.NelderMead""",3,559,10,1,1,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/selectable.go/GetResult,"""(*github.com/Workiva/go-datastructures/futures.Selectable).GetResult""",4,96,9,0,2,5,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/sort/symmerge_test.go/TestSymMergeUnevenListsWrongOrder,"""github.com/Workiva/go-datastructures/sort.TestSymMergeUnevenListsWrongOrder""",5,223,33,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie.go/KeyHash,"""(*github.com/Workiva/go-datastructures/trie/dtrie.entry).KeyHash""",4,74,7,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/copy,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).copy""",14,476,4,0,1,12,8,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/Len,"""(github.com/Workiva/go-datastructures/btree/immutable.orderedItems).Len""",14,991,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/New,"""github.com/Workiva/go-datastructures/queue.New""",8,360,3,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestMultipleInsertsCauseInternalSplitEvenAry,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestMultipleInsertsCauseInternalSplitEvenAry""",7,457,44,1,0,20,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/node.go/newNode,"""github.com/Workiva/go-datastructures/tree/avl.newNode""",5,34,7,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/deleteKeyAt,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).deleteKeyAt""",14,476,11,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/Query,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).Query""",12,248,5,1,1,9,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher.go/drainBatchChan,"""(*github.com/Workiva/go-datastructures/batcher.basicBatcher).drainBatchChan""",2,274,14,0,0,8,0,1,0,0,0,1,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent_test.go/TestRemove,"""github.com/Workiva/go-datastructures/list.TestRemove""",2,273,10,1,0,101,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/get,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).get""",3,413,3,1,1,21,7,1,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring.go/Offer,"""(*github.com/Workiva/go-datastructures/queue.RingBuffer).Offer""",8,179,5,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertMultiplePositiveIndexFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertMultiplePositiveIndexFirstDimension""",12,628,45,1,0,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie.go/Iterator,"""(*github.com/Workiva/go-datastructures/trie/dtrie.Dtrie).Iterator""",4,74,8,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/TestInsertPreviousBlockInSparse,"""github.com/Workiva/go-datastructures/bitarray.TestInsertPreviousBlockInSparse""",20,294,31,1,0,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Length,"""(*github.com/Workiva/go-datastructures/list.list).Length""",2,235,6,0,1,11,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/init,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).init""",3,413,4,1,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/needsSplit,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).needsSplit""",7,347,10,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher.go/IsDisposed,"""(*github.com/Workiva/go-datastructures/batcher.basicBatcher).IsDisposed""",2,274,10,0,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/operation,"""(*github.com/Workiva/go-datastructures/btree/palm.insertAction).operation""",7,199,9,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestGet,"""github.com/Workiva/go-datastructures/rangetree.TestGet""",12,628,7,1,0,8,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/BenchmarkLookup,"""github.com/Workiva/go-datastructures/trie/ctrie.BenchmarkLookup""",2,411,15,1,0,12,8,2,0,0,0,0,0,0,0,0,0,3,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0
/rangetree/skiplist/skiplist_test.go/generateMultiDimensionalEntries,"""github.com/Workiva/go-datastructures/rangetree/skiplist.generateMultiDimensionalEntries""",3,397,31,1,1,7,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/BenchmarkMultiDimensionInsertAtZeroDimension,"""github.com/Workiva/go-datastructures/rangetree/skiplist.BenchmarkMultiDimensionInsertAtZeroDimension""",3,397,44,1,0,11,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/mock_test.go/Next,"""(*github.com/Workiva/go-datastructures/slice/skip.mockIterator).Next""",7,49,4,0,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/query,"""(*github.com/Workiva/go-datastructures/augmentedtree.node).query""",7,402,5,4,0,12,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestInsertOutOfOrder,"""github.com/Workiva/go-datastructures/slice/skip.TestInsertOutOfOrder""",7,404,20,1,0,10,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node_gen.go/Msgsize,"""(*github.com/Workiva/go-datastructures/btree/immutable.Key).Msgsize""",14,304,7,0,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/split,"""(*github.com/Workiva/go-datastructures/btree/plus.lnode).split""",7,254,5,0,3,21,9,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/hilbert/hilbert_test.go/TestHilbert,"""github.com/Workiva/go-datastructures/numerics/hilbert.TestHilbert""",2,54,11,1,0,24,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead_test.go/TestNelderMeadConstrainedBadGuess,"""github.com/Workiva/go-datastructures/numerics/optimization.TestNelderMeadConstrainedBadGuess""",3,144,33,1,0,19,8,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/min,"""github.com/Workiva/go-datastructures/augmentedtree.min""",7,630,3,1,1,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestAddDeleteDuplicatesRebalanceRandomOrderMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddDeleteDuplicatesRebalanceRandomOrderMultiDimensions""",7,454,58,1,0,16,10,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/int64_test.go/TestSearch,"""github.com/Workiva/go-datastructures/slice.TestSearch""",2,38,10,1,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestEmptyGetWithDispose,"""github.com/Workiva/go-datastructures/queue.TestEmptyGetWithDispose""",8,595,23,1,0,21,11,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0
/queue/priority_queue_test.go/TestAddEmptyPriorityPut,"""github.com/Workiva/go-datastructures/queue.TestAddEmptyPriorityPut""",8,239,23,1,0,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/BenchmarkComplement,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkComplement""",20,466,19,1,0,8,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast_test.go/TestTrieSuccessor,"""github.com/Workiva/go-datastructures/trie/yfast.TestTrieSuccessor""",7,266,17,1,0,31,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/add.go/iterativeSplit,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).iterativeSplit""",14,303,14,1,1,9,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/BenchmarkInsert,"""github.com/Workiva/go-datastructures/btree/plus.BenchmarkInsert""",7,412,15,1,0,11,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/init,"""(*github.com/Workiva/go-datastructures/tree/avl.Immutable).init""",5,407,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/decreaseKeyUnchecked,"""github.com/Workiva/go-datastructures/fibheap.decreaseKeyUnchecked""",4,330,20,3,0,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/newNode,"""github.com/Workiva/go-datastructures/btree/palm.newNode""",7,255,7,3,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/BenchmarkGoInsertWithExpand,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.BenchmarkGoInsertWithExpand""",4,292,27,1,0,17,6,3,1,0,0,0,0,0,0,0,0,2,0,1,2,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue.go/Put,"""(*github.com/Workiva/go-datastructures/queue.PriorityQueue).Put""",8,242,3,1,1,36,9,2,0,0,1,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,1,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0
/sort/symmerge.go/decomposeForSymMerge,"""github.com/Workiva/go-datastructures/sort.decomposeForSymMerge""",5,196,20,2,3,13,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring.go/Len,"""(*github.com/Workiva/go-datastructures/queue.RingBuffer).Len""",8,179,3,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0
/rangetree/immutable.go/Delete,"""(*github.com/Workiva/go-datastructures/rangetree.immutableRangeTree).Delete""",12,259,6,1,1,13,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestMultipleInsertCausesSplitEvenAryReverseOrder,"""github.com/Workiva/go-datastructures/btree/_link.TestMultipleInsertCausesSplitEvenAryReverseOrder""",7,253,48,1,0,12,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/addNode,"""(*github.com/Workiva/go-datastructures/btree/palm.getAction).addNode""",7,199,7,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/threadsafe/err/error.go/Set,"""(*github.com/Workiva/go-datastructures/threadsafe/err.Error).Set""",2,33,3,1,0,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/trie/xfast/xfast.go/Max,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).Max""",5,587,3,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/toList,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).toList""",14,991,6,1,2,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Find,"""(*github.com/Workiva/go-datastructures/list.list).Find""",2,235,4,1,2,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/Capacity,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).Capacity""",20,294,8,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/NewBitArray,"""github.com/Workiva/go-datastructures/bitarray.NewBitArray""",20,294,11,2,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/ToNums,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).ToNums""",20,308,6,0,1,13,5,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue_test.go/TestPriorityPut,"""github.com/Workiva/go-datastructures/queue.TestPriorityPut""",8,239,15,1,0,15,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable.go/newImmutableRangeTree,"""github.com/Workiva/go-datastructures/rangetree.newImmutableRangeTree""",12,259,21,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/popValue,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).popValue""",14,476,8,0,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/constructMockKeys,"""github.com/Workiva/go-datastructures/btree/plus.constructMockKeys""",7,204,17,1,1,8,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/DequeueMin,"""(*github.com/Workiva/go-datastructures/fibheap.FloatingFibonacciHeap).DequeueMin""",4,330,10,0,2,100,10,5,2,0,0,0,0,0,0,0,0,2,0,2,0,7,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/generateMockEntries,"""github.com/Workiva/go-datastructures/tree/avl.generateMockEntries""",5,372,19,1,1,7,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/cleanMap,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).cleanMap""",7,544,8,1,0,6,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/insertAt,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.nodes).insertAt""",7,347,8,2,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/iterator.go/newBitArrayIterator,"""github.com/Workiva/go-datastructures/bitarray.newBitArrayIterator""",20,53,19,1,1,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestSplitAt,"""github.com/Workiva/go-datastructures/slice/skip.TestSplitAt""",7,404,11,1,0,17,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/sort_test.go/BenchmarkMultiThreadedSort,"""github.com/Workiva/go-datastructures/sort.BenchmarkMultiThreadedSort""",5,39,26,1,0,10,4,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/generateLevel,"""github.com/Workiva/go-datastructures/slice/skip.generateLevel""",7,424,13,1,1,10,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestTraverse,"""github.com/Workiva/go-datastructures/augmentedtree.TestTraverse""",7,630,12,1,0,20,12,2,0,0,0,0,0,0,0,0,0,3,0,0,1,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestDeleteAfterSplitDecreasing,"""github.com/Workiva/go-datastructures/btree/immutable.TestDeleteAfterSplitDecreasing""",14,991,30,1,0,17,12,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/insertAt,"""(*github.com/Workiva/go-datastructures/btree/palm.nodes).insertAt""",7,255,8,2,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/minUint64,"""github.com/Workiva/go-datastructures/btree/palm.minUint64""",7,199,9,1,1,9,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/len,"""(*github.com/Workiva/go-datastructures/btree/palm.keys).len""",7,255,3,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTInsertInZeroDimensionMultiDimensionList,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTInsertInZeroDimensionMultiDimensionList""",3,397,45,1,0,16,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestAddLargeNumbersMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddLargeNumbersMultiDimensions""",7,454,34,1,0,19,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/Reset,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).Reset""",20,308,5,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/constructMockComparators,"""github.com/Workiva/go-datastructures/sort.constructMockComparators""",5,223,24,1,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/key.go/insert,"""(*github.com/Workiva/go-datastructures/btree/_link.Keys).insert""",7,80,6,1,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/Len,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).Len""",7,424,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/bitarray/bitmap_test.go/TestBitmap64_PopCount,"""github.com/Workiva/go-datastructures/bitarray.TestBitmap64_PopCount""",20,79,21,1,0,11,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestOTAddReturnsOverwritten,"""github.com/Workiva/go-datastructures/rangetree.TestOTAddReturnsOverwritten""",12,628,27,1,0,24,20,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/int64.go/Exists,"""(github.com/Workiva/go-datastructures/slice.Int64Slice).Exists""",2,69,6,1,1,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/BenchmarkListInsert,"""github.com/Workiva/go-datastructures/trie/xfast.BenchmarkListInsert""",5,579,19,1,0,13,7,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap.go/GetBit,"""(github.com/Workiva/go-datastructures/bitarray.Bitmap32).GetBit""",20,59,6,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestMultipleInsertCausesCascadingSplitsOddAry,"""github.com/Workiva/go-datastructures/btree/_link.TestMultipleInsertCausesCascadingSplitsOddAry""",7,253,45,1,0,12,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/selectable.go/SetError,"""(*github.com/Workiva/go-datastructures/futures.Selectable).SetError""",4,96,8,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_examples_test.go/ExampleFloatingFibonacciHeap_Min,"""github.com/Workiva/go-datastructures/fibheap.ExampleFloatingFibonacciHeap_Min""",4,104,32,0,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/BenchmarkGoMapExists,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.BenchmarkGoMapExists""",4,292,20,1,0,21,6,3,1,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/evaluate,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nmVertex).evaluate""",3,559,8,1,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/Add,"""(*github.com/Workiva/go-datastructures/augmentedtree.tree).Add""",7,402,3,1,0,4,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/toBytes,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).toBytes""",14,212,7,0,1,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/TestInternalNodeSplit2_3_4,"""github.com/Workiva/go-datastructures/btree/plus.TestInternalNodeSplit2_3_4""",7,204,26,1,0,10,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/Insert,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).Insert""",7,246,6,1,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/TestDuplicateLeafNodeInsert,"""github.com/Workiva/go-datastructures/btree/plus.TestDuplicateLeafNodeInsert""",7,204,27,1,0,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/Cap,"""(*github.com/Workiva/go-datastructures/hashmap/fastinteger.FastIntegerHashMap).Cap""",4,153,3,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/Empty,"""(*github.com/Workiva/go-datastructures/queue.Queue).Empty""",8,360,5,0,1,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/btree/palm/action.go/complete,"""(*github.com/Workiva/go-datastructures/btree/palm.applyAction).complete""",7,199,8,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/bitarray/or_test.go/TestOrSparseWithSparseBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestOrSparseWithSparseBitArray""",20,257,30,1,0,47,28,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestInsertByPosition,"""github.com/Workiva/go-datastructures/slice/skip.TestInsertByPosition""",7,404,20,1,0,13,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestPredecessorLessThanKey,"""github.com/Workiva/go-datastructures/trie/xfast.TestPredecessorLessThanKey""",5,579,26,1,0,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/intervals_test.go/TestIntervalsDispose,"""github.com/Workiva/go-datastructures/augmentedtree.TestIntervalsDispose""",7,16,20,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/bitarray/nand_test.go/TestNandSparseWithDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestNandSparseWithDenseBitArray""",20,300,31,1,0,28,18,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/roundUp,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.roundUp""",4,153,7,1,1,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/keys,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.getAction).keys""",7,171,4,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestRightQuery,"""github.com/Workiva/go-datastructures/augmentedtree.TestRightQuery""",7,630,14,1,0,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestSetBitAtCapacity,"""github.com/Workiva/go-datastructures/bitarray.TestSetBitAtCapacity""",20,466,20,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent_test.go/TestFindIndex,"""github.com/Workiva/go-datastructures/list.TestFindIndex""",2,273,13,1,0,18,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/newSema,"""github.com/Workiva/go-datastructures/queue.newSema""",8,360,7,0,1,5,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/deleteRecursive,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).deleteRecursive""",3,413,15,3,1,29,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/Load,"""(*github.com/Workiva/go-datastructures/btree/immutable.ephemeral).Load""",14,991,4,1,2,14,7,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/futures/selectable.go/SetValue,"""(*github.com/Workiva/go-datastructures/futures.Selectable).SetValue""",4,96,8,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/Size,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).Size""",2,895,4,0,1,11,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableInsertNegativeIndexFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertNegativeIndexFirstDimension""",12,533,46,1,0,17,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/mock_test.go/ValueAtDimension,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.mockEntry).ValueAtDimension""",3,32,16,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/BenchmarkMultiDimensionBulkInsert,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkMultiDimensionBulkInsert""",12,533,33,1,0,15,9,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableInsertPositiveIndexSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertPositiveIndexSecondDimension""",12,533,47,1,0,12,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLDeleteNotLeaf,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLDeleteNotLeaf""",5,372,20,1,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/keys,"""(*github.com/Workiva/go-datastructures/btree/palm.applyAction).keys""",7,199,4,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/entries_test.go/TestEntriesSuccessor,"""github.com/Workiva/go-datastructures/trie/yfast.TestEntriesSuccessor""",7,134,20,1,0,27,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher_test.go/TestNoCalculateBytes,"""github.com/Workiva/go-datastructures/batcher.TestNoCalculateBytes""",2,163,20,1,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInsert3_4_5WithEarlyDuplicate,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsert3_4_5WithEarlyDuplicate""",7,412,37,1,0,13,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/cleanReadOnly,"""github.com/Workiva/go-datastructures/trie/ctrie.cleanReadOnly""",2,895,13,5,3,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/BenchmarkExecuteInParallel,"""github.com/Workiva/go-datastructures/queue.BenchmarkExecuteInParallel""",8,595,26,1,0,25,9,3,1,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/rangetree/immutable_test.go/TestImmutableSingleDimensionBulkAdd,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableSingleDimensionBulkAdd""",12,533,35,1,0,13,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/iter,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).iter""",7,424,4,1,1,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/sort.go/copyChunk,"""github.com/Workiva/go-datastructures/sort.copyChunk""",5,72,9,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/checkSuccessor,"""github.com/Workiva/go-datastructures/trie/xfast.checkSuccessor""",5,579,14,2,0,31,7,2,1,0,0,0,0,0,0,0,0,2,0,0,0,5,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/replaceKeyAt,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).replaceKeyAt""",14,476,12,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/copy,"""(github.com/Workiva/go-datastructures/btree/immutable.orderedItems).copy""",14,991,4,0,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/global.go/calculateSigma,"""github.com/Workiva/go-datastructures/numerics/optimization.calculateSigma""",3,168,14,1,1,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestInsertPredecessor,"""github.com/Workiva/go-datastructures/trie/xfast.TestInsertPredecessor""",5,579,21,1,0,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestDeleteMiddleBranchOtherSide,"""github.com/Workiva/go-datastructures/trie/xfast.TestDeleteMiddleBranchOtherSide""",5,579,31,1,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestInsert,"""github.com/Workiva/go-datastructures/trie/xfast.TestInsert""",5,579,10,1,0,18,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/and_test.go/TestAndSparseWithEmptyDense,"""github.com/Workiva/go-datastructures/bitarray.TestAndSparseWithEmptyDense""",20,189,27,1,0,13,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/Set,"""(*github.com/Workiva/go-datastructures/hashmap/fastinteger.FastIntegerHashMap).Set""",4,153,3,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable.go/needNextDimension,"""(*github.com/Workiva/go-datastructures/rangetree.immutableRangeTree).needNextDimension""",12,259,17,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/Len,"""(github.com/Workiva/go-datastructures/numerics/optimization.sorter).Len""",3,559,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/Compare,"""(github.com/Workiva/go-datastructures/rangetree/skiplist.skipEntry).Compare""",3,413,7,1,1,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestSimpleDelete,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestSimpleDelete""",7,457,16,1,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/BenchmarkInsert,"""github.com/Workiva/go-datastructures/trie/dtrie.BenchmarkInsert""",4,145,15,1,0,7,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/TestUpdate,"""github.com/Workiva/go-datastructures/trie/dtrie.TestUpdate""",4,145,10,1,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/search,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).search""",14,476,6,2,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/btree/immutable/query.go/Apply,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).Apply""",14,181,5,2,1,60,23,4,1,0,0,0,0,1,0,0,0,2,0,0,1,7,0,0,0,0,1,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/rangetree/immutable_test.go/TestImmutableMultiDimensionDelete,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableMultiDimensionDelete""",12,533,33,1,0,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie.go/Key,"""(*github.com/Workiva/go-datastructures/trie/dtrie.entry).Key""",4,74,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/entries_test.go/TestEntriesPredecessor,"""github.com/Workiva/go-datastructures/trie/yfast.TestEntriesPredecessor""",7,134,22,1,0,27,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/BenchmarkAddItemsMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.BenchmarkAddItemsMultiDimensions""",7,454,32,1,0,17,10,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/BenchmarkDenseIntersectsCompressed,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkDenseIntersectsCompressed""",20,466,34,1,0,15,8,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/delete,"""(github.com/Workiva/go-datastructures/btree/immutable.orderedItems).delete""",14,991,6,1,1,17,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/Reset,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).Reset""",20,294,5,0,0,5,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/mock_test.go/LowAtDimension,"""(*github.com/Workiva/go-datastructures/rangetree.mockInterval).LowAtDimension""",12,43,14,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertInvalidDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertInvalidDimension""",12,628,26,1,0,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/mock_test.go/constructSingleDimensionInterval,"""github.com/Workiva/go-datastructures/augmentedtree.constructSingleDimensionInterval""",7,43,32,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/path.go/pop,"""(*github.com/Workiva/go-datastructures/btree/immutable.path).pop""",14,49,3,0,1,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestGet,"""github.com/Workiva/go-datastructures/queue.TestGet""",8,595,7,1,0,31,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/delete,"""(*github.com/Workiva/go-datastructures/btree/palm.keys).delete""",7,255,6,1,1,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/traverse,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).traverse""",2,895,8,3,1,30,3,2,0,0,2,2,0,0,0,2,4,0,0,0,0,1,1,2,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/rotate,"""github.com/Workiva/go-datastructures/augmentedtree.rotate""",7,402,6,2,1,15,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap_test.go/BenchmarkBitmap32_PopCount,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkBitmap32_PopCount""",20,79,26,1,0,6,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestWaiters,"""github.com/Workiva/go-datastructures/queue.TestWaiters""",8,595,11,1,0,60,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/int64_test.go/TestExists,"""github.com/Workiva/go-datastructures/slice.TestExists""",2,38,10,1,0,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/evaluate,"""(github.com/Workiva/go-datastructures/numerics/optimization.vertices).evaluate""",3,559,8,1,0,6,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/Less,"""(github.com/Workiva/go-datastructures/numerics/optimization.sorter).Less""",3,559,4,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node_gen.go/Msgsize,"""(github.com/Workiva/go-datastructures/btree/immutable.ID).Msgsize""",14,304,7,0,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/InsertAtDimension,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).InsertAtDimension""",12,248,17,2,2,18,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue.go/Peek,"""(*github.com/Workiva/go-datastructures/queue.PriorityQueue).Peek""",8,242,4,0,1,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/rangetree/skiplist/skiplist_test.go/TestRTSingleDimensionDelete,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTSingleDimensionDelete""",3,397,27,1,0,10,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/insertAt,"""(*github.com/Workiva/go-datastructures/btree/_link.nodes).insertAt""",7,290,8,2,0,9,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/item.go/split,"""(github.com/Workiva/go-datastructures/btree/immutable.items).split""",14,16,5,1,1,6,9,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/rectangle.go/intersect,"""github.com/Workiva/go-datastructures/rtree/hilbert.intersect""",7,77,9,2,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/newNode,"""github.com/Workiva/go-datastructures/rtree/hilbert.newNode""",7,347,7,3,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestSimpleAddRootLeft,"""github.com/Workiva/go-datastructures/augmentedtree.TestSimpleAddRootLeft""",7,630,21,1,0,18,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/deleteValueAt,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).deleteValueAt""",14,476,13,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/mock_test.go/Compare,"""(github.com/Workiva/go-datastructures/queue.mockItem).Compare""",8,13,7,1,1,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/operation,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.insertAction).operation""",7,171,9,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/iterator.go/Next,"""(*github.com/Workiva/go-datastructures/bitarray.bitArrayIterator).Next""",20,53,4,0,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/query.go/iter,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).iter""",14,181,4,2,1,30,8,1,0,0,0,0,0,0,0,0,0,0,0,0,1,6,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/generateRandomVerticesFromGuess,"""github.com/Workiva/go-datastructures/numerics/optimization.generateRandomVerticesFromGuess""",3,559,31,2,1,53,17,3,2,0,0,0,0,0,0,0,0,2,1,1,1,3,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableSingleDimensionMultipleDeletes,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableSingleDimensionMultipleDeletes""",12,533,43,1,0,33,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/BenchmarkGet,"""github.com/Workiva/go-datastructures/btree/plus.BenchmarkGet""",7,412,12,1,0,13,6,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/push,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.nodes).push""",7,347,4,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/Len,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).Len""",7,400,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/rtree/hilbert/tree_test.go/TestMultipleInsertsCauseInternalSplitEvenAryRandomOrder,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestMultipleInsertsCauseInternalSplitEvenAryRandomOrder""",7,457,55,1,0,20,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/util.go/maxUint64,"""github.com/Workiva/go-datastructures/bitarray.maxUint64""",20,37,9,1,1,9,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestOutOfBounds,"""github.com/Workiva/go-datastructures/bitarray.TestOutOfBounds""",20,466,15,1,0,13,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInsertReverseOrder3_4_5,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsertReverseOrder3_4_5""",7,412,31,1,0,13,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/BenchmarkMultiDimensionDelete,"""github.com/Workiva/go-datastructures/rangetree/skiplist.BenchmarkMultiDimensionDelete""",3,397,29,1,0,11,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertMultipleNegativeIndexSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertMultipleNegativeIndexSecondDimension""",12,628,46,1,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLDeleteAll,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLDeleteAll""",5,372,16,1,0,15,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/entries_test.go/TestEntriesInsert,"""github.com/Workiva/go-datastructures/trie/yfast.TestEntriesInsert""",7,134,17,1,0,15,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/mock_test.go/Compare,"""(github.com/Workiva/go-datastructures/btree/_link.mockKey).Compare""",7,16,7,1,1,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/newNode,"""github.com/Workiva/go-datastructures/btree/immutable.newNode""",14,476,7,0,1,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree.go/Get,"""(*github.com/Workiva/go-datastructures/btree/plus.btree).Get""",7,97,3,1,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered.go/flatten,"""(github.com/Workiva/go-datastructures/rangetree.orderedNodes).flatten""",12,225,7,1,0,8,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInsert3_4_5WithDuplicateID,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsert3_4_5WithDuplicateID""",7,412,34,1,0,12,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestDeleteAllDuplicateHilbert,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestDeleteAllDuplicateHilbert""",7,457,29,1,0,15,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/Dispose,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).Dispose""",7,400,7,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/slice/skip/iterator.go/Value,"""(*github.com/Workiva/go-datastructures/slice/skip.iterator).Value""",7,56,5,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestAllQuery,"""github.com/Workiva/go-datastructures/augmentedtree.TestAllQuery""",7,630,12,1,0,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap.go/SetBit,"""(github.com/Workiva/go-datastructures/bitarray.Bitmap32).SetBit""",20,59,6,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/Delete,"""(*github.com/Workiva/go-datastructures/fibheap.FloatingFibonacciHeap).Delete""",4,330,6,1,1,13,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/BenchmarkGetCompressedBit,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkGetCompressedBit""",20,294,25,1,0,13,5,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/copyNode,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).copyNode""",14,212,8,1,1,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent_test.go/TestLength,"""github.com/Workiva/go-datastructures/list.TestLength""",2,273,10,1,0,8,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable.go/newCache,"""github.com/Workiva/go-datastructures/rangetree.newCache""",12,259,8,1,1,6,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered.go/insert,"""(*github.com/Workiva/go-datastructures/rangetree.orderedNodes).insert""",12,225,6,3,0,40,10,3,0,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/isRed,"""github.com/Workiva/go-datastructures/augmentedtree.isRed""",7,402,5,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/Commit,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).Commit""",14,212,6,0,2,16,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/newNode,"""github.com/Workiva/go-datastructures/trie/xfast.newNode""",5,587,7,2,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/checkNodes,"""github.com/Workiva/go-datastructures/trie/xfast.checkNodes""",5,579,10,2,0,10,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestSimpleQuery,"""github.com/Workiva/go-datastructures/augmentedtree.TestSimpleQuery""",7,630,15,1,0,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher_test.go/TestIsDisposed,"""github.com/Workiva/go-datastructures/batcher.TestIsDisposed""",2,163,14,1,0,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/Insert,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).Insert""",5,587,6,1,0,4,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/Delete,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).Delete""",5,587,6,1,0,4,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestLeftQuery,"""github.com/Workiva/go-datastructures/augmentedtree.TestLeftQuery""",7,630,13,1,0,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestMultipleInsertCausesCascadingSplitsEvenAry,"""github.com/Workiva/go-datastructures/btree/_link.TestMultipleInsertCausesCascadingSplitsEvenAry""",7,253,46,1,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/selectable_test.go/TestSelectableGetResult,"""github.com/Workiva/go-datastructures/futures.TestSelectableGetResult""",4,71,23,1,0,22,12,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/numerics/optimization/nelder_mead.go/evaluateWithConstraints,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nelderMead).evaluateWithConstraints""",3,559,23,2,1,15,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableInsertNegativeIndexOutOfBoundsFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertNegativeIndexOutOfBoundsFirstDimension""",12,533,57,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict.go/All,"""(*github.com/Workiva/go-datastructures/set.Set).All""",2,136,3,1,1,11,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/trie/ctrie/ctrie.go/ilookup,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).ilookup""",2,895,7,5,3,50,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,2,0,0,13,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap_test.go/TestBitmap32_SetBit,"""github.com/Workiva/go-datastructures/bitarray.TestBitmap32_SetBit""",20,79,19,1,0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestMultipleInsertCausesSplitOddAry,"""github.com/Workiva/go-datastructures/btree/_link.TestMultipleInsertCausesSplitOddAry""",7,253,35,1,0,11,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/cache/cache.go/noop,"""(*github.com/Workiva/go-datastructures/cache.cache).noop""",2,182,4,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestDisposeAfterEmptyPoll,"""github.com/Workiva/go-datastructures/queue.TestDisposeAfterEmptyPoll""",8,595,25,1,0,11,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTMultiDimensionAdd,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTMultiDimensionAdd""",3,397,23,1,0,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand_test.go/TestNandSparseWithEmptyDense,"""github.com/Workiva/go-datastructures/bitarray.TestNandSparseWithEmptyDense""",20,300,28,1,0,13,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/split,"""(*github.com/Workiva/go-datastructures/btree/_link.node).split""",7,290,5,0,3,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/BenchmarkDelete,"""github.com/Workiva/go-datastructures/slice/skip.BenchmarkDelete""",7,404,15,1,0,12,6,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/iterator.go/exhaust,"""(*github.com/Workiva/go-datastructures/slice/skip.iterator).exhaust""",7,56,7,0,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/insideContract,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nelderMead).insideContract""",3,559,14,2,1,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/insertAtPosition,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).insertAtPosition""",7,424,16,2,0,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/TestIterate,"""github.com/Workiva/go-datastructures/trie/dtrie.TestIterate""",4,145,11,1,0,28,10,3,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestDeleteRebalanceInOrder,"""github.com/Workiva/go-datastructures/augmentedtree.TestDeleteRebalanceInOrder""",7,630,26,1,0,19,13,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/Compare,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.lastBundle).Compare""",3,413,7,1,1,11,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/New,"""github.com/Workiva/go-datastructures/trie/ctrie.New""",2,895,3,1,1,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/Exists,"""(*github.com/Workiva/go-datastructures/hashmap/fastinteger.FastIntegerHashMap).Exists""",4,153,6,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/iter,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).iter""",14,476,4,2,1,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/replaceAt,"""(*github.com/Workiva/go-datastructures/btree/palm.nodes).replaceAt""",7,255,9,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestDeleteOnlyBranch,"""github.com/Workiva/go-datastructures/trie/xfast.TestDeleteOnlyBranch""",5,579,20,1,0,20,20,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/or_test.go/TestOrSparseWithEmptyDense,"""github.com/Workiva/go-datastructures/bitarray.TestOrSparseWithEmptyDense""",20,257,26,1,0,13,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/search,"""(*github.com/Workiva/go-datastructures/btree/_link.node).search""",7,290,6,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/init,"""github.com/Workiva/go-datastructures/btree/immutable.init""",14,991,4,0,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/TestInsertLNode,"""github.com/Workiva/go-datastructures/trie/ctrie.TestInsertLNode""",2,411,15,1,0,21,18,3,0,0,0,0,0,0,0,0,0,3,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0
/bitarray/nand_test.go/TestNandSparseWithEmptySparse,"""github.com/Workiva/go-datastructures/bitarray.TestNandSparseWithEmptySparse""",20,300,29,1,0,11,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/byPosition,"""(*github.com/Workiva/go-datastructures/btree/palm.keys).byPosition""",7,255,10,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableSingleDimensionDelete,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableSingleDimensionDelete""",12,533,34,1,0,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/BenchmarkPointInsertion,"""github.com/Workiva/go-datastructures/rtree/hilbert.BenchmarkPointInsertion""",7,457,23,1,0,10,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/overlaps,"""github.com/Workiva/go-datastructures/augmentedtree.overlaps""",7,402,8,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/BenchmarkGet,"""github.com/Workiva/go-datastructures/btree/_link.BenchmarkGet""",7,253,12,1,0,11,5,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/newRemoveAction,"""github.com/Workiva/go-datastructures/btree/palm.newRemoveAction""",7,199,15,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/deleteAt,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.keys).deleteAt""",7,347,8,1,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/casRoot,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).casRoot""",2,895,7,1,1,4,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/btree/_link/tree_test.go/TestMultipleInsertCausesSplitEvenAryRandomOrder,"""github.com/Workiva/go-datastructures/btree/_link.TestMultipleInsertCausesSplitEvenAryRandomOrder""",7,253,47,1,0,11,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/Query,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).Query""",3,413,5,1,1,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/BenchmarkSimultaneousReadsAndWrites,"""github.com/Workiva/go-datastructures/btree/plus.BenchmarkSimultaneousReadsAndWrites""",7,412,35,1,0,29,15,3,1,0,0,0,0,1,0,0,0,7,0,1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0
/rangetree/immutable_test.go/TestImmutableInsertNegativeIndexOutOfBoundsSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertNegativeIndexOutOfBoundsSecondDimension""",12,533,58,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/mock/rangetree.go/Len,"""(*github.com/Workiva/go-datastructures/mock.RangeTree).Len""",2,61,3,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/rects,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.insertAction).rects""",7,171,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/byPosition,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.keys).byPosition""",7,347,10,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/insert,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).insert""",7,347,6,1,1,36,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/TestLessThanTwoKeysSplit,"""github.com/Workiva/go-datastructures/btree/plus.TestLessThanTwoKeysSplit""",7,204,24,1,0,11,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/approximatelyEqualToVertex,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nmVertex).approximatelyEqualToVertex""",3,559,26,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/insert,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).insert""",2,895,6,1,0,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/TestDefaultHasher,"""github.com/Workiva/go-datastructures/trie/dtrie.TestDefaultHasher""",4,145,17,1,0,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node_gen.go/UnmarshalMsg,"""(*github.com/Workiva/go-datastructures/btree/immutable.ID).UnmarshalMsg""",14,304,12,1,2,11,3,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/Delete,"""(*github.com/Workiva/go-datastructures/hashmap/fastinteger.FastIntegerHashMap).Delete""",4,153,6,1,0,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/operationRunner,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).operationRunner""",7,400,15,2,0,8,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand_test.go/BenchmarkNandDenseWithDense,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkNandDenseWithDense""",20,300,27,1,0,18,8,2,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/nodes,"""(*github.com/Workiva/go-datastructures/btree/palm.applyAction).nodes""",7,199,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/add.go/add,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).add""",14,303,3,1,2,71,31,2,0,0,0,0,0,1,0,0,0,4,0,2,1,7,0,0,0,0,1,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0
/queue/priority_queue_test.go/TestMultiplePriorityGetEmpty,"""github.com/Workiva/go-datastructures/queue.TestMultiplePriorityGetEmpty""",8,239,28,1,0,34,25,0,0,0,0,0,0,2,0,0,0,1,0,2,0,1,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0
/numerics/optimization/nelder_mead.go/lastVertex,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nelderMead).lastVertex""",3,559,10,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/equal,"""(github.com/Workiva/go-datastructures/btree/immutable.orderedItems).equal""",14,991,5,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/nodes,"""(*github.com/Workiva/go-datastructures/btree/palm.getAction).nodes""",7,199,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/BenchmarkMultiDimensionRandomInsert,"""github.com/Workiva/go-datastructures/rangetree/skiplist.BenchmarkMultiDimensionRandomInsert""",3,397,35,1,0,10,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/iterAtPosition,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).iterAtPosition""",7,424,14,1,1,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/TestConcurrency,"""github.com/Workiva/go-datastructures/trie/ctrie.TestConcurrency""",2,411,15,1,0,29,19,3,0,0,0,0,0,2,0,0,0,4,0,3,0,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,0
/augmentedtree/atree_test.go/TestDeleteRebalanceOutOfOrder,"""github.com/Workiva/go-datastructures/augmentedtree.TestDeleteRebalanceOutOfOrder""",7,630,29,1,0,18,13,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestMultipleInsertCausesSplitOddAryRandomOrder,"""github.com/Workiva/go-datastructures/btree/_link.TestMultipleInsertCausesSplitOddAryRandomOrder""",7,253,46,1,0,11,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered.go/add,"""(*github.com/Workiva/go-datastructures/rangetree.orderedNodes).add""",12,225,3,1,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/entries_test.go/TestDisposeEntries,"""github.com/Workiva/go-datastructures/rangetree.TestDisposeEntries""",12,16,18,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/get,"""(github.com/Workiva/go-datastructures/bitarray.uintSlice).get""",20,308,3,1,1,11,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/deleteAtIndex,"""(*github.com/Workiva/go-datastructures/bitarray.blocks).deleteAtIndex""",20,308,13,1,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered_test.go/TestOrderedAdd,"""github.com/Workiva/go-datastructures/rangetree.TestOrderedAdd""",12,158,14,1,0,20,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/BenchmarkBitArrayToNums,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkBitArrayToNums""",20,466,23,1,0,12,6,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestMultipleInsertCausesSplitOddAryRandomOrder,"""github.com/Workiva/go-datastructures/btree/palm.TestMultipleInsertCausesSplitOddAryRandomOrder""",7,584,46,1,0,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestGet,"""github.com/Workiva/go-datastructures/trie/xfast.TestGet""",5,579,7,1,0,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/insert,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).insert""",7,246,6,1,1,27,7,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/key.go/splitAt,"""(*github.com/Workiva/go-datastructures/btree/_link.Keys).splitAt""",7,80,7,1,2,9,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree.go/get,"""(*github.com/Workiva/go-datastructures/btree/plus.btree).get""",7,97,3,1,1,11,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInsert3_4_5MiddleQuery,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsert3_4_5MiddleQuery""",7,412,30,1,0,10,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/entries.go/Dispose,"""(*github.com/Workiva/go-datastructures/rangetree.Entries).Dispose""",12,29,7,0,0,7,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/rangetree/immutable.go/get,"""(*github.com/Workiva/go-datastructures/rangetree.immutableRangeTree).get""",12,259,3,1,1,14,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/Add,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).Add""",3,413,3,1,1,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/checkIteration,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nelderMead).checkIteration""",3,559,14,1,1,33,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/Peek,"""(*github.com/Workiva/go-datastructures/queue.Queue).Peek""",8,360,4,0,2,14,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/queue/priority_queue_test.go/TestPriorityGetEmpty,"""github.com/Workiva/go-datastructures/queue.TestPriorityGetEmpty""",8,239,20,1,0,16,9,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered.go/get,"""(github.com/Workiva/go-datastructures/rangetree.orderedNodes).get""",12,225,3,1,2,11,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/reverseComparators,"""github.com/Workiva/go-datastructures/sort.reverseComparators""",5,223,18,1,1,6,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher.go/Put,"""(*github.com/Workiva/go-datastructures/batcher.basicBatcher).Put""",2,274,3,1,1,21,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/mock/rangetree.go/Get,"""(*github.com/Workiva/go-datastructures/mock.RangeTree).Get""",2,61,3,1,1,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/Insert,"""(*github.com/Workiva/go-datastructures/tree/avl.Immutable).Insert""",5,407,6,1,2,12,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/Successor,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).Successor""",7,246,9,1,1,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/IsEmpty,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).IsEmpty""",20,294,7,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Add,"""(*github.com/Workiva/go-datastructures/list.list).Add""",2,235,3,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestEmpty,"""github.com/Workiva/go-datastructures/queue.TestEmpty""",8,595,9,1,0,11,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/TestClear,"""github.com/Workiva/go-datastructures/set.TestClear""",2,221,9,1,0,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/entomb,"""github.com/Workiva/go-datastructures/trie/ctrie.entomb""",2,895,6,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/DecreaseKey,"""(*github.com/Workiva/go-datastructures/fibheap.FloatingFibonacciHeap).DecreaseKey""",4,330,11,2,2,17,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/BenchmarkFibHeap_Enqueue,"""github.com/Workiva/go-datastructures/fibheap.BenchmarkFibHeap_Enqueue""",4,444,24,1,0,7,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/hilbert/hilbert_test.go/TestHilbertAtMaxRange,"""github.com/Workiva/go-datastructures/numerics/hilbert.TestHilbertAtMaxRange""",2,54,21,1,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/String,"""(github.com/Workiva/go-datastructures/numerics/optimization.vertices).String""",3,559,6,0,1,8,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/BenchmarkQueuePoll,"""github.com/Workiva/go-datastructures/queue.BenchmarkQueuePoll""",8,595,18,1,0,20,9,4,2,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/global.go/calculateVVP,"""github.com/Workiva/go-datastructures/numerics/optimization.calculateVVP""",3,168,12,2,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring.go/NewRingBuffer,"""github.com/Workiva/go-datastructures/queue.NewRingBuffer""",8,179,13,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Get,"""(*github.com/Workiva/go-datastructures/list.emptyList).Get""",2,235,3,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/splitAt,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.nodes).splitAt""",7,347,7,1,2,9,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/entry,"""(*github.com/Workiva/go-datastructures/trie/ctrie.lNode).entry""",2,895,5,0,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestAddRebalanceInOrderMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddRebalanceInOrderMultiDimensions""",7,454,38,1,0,18,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/entries.go/delete,"""(*github.com/Workiva/go-datastructures/trie/yfast.Entries).delete""",7,142,6,1,1,15,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/insert,"""(*github.com/Workiva/go-datastructures/btree/plus.lnode).insert""",7,254,6,2,1,20,5,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLInsertRightLeaningDoubleRotation,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLInsertRightLeaningDoubleRotation""",5,372,39,1,0,21,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/readRoot,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).readRoot""",2,895,8,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/doubleRotate,"""github.com/Workiva/go-datastructures/tree/avl.doubleRotate""",5,407,12,2,1,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestInsertDuplicateIntervalsToRoot,"""github.com/Workiva/go-datastructures/augmentedtree.TestInsertDuplicateIntervalsToRoot""",7,630,34,1,0,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/needsDeletion,"""github.com/Workiva/go-datastructures/rangetree/skiplist.needsDeletion""",3,413,13,1,1,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestMergeVeryUnevenLists,"""github.com/Workiva/go-datastructures/sort.TestMergeVeryUnevenLists""",5,223,24,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/futures_test.go/TestHasResult,"""github.com/Workiva/go-datastructures/futures.TestHasResult""",4,83,13,1,0,17,12,0,0,1,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/fibheap/fibheap.go/IsEmpty,"""(*github.com/Workiva/go-datastructures/fibheap.FloatingFibonacciHeap).IsEmpty""",4,330,7,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue.go/Disposed,"""(*github.com/Workiva/go-datastructures/queue.PriorityQueue).Disposed""",8,242,8,0,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/btree/immutable/rt_test.go/pprint,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).pprint""",14,991,6,1,0,22,12,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestSimpleQuery,"""github.com/Workiva/go-datastructures/btree/palm.TestSimpleQuery""",7,584,15,1,0,17,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/cleanParent,"""github.com/Workiva/go-datastructures/trie/ctrie.cleanParent""",2,895,11,5,0,19,15,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0
/trie/dtrie/node.go/Value,"""(*github.com/Workiva/go-datastructures/trie/dtrie.collisionNode).Value""",4,208,5,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestPredecessorCloseToKey,"""github.com/Workiva/go-datastructures/trie/xfast.TestPredecessorCloseToKey""",5,579,25,1,0,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast_test.go/BenchmarkGet,"""github.com/Workiva/go-datastructures/trie/yfast.BenchmarkGet""",7,266,12,1,0,13,7,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/Delete,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).Delete""",3,413,6,1,1,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/mock_test.go/Value,"""(*github.com/Workiva/go-datastructures/slice/skip.mockIterator).Value""",7,49,5,0,1,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/BenchmarkPrepend,"""github.com/Workiva/go-datastructures/slice/skip.BenchmarkPrepend""",7,404,16,1,0,16,11,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/findMidpoint,"""github.com/Workiva/go-datastructures/numerics/optimization.findMidpoint""",3,559,12,1,1,15,5,2,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/mock_test.go/ID,"""(*github.com/Workiva/go-datastructures/rangetree.mockEntry).ID""",12,43,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/walkUpNode,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).walkUpNode""",5,587,10,1,0,11,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring_test.go/TestIntertwinedGetAndPut,"""github.com/Workiva/go-datastructures/queue.TestIntertwinedGetAndPut""",8,295,24,1,0,25,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree.go/newBTree,"""github.com/Workiva/go-datastructures/btree/plus.newBTree""",7,97,8,1,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInternalNodeSplit,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInternalNodeSplit""",7,412,25,1,0,10,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInternalNodeSplitReverseOrder,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInternalNodeSplitReverseOrder""",7,412,37,1,0,12,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestGenerativeOperations,"""github.com/Workiva/go-datastructures/btree/immutable.TestGenerativeOperations""",14,991,24,1,0,51,50,1,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/newGetAction,"""github.com/Workiva/go-datastructures/btree/palm.newGetAction""",7,199,12,1,1,9,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/trie/dtrie/node.go/Value,"""(*github.com/Workiva/go-datastructures/trie/dtrie.node).Value""",4,208,5,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue_test.go/TestInsertDuplicate,"""github.com/Workiva/go-datastructures/queue.TestInsertDuplicate""",8,239,19,1,0,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/IterAtPosition,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).IterAtPosition""",7,424,14,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/Iter,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).Iter""",7,424,4,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/resetPath,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).resetPath""",12,248,9,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/BenchmarkGetMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkGetMultiDimensions""",12,628,27,1,0,20,11,3,1,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict.go/Flatten,"""(*github.com/Workiva/go-datastructures/set.Set).Flatten""",2,136,7,0,1,13,5,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/btree/immutable/delete.go/DeleteItems,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).DeleteItems""",14,263,11,1,2,26,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestDeleteFromRoot,"""github.com/Workiva/go-datastructures/btree/immutable.TestDeleteFromRoot""",14,991,18,1,0,16,13,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTInsertZero,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTInsertZero""",3,397,16,1,0,9,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/search,"""(*github.com/Workiva/go-datastructures/btree/plus.inode).search""",7,254,6,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/insert,"""github.com/Workiva/go-datastructures/btree/_link.insert""",7,290,6,4,1,20,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/trie/yfast/yfast_test.go/BenchmarkDelete,"""github.com/Workiva/go-datastructures/trie/yfast.BenchmarkDelete""",7,266,15,1,0,10,7,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/Compare,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.dimensionalBundle).Compare""",3,413,7,1,1,11,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/mock_test.go/newMockEntry,"""github.com/Workiva/go-datastructures/trie/yfast.newMockEntry""",7,14,12,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/generateRandomKeys,"""github.com/Workiva/go-datastructures/btree/_link.generateRandomKeys""",7,253,18,1,1,7,6,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/popFirstKey,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).popFirstKey""",14,476,11,0,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/BenchmarkDelete,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.BenchmarkDelete""",4,292,15,1,0,20,9,4,2,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/Swap,"""(github.com/Workiva/go-datastructures/numerics/optimization.sorter).Swap""",3,559,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/BenchmarkExists,"""github.com/Workiva/go-datastructures/set.BenchmarkExists""",2,221,15,1,0,8,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestIter,"""github.com/Workiva/go-datastructures/slice/skip.TestIter""",7,404,8,1,0,21,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/BenchmarkAddItems,"""github.com/Workiva/go-datastructures/augmentedtree.BenchmarkAddItems""",7,630,17,1,0,15,9,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/getConsoleLogger,"""github.com/Workiva/go-datastructures/btree/palm.getConsoleLogger""",7,584,16,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/Min,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).Min""",5,587,3,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/recursiveMutate,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).recursiveMutate""",7,544,15,2,0,86,27,3,0,0,2,0,0,0,0,0,0,3,0,3,2,11,0,0,1,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/fibheap/fibheap_examples_test.go/ExampleFloatingFibonacciHeap_DecreaseKey,"""github.com/Workiva/go-datastructures/fibheap.ExampleFloatingFibonacciHeap_DecreaseKey""",4,104,40,0,0,11,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/lastDimensionVertex,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nelderMead).lastDimensionVertex""",3,559,19,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap_test.go/TestBitmap64_GetBit,"""github.com/Workiva/go-datastructures/bitarray.TestBitmap64_GetBit""",20,79,19,1,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/splitValues,"""github.com/Workiva/go-datastructures/btree/immutable.splitValues""",14,476,11,2,1,6,9,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand_test.go/BenchmarkNandSparseWithSparse,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkNandSparseWithSparse""",20,300,29,1,0,18,8,2,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/getTest,"""github.com/Workiva/go-datastructures/trie/dtrie.getTest""",4,145,7,3,0,6,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestPredecessorDoesNotExist,"""github.com/Workiva/go-datastructures/trie/xfast.TestPredecessorDoesNotExist""",5,579,27,1,0,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/Len,"""(github.com/Workiva/go-datastructures/bitarray.uintSlice).Len""",20,308,3,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead_test.go/TestNelderMeadPolynomial,"""github.com/Workiva/go-datastructures/numerics/optimization.TestNelderMeadPolynomial""",3,144,24,1,0,16,12,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered.go/immutableInsert,"""(github.com/Workiva/go-datastructures/rangetree.orderedNodes).immutableInsert""",12,225,15,3,1,52,16,3,0,0,0,0,0,0,0,0,0,1,0,1,0,4,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestSimpleAddNilRoot,"""github.com/Workiva/go-datastructures/augmentedtree.TestSimpleAddNilRoot""",7,630,20,1,0,13,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestDeleteMultipleLevels,"""github.com/Workiva/go-datastructures/btree/immutable.TestDeleteMultipleLevels""",14,991,24,1,0,32,26,2,1,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent_test.go/TestAdd,"""github.com/Workiva/go-datastructures/list.TestAdd""",2,273,7,1,0,52,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/insertNode,"""(*github.com/Workiva/go-datastructures/btree/_link.node).insertNode""",7,290,10,1,0,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/TestConcurrency2,"""github.com/Workiva/go-datastructures/trie/ctrie.TestConcurrency2""",2,411,16,1,0,39,24,4,0,0,0,0,0,4,0,0,0,5,0,2,0,1,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,6,0,0
/trie/yfast/mock_test.go/Key,"""(*github.com/Workiva/go-datastructures/trie/yfast.mockEntry).Key""",7,14,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree.go/get,"""(*github.com/Workiva/go-datastructures/btree/_link.blink).get""",7,129,3,1,1,15,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/btree/immutable/query.go/iterativeFind,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).iterativeFind""",14,181,13,2,2,28,5,1,0,0,0,0,0,0,0,0,0,4,2,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestSimultaneousReadsAndWrites,"""github.com/Workiva/go-datastructures/btree/palm.TestSimultaneousReadsAndWrites""",7,584,30,1,0,25,14,3,0,0,0,0,0,1,0,0,0,5,0,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/trie/xfast/xfast.go/Len,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).Len""",5,587,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/mock_test.go/checkDimension,"""(*github.com/Workiva/go-datastructures/augmentedtree.mockInterval).checkDimension""",7,43,14,1,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Insert,"""(*github.com/Workiva/go-datastructures/list.emptyList).Insert""",2,235,6,2,2,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableInsertPositiveIndexOutOfBoundsFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertPositiveIndexOutOfBoundsFirstDimension""",12,533,57,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/newInsertAction,"""github.com/Workiva/go-datastructures/rtree/hilbert.newInsertAction""",7,171,15,1,1,8,5,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/slice/skip/skip.go/searchByPosition,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).searchByPosition""",7,424,16,3,2,26,3,2,1,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/search,"""github.com/Workiva/go-datastructures/btree/_link.search""",7,290,6,2,1,12,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/btree/immutable/node_gen.go/MarshalMsg,"""(github.com/Workiva/go-datastructures/btree/immutable.Keys).MarshalMsg""",14,304,10,1,2,14,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/futures.go/GetResult,"""(*github.com/Workiva/go-datastructures/futures.Future).GetResult""",4,82,9,0,2,10,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0
/btree/_link/tree_test.go/BenchmarkSimpleAdd,"""github.com/Workiva/go-datastructures/btree/_link.BenchmarkSimpleAdd""",7,253,18,1,0,10,4,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/Len,"""(*github.com/Workiva/go-datastructures/btree/immutable.keySortWrapper).Len""",14,476,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/and_test.go/TestAndSparseWithSparseBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestAndSparseWithSparseBitArray""",20,189,31,1,0,39,26,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/BenchmarkClearCompressedBit,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkClearCompressedBit""",20,294,27,1,0,12,6,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/UpperRight,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).UpperRight""",7,347,10,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestGetByPosition,"""github.com/Workiva/go-datastructures/slice/skip.TestGetByPosition""",7,404,17,1,0,9,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestSuccessorIsExactValue,"""github.com/Workiva/go-datastructures/trie/xfast.TestSuccessorIsExactValue""",5,579,25,1,0,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/constructSingleDimensionTestTree,"""github.com/Workiva/go-datastructures/augmentedtree.constructSingleDimensionTestTree""",7,630,32,1,2,11,8,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestAddRebalanceRandomOrder,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddRebalanceRandomOrder""",7,630,27,1,0,14,11,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestDeleteEmptyTreeMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestDeleteEmptyTreeMultiDimensions""",7,454,34,1,0,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/newEntry,"""github.com/Workiva/go-datastructures/fibheap.newEntry""",4,330,8,1,1,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/nodes,"""(*github.com/Workiva/go-datastructures/btree/palm.insertAction).nodes""",7,199,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/iter,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).iter""",7,246,4,1,1,14,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/BenchmarkExists,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.BenchmarkExists""",4,292,15,1,0,16,7,3,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hash.go/hash,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.hash""",4,13,4,1,1,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestTakeUntil,"""github.com/Workiva/go-datastructures/queue.TestTakeUntil""",8,595,13,1,0,13,5,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/Int63,"""(*github.com/Workiva/go-datastructures/slice/skip.lockedSource).Int63""",7,424,5,0,1,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/bitarray/bitmap_test.go/TestBitmap32_ClearBit,"""github.com/Workiva/go-datastructures/bitarray.TestBitmap32_ClearBit""",20,79,21,1,0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring.go/Cap,"""(*github.com/Workiva/go-datastructures/queue.RingBuffer).Cap""",8,179,3,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent_test.go/TestEmptyList,"""github.com/Workiva/go-datastructures/list.TestEmptyList""",2,273,13,1,0,11,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertNegativeIndexOutOfBoundsFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertNegativeIndexOutOfBoundsFirstDimension""",12,628,48,1,0,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestSetHighestLowest,"""github.com/Workiva/go-datastructures/bitarray.TestSetHighestLowest""",20,466,20,1,0,16,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/get,"""(github.com/Workiva/go-datastructures/hashmap/fastinteger.packets).get""",4,153,3,1,2,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/generateRandomItems,"""github.com/Workiva/go-datastructures/btree/immutable.generateRandomItems""",14,991,19,1,1,13,5,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/Len,"""(*github.com/Workiva/go-datastructures/augmentedtree.tree).Len""",7,402,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast_test.go/TestTrieSimpleInsert,"""github.com/Workiva/go-datastructures/trie/yfast.TestTrieSimpleInsert""",7,266,20,1,0,22,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher_test.go/TestMaxTime,"""github.com/Workiva/go-datastructures/batcher.TestMaxTime""",2,163,11,1,0,24,16,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInsert2_3_4,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsert2_3_4""",7,412,19,1,0,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/BenchmarkMultiDimensionalGet,"""github.com/Workiva/go-datastructures/rangetree/skiplist.BenchmarkMultiDimensionalGet""",3,397,28,1,0,11,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/nodeExists,"""(*github.com/Workiva/go-datastructures/btree/immutable.context).nodeExists""",14,212,10,1,1,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/btree/palm/action.go/keys,"""(*github.com/Workiva/go-datastructures/btree/palm.insertAction).keys""",7,199,4,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableSingleDimensionAdd,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableSingleDimensionAdd""",12,533,31,1,0,14,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/New,"""github.com/Workiva/go-datastructures/augmentedtree.New""",7,402,3,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/ToNums,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).ToNums""",20,294,6,0,1,7,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/newGetAction,"""github.com/Workiva/go-datastructures/rtree/hilbert.newGetAction""",7,171,12,1,1,8,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/trie/dtrie/node.go/insert,"""github.com/Workiva/go-datastructures/trie/dtrie.insert""",4,208,6,2,1,51,23,0,0,0,0,0,0,0,0,0,0,1,1,1,0,8,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/flatten,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).flatten""",3,413,7,3,0,9,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/and_test.go/TestAndSparseWithDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestAndSparseWithDenseBitArray""",20,189,30,1,0,26,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/sort,"""(*github.com/Workiva/go-datastructures/btree/immutable.valueSortWrapper).sort""",14,991,4,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/btree/_link/node_test.go/TestSplitInternalNodeOddAry,"""github.com/Workiva/go-datastructures/btree/_link.TestSplitInternalNodeOddAry""",7,148,27,1,0,24,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/iterator.go/nilIterator,"""github.com/Workiva/go-datastructures/btree/plus.nilIterator""",7,52,11,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/equalToVertex,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nmVertex).equalToVertex""",3,559,13,1,1,8,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/generateKeys,"""github.com/Workiva/go-datastructures/btree/palm.generateKeys""",7,584,12,1,1,7,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/Len,"""(*github.com/Workiva/go-datastructures/hashmap/fastinteger.FastIntegerHashMap).Len""",4,153,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/adjustRanges,"""(*github.com/Workiva/go-datastructures/augmentedtree.node).adjustRanges""",7,402,12,0,0,8,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher.go/Get,"""(*github.com/Workiva/go-datastructures/batcher.basicBatcher).Get""",2,274,3,0,2,64,5,1,0,1,0,4,0,0,0,3,6,4,0,1,0,5,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/NewSparseBitArray,"""github.com/Workiva/go-datastructures/bitarray.NewSparseBitArray""",20,308,17,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/iterator.go/Value,"""(*github.com/Workiva/go-datastructures/trie/xfast.Iterator).Value""",5,44,5,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/new,"""github.com/Workiva/go-datastructures/rangetree/skiplist.new""",3,413,3,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/ID,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).ID""",14,212,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/iterator.go/nilIterator,"""github.com/Workiva/go-datastructures/slice/skip.nilIterator""",7,56,11,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestCommitAfterDelete,"""github.com/Workiva/go-datastructures/btree/immutable.TestCommitAfterDelete""",14,991,21,1,0,19,14,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/cache/cache.go/setElementIfNotNil,"""(*github.com/Workiva/go-datastructures/cache.cached).setElementIfNotNil""",2,182,18,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/cache/cache_test.go/TestPutGetRemoveSize,"""github.com/Workiva/go-datastructures/cache.TestPutGetRemoveSize""",2,122,20,1,0,73,47,1,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Insert,"""(*github.com/Workiva/go-datastructures/list.list).Insert""",2,235,6,2,2,9,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring_test.go/TestRingGetEmpty,"""github.com/Workiva/go-datastructures/queue.TestRingGetEmpty""",8,295,16,1,0,25,15,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0
/batcher/batcher.go/Lock,"""(*github.com/Workiva/go-datastructures/batcher.mutex).Lock""",2,274,4,0,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/apply,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).apply""",7,544,5,2,0,17,6,2,1,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/len,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.nodes).len""",7,347,3,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestMergeEmptyList,"""github.com/Workiva/go-datastructures/sort.TestMergeEmptyList""",5,223,18,1,0,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/newKeys,"""github.com/Workiva/go-datastructures/btree/palm.newKeys""",7,255,7,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/mock_test.go/ValueAtDimension,"""(*github.com/Workiva/go-datastructures/rangetree.mockEntry).ValueAtDimension""",12,43,16,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/global.go/calculateProbabilities,"""(github.com/Workiva/go-datastructures/numerics/optimization.pbs).calculateProbabilities""",3,168,22,2,0,4,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestSymMergeSmallLists,"""github.com/Workiva/go-datastructures/sort.TestSymMergeSmallLists""",5,223,22,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/resetDummy,"""(*github.com/Workiva/go-datastructures/tree/avl.Immutable).resetDummy""",5,407,10,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/TestCompressedEquals,"""github.com/Workiva/go-datastructures/bitarray.TestCompressedEquals""",20,294,20,1,0,14,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestFibHeap_DequeueMin_EmptyHeap,"""github.com/Workiva/go-datastructures/fibheap.TestFibHeap_DequeueMin_EmptyHeap""",4,444,32,1,0,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/Error,"""(github.com/Workiva/go-datastructures/fibheap.EmptyHeapError).Error""",4,330,5,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/resetMaxLevel,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).resetMaxLevel""",7,424,13,0,0,8,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/rectangle.go/equal,"""github.com/Workiva/go-datastructures/rtree/hilbert.equal""",7,77,5,1,1,8,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/TestAddClearsCache,"""github.com/Workiva/go-datastructures/set.TestAddClearsCache""",2,221,18,1,0,18,9,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestDecomposeForSymMergeEvenNumber,"""github.com/Workiva/go-datastructures/sort.TestDecomposeForSymMergeEvenNumber""",5,223,34,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/BenchmarkDelete,"""github.com/Workiva/go-datastructures/trie/xfast.BenchmarkDelete""",5,579,15,1,0,16,8,2,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/Traverse,"""(*github.com/Workiva/go-datastructures/augmentedtree.tree).Traverse""",7,402,8,1,0,16,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/Swap,"""(*github.com/Workiva/go-datastructures/btree/immutable.nodeSortWrapper).Swap""",14,476,4,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/Dispose,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).Dispose""",7,544,7,0,0,7,4,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0
/btree/plus/node.go/find,"""(*github.com/Workiva/go-datastructures/btree/plus.inode).find""",7,254,4,1,1,13,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestMergeUnevenOneListIsOne,"""github.com/Workiva/go-datastructures/sort.TestMergeUnevenOneListIsOne""",5,223,27,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher.go/ready,"""(*github.com/Workiva/go-datastructures/batcher.basicBatcher).ready""",2,274,5,0,1,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/checkNode,"""github.com/Workiva/go-datastructures/btree/palm.checkNode""",7,584,9,2,1,43,24,2,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/BenchmarkAdd,"""github.com/Workiva/go-datastructures/btree/palm.BenchmarkAdd""",7,584,12,1,0,10,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue.go/Len,"""(*github.com/Workiva/go-datastructures/queue.PriorityQueue).Len""",8,242,3,0,1,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/rangetree/orderedtree_test.go/constructMultiDimensionalOrderedTree,"""github.com/Workiva/go-datastructures/rangetree.constructMultiDimensionalOrderedTree""",12,628,36,1,2,13,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast_test.go/TestTrieDelete,"""github.com/Workiva/go-datastructures/trie/yfast.TestTrieDelete""",7,266,14,1,0,27,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/encoding.go/Deserialize,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).Deserialize""",20,218,11,1,1,34,7,1,0,0,0,0,0,0,0,0,0,2,0,0,0,5,0,0,0,0,0,7,0,1,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_gen.go/UnmarshalMsg,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).UnmarshalMsg""",14,86,12,1,2,44,8,1,0,0,0,0,0,0,0,0,0,1,0,1,0,7,1,5,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestDeleteAfterSplitIncreasing,"""github.com/Workiva/go-datastructures/btree/immutable.TestDeleteAfterSplitIncreasing""",14,991,30,1,0,15,12,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue.go/Get,"""(*github.com/Workiva/go-datastructures/queue.PriorityQueue).Get""",8,242,3,1,2,44,14,1,0,0,0,1,0,0,0,0,0,0,0,2,0,5,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0
/rangetree/immutable_test.go/TestImmutableInsertNegativeIndexSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertNegativeIndexSecondDimension""",12,533,47,1,0,17,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/getParent,"""github.com/Workiva/go-datastructures/rtree/hilbert.getParent""",7,347,9,3,1,32,6,2,0,0,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/BenchmarkGet,"""github.com/Workiva/go-datastructures/trie/dtrie.BenchmarkGet""",4,145,12,1,0,7,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/newContext,"""github.com/Workiva/go-datastructures/btree/immutable.newContext""",14,212,10,0,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/cache/cache.go/remove,"""(*github.com/Workiva/go-datastructures/cache.cache).remove""",2,182,6,1,0,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/get,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).get""",12,248,3,1,1,14,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestQueryDuplicate,"""github.com/Workiva/go-datastructures/augmentedtree.TestQueryDuplicate""",7,630,18,1,0,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestOverwriteOddAry,"""github.com/Workiva/go-datastructures/btree/_link.TestOverwriteOddAry""",7,253,19,1,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/splitInternal,"""(*github.com/Workiva/go-datastructures/btree/palm.node).splitInternal""",7,255,13,1,3,13,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/BenchmarkChannel,"""github.com/Workiva/go-datastructures/queue.BenchmarkChannel""",8,595,16,1,0,22,5,2,0,1,1,1,0,1,0,0,0,3,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/batcher/batcher.go/New,"""github.com/Workiva/go-datastructures/batcher.New""",2,274,3,3,2,14,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/Len,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).Len""",7,544,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/list/persistent.go/Map,"""(*github.com/Workiva/go-datastructures/list.emptyList).Map""",2,235,3,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/gcasComplete,"""github.com/Workiva/go-datastructures/trie/ctrie.gcasComplete""",2,895,12,3,1,42,28,1,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0
/bitarray/or.go/orSparseWithDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.orSparseWithDenseBitArray""",20,136,25,2,1,43,19,2,1,0,0,0,0,0,0,0,0,2,0,0,0,6,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/add,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).add""",3,413,3,1,1,38,12,1,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/mock/rangetree.go/Delete,"""(*github.com/Workiva/go-datastructures/mock.RangeTree).Delete""",2,61,6,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring_test.go/TestRingInsert,"""github.com/Workiva/go-datastructures/queue.TestRingInsert""",8,295,14,1,0,15,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/Exists,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).Exists""",5,587,6,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Length,"""(*github.com/Workiva/go-datastructures/list.emptyList).Length""",2,235,6,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/init,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).init""",7,544,4,1,0,16,14,1,0,2,0,0,0,1,0,0,0,1,0,2,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/queue/priority_queue.go/push,"""(*github.com/Workiva/go-datastructures/queue.priorityItems).push""",8,242,4,1,0,13,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/BenchmarkGoDelete,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.BenchmarkGoDelete""",4,292,17,1,0,20,8,4,2,0,0,0,0,0,0,0,0,2,0,1,2,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestDeleteMultipleLevelsRandomly,"""github.com/Workiva/go-datastructures/btree/immutable.TestDeleteMultipleLevelsRandomly""",14,991,32,1,0,23,17,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableInsertInvalidDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertInvalidDimension""",12,533,35,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/removed,"""(*github.com/Workiva/go-datastructures/trie/ctrie.cNode).removed""",2,895,7,2,1,13,5,2,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/BenchmarkEquality,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkEquality""",20,466,17,1,0,9,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestSimpleDelete,"""github.com/Workiva/go-datastructures/btree/palm.TestSimpleDelete""",7,584,16,1,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestEnqueueDecreaseKey,"""github.com/Workiva/go-datastructures/fibheap.TestEnqueueDecreaseKey""",4,444,22,1,0,32,19,2,0,0,0,0,0,0,0,0,0,6,0,0,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/key,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.dimensionalBundle).key""",3,413,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestAddRebalanceReverseOrderMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddRebalanceReverseOrderMultiDimensions""",7,454,43,1,0,18,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/query.go/filter,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).filter""",14,181,6,3,1,9,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue_test.go/TestAllowDuplicates,"""github.com/Workiva/go-datastructures/queue.TestAllowDuplicates""",8,239,19,1,0,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/needNextDimension,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).needNextDimension""",12,248,17,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestInsertDuplicateRect,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestInsertDuplicateRect""",7,457,23,1,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/BenchmarkSetCompressedBit,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkSetCompressedBit""",20,294,25,1,0,10,4,2,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/futures.go/listenForResult,"""github.com/Workiva/go-datastructures/futures.listenForResult""",4,82,15,4,0,10,7,0,0,0,0,2,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/queue/priority_queue_test.go/TestPriorityGetNonPositiveNumber,"""github.com/Workiva/go-datastructures/queue.TestPriorityGetNonPositiveNumber""",8,239,32,1,0,18,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict.go/init,"""github.com/Workiva/go-datastructures/set.init""",2,136,4,0,0,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/Insert,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).Insert""",7,424,6,1,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block.go/equals,"""(github.com/Workiva/go-datastructures/bitarray.block).equals""",20,86,6,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/operationRunner,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).operationRunner""",7,544,15,2,0,8,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/NewImmutable,"""github.com/Workiva/go-datastructures/tree/avl.NewImmutable""",5,407,12,0,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/renewed,"""(*github.com/Workiva/go-datastructures/trie/ctrie.cNode).renewed""",2,895,7,2,1,11,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/iterator.go/nilIterator,"""github.com/Workiva/go-datastructures/trie/yfast.nilIterator""",7,79,11,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher_test.go/TestMultiConsumer,"""github.com/Workiva/go-datastructures/batcher.TestMultiConsumer""",2,163,17,1,0,25,14,2,0,0,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/slice/skip/skip.go/search,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).search""",7,424,6,3,2,24,3,2,1,0,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestSimpleOverwrite,"""github.com/Workiva/go-datastructures/slice/skip.TestSimpleOverwrite""",7,404,19,1,0,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestNearCompleteDecomposeForSymMerge,"""github.com/Workiva/go-datastructures/sort.TestNearCompleteDecomposeForSymMerge""",5,223,36,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/BenchmarkInsert,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.BenchmarkInsert""",4,292,15,1,0,13,6,2,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/newOrderedTree,"""github.com/Workiva/go-datastructures/rangetree.newOrderedTree""",12,248,14,1,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestMultipleBulkInsertEvenAry,"""github.com/Workiva/go-datastructures/btree/palm.TestMultipleBulkInsertEvenAry""",7,584,29,1,0,17,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/hilbert/hilbert.go/boolToInt,"""github.com/Workiva/go-datastructures/numerics/hilbert.boolToInt""",2,61,9,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered.go/delete,"""(*github.com/Workiva/go-datastructures/rangetree.orderedNodes).delete""",12,225,6,1,1,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/node.go/reset,"""(github.com/Workiva/go-datastructures/tree/avl.nodes).reset""",5,34,5,0,0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestSimpleInsert,"""github.com/Workiva/go-datastructures/btree/_link.TestSimpleInsert""",7,253,16,1,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/keys,"""(*github.com/Workiva/go-datastructures/btree/palm.getAction).keys""",7,199,4,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/Nand,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).Nand""",20,308,4,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/key,"""(*github.com/Workiva/go-datastructures/btree/palm.node).key""",7,255,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestSwap,"""github.com/Workiva/go-datastructures/sort.TestSwap""",5,223,8,1,0,10,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/newEphemeral,"""github.com/Workiva/go-datastructures/btree/immutable.newEphemeral""",14,991,12,0,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/BenchmarkBulkAdd,"""github.com/Workiva/go-datastructures/btree/plus.BenchmarkBulkAdd""",7,412,16,1,0,10,4,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestInsertBetween,"""github.com/Workiva/go-datastructures/trie/xfast.TestInsertBetween""",5,579,17,1,0,41,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestOTAddReverseOrderMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.TestOTAddReverseOrderMultiDimensions""",12,628,36,1,0,10,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict.go/Exists,"""(*github.com/Workiva/go-datastructures/set.Set).Exists""",2,136,6,1,1,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/sort/symmerge.go/swap,"""github.com/Workiva/go-datastructures/sort.swap""",5,196,4,2,0,4,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestFibHeap_DecreaseKey_NilNode,"""github.com/Workiva/go-datastructures/fibheap.TestFibHeap_DecreaseKey_NilNode""",4,444,31,1,0,8,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/Successor,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).Successor""",5,587,9,1,1,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/executeInterfacesInParallel,"""github.com/Workiva/go-datastructures/rtree/hilbert.executeInterfacesInParallel""",7,171,27,2,0,32,17,2,1,0,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0
/rtree/hilbert/tree_test.go/BenchmarkQueryPoints,"""github.com/Workiva/go-datastructures/rtree/hilbert.BenchmarkQueryPoints""",7,457,20,1,0,11,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/Swap,"""(github.com/Workiva/go-datastructures/btree/immutable.orderedItems).Swap""",14,991,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestInsertAndDelete,"""github.com/Workiva/go-datastructures/btree/palm.TestInsertAndDelete""",7,584,19,1,0,26,22,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0
/rtree/hilbert/tree_test.go/TestDeleteIdenticalHilbergNumber,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestDeleteIdenticalHilbergNumber""",7,457,32,1,0,15,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/assertReadWrite,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).assertReadWrite""",2,895,15,0,0,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/New,"""github.com/Workiva/go-datastructures/trie/yfast.New""",7,246,3,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestDeleteRebalanceReverseOrderMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestDeleteRebalanceReverseOrderMultiDimensions""",7,454,46,1,0,25,13,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/constructMockNodes,"""github.com/Workiva/go-datastructures/btree/plus.constructMockNodes""",7,204,18,1,1,18,5,2,1,0,0,0,0,0,0,0,0,2,1,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/checkNode,"""github.com/Workiva/go-datastructures/trie/xfast.checkNode""",5,579,9,3,0,13,7,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestOTDeleteRandomOrderMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.TestOTDeleteRandomOrderMultiDimensions""",12,628,38,1,0,19,15,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/complement,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).complement""",20,294,10,0,0,9,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/contextOrCachedNode,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).contextOrCachedNode""",14,212,19,2,2,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/New,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.New""",4,153,3,1,1,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/Seed,"""(*github.com/Workiva/go-datastructures/slice/skip.lockedSource).Seed""",7,424,4,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/trie/yfast/entries_test.go/TestEntriesGet,"""github.com/Workiva/go-datastructures/trie/yfast.TestEntriesGet""",7,134,14,1,0,16,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/splitInternal,"""(*github.com/Workiva/go-datastructures/btree/_link.node).splitInternal""",7,290,13,0,3,27,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/key,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).key""",7,347,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/BenchmarkSuccessor,"""github.com/Workiva/go-datastructures/trie/xfast.BenchmarkSuccessor""",5,579,18,1,0,13,9,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableInsertPositiveIndexFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertPositiveIndexFirstDimension""",12,533,46,1,0,12,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestMergeVeryUnevenListIsSubsetReverseOrder,"""github.com/Workiva/go-datastructures/sort.TestMergeVeryUnevenListIsSubsetReverseOrder""",5,223,43,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/mock_test.go/HighAtDimension,"""(*github.com/Workiva/go-datastructures/augmentedtree.mockInterval).HighAtDimension""",7,43,15,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestRootAddMultipleDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestRootAddMultipleDimensions""",7,454,29,1,0,22,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/newInsertAction,"""github.com/Workiva/go-datastructures/btree/palm.newInsertAction""",7,199,15,1,1,10,7,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/trie/yfast/yfast_test.go/BenchmarkPredecessor,"""github.com/Workiva/go-datastructures/trie/yfast.BenchmarkPredecessor""",7,266,20,1,0,16,12,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/resetDummy,"""(*github.com/Workiva/go-datastructures/augmentedtree.tree).resetDummy""",7,402,10,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/BenchmarkGoMapInsert,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.BenchmarkGoMapInsert""",4,292,20,1,0,13,5,2,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/Get,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).Get""",7,424,3,1,1,14,6,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestMultipleInsert,"""github.com/Workiva/go-datastructures/btree/_link.TestMultipleInsert""",7,253,18,1,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/delete,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).delete""",14,476,6,2,1,10,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestInsertDuplicateIntervalChildren,"""github.com/Workiva/go-datastructures/augmentedtree.TestInsertDuplicateIntervalChildren""",7,630,35,1,0,12,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/key.go/needsSplit,"""(github.com/Workiva/go-datastructures/btree/_link.Keys).needsSplit""",7,80,10,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hash_test.go/TestHash,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.TestHash""",4,56,8,1,0,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/iterator.go/Value,"""(*github.com/Workiva/go-datastructures/trie/yfast.Iterator).Value""",7,79,5,0,1,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/mock_test.go/OverlapsAtDimension,"""(*github.com/Workiva/go-datastructures/augmentedtree.mockInterval).OverlapsAtDimension""",7,43,19,2,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node_test.go/TestSplitInternalNodeEvenAry,"""github.com/Workiva/go-datastructures/btree/_link.TestSplitInternalNodeEvenAry""",7,148,28,1,0,26,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/selectable.go/NewSelectable,"""github.com/Workiva/go-datastructures/futures.NewSelectable""",4,96,13,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge.go/symBinarySearch,"""github.com/Workiva/go-datastructures/sort.symBinarySearch""",5,196,15,2,1,11,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/constructSingleDimensionQueryTestTree,"""github.com/Workiva/go-datastructures/augmentedtree.constructSingleDimensionQueryTestTree""",7,630,37,0,4,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/util.go/minUint64,"""github.com/Workiva/go-datastructures/bitarray.minUint64""",20,37,9,1,1,9,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/insertAt,"""(*github.com/Workiva/go-datastructures/btree/plus.keys).insertAt""",7,254,8,2,0,9,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/and.go/andSparseWithDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.andSparseWithDenseBitArray""",20,103,26,2,1,31,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/generateKeys,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.generateKeys""",4,292,12,1,1,10,8,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie.go/Value,"""(*github.com/Workiva/go-datastructures/trie/dtrie.entry).Value""",4,74,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/New,"""github.com/Workiva/go-datastructures/btree/immutable.New""",14,212,3,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/int64.go/Swap,"""(github.com/Workiva/go-datastructures/slice.Int64Slice).Swap""",2,69,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/sort_test.go/TestMultiThreadedSortOddNumber,"""github.com/Workiva/go-datastructures/sort.TestMultiThreadedSortOddNumber""",5,39,30,1,0,8,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/node.go/pushEntries,"""github.com/Workiva/go-datastructures/trie/dtrie.pushEntries""",4,208,11,3,0,30,8,2,1,0,2,2,0,1,0,2,4,1,0,0,0,0,1,3,0,0,1,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/trie/xfast/xfast_test.go/BenchmarkListSearch,"""github.com/Workiva/go-datastructures/trie/xfast.BenchmarkListSearch""",5,579,19,1,0,13,7,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/BenchmarkDeleteItemsMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.BenchmarkDeleteItemsMultiDimensions""",7,454,35,1,0,23,12,3,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/or_test.go/BenchmarkOrDenseWithDense,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkOrDenseWithDense""",20,257,25,1,0,21,8,2,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/TestSparseEqualsBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestSparseEqualsBitArray""",20,294,24,1,0,17,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast_test.go/BenchmarkInsert,"""github.com/Workiva/go-datastructures/trie/yfast.BenchmarkInsert""",7,266,15,1,0,9,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/hilbert/hilbert.go/rotate,"""github.com/Workiva/go-datastructures/numerics/hilbert.rotate""",2,61,6,2,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/findMin,"""github.com/Workiva/go-datastructures/numerics/optimization.findMin""",3,559,7,1,1,9,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertPositiveIndexSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertPositiveIndexSecondDimension""",12,628,38,1,0,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/print,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).print""",7,457,5,1,0,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast_test.go/TestTrieOverwriteInsert,"""github.com/Workiva/go-datastructures/trie/yfast.TestTrieOverwriteInsert""",7,266,23,1,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestDeleteCenter,"""github.com/Workiva/go-datastructures/augmentedtree.TestDeleteCenter""",7,630,16,1,0,11,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/splitLeaf,"""(*github.com/Workiva/go-datastructures/btree/_link.node).splitLeaf""",7,290,9,0,3,11,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeRandomOrderQuery,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeRandomOrderQuery""",7,412,24,1,0,18,12,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/searchKey,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).searchKey""",14,476,9,2,2,16,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertPositiveIndexOutOfBoundsFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertPositiveIndexOutOfBoundsFirstDimension""",12,628,48,1,0,10,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertMultiplePositiveIndexSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertMultiplePositiveIndexSecondDimension""",12,628,46,1,0,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/BenchmarkDeleteItems,"""github.com/Workiva/go-datastructures/augmentedtree.BenchmarkDeleteItems""",7,630,20,1,0,21,12,3,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestMultipleInsertCausesCascadingSplitsOddAryReverseOrder,"""github.com/Workiva/go-datastructures/btree/_link.TestMultipleInsertCausesCascadingSplitsOddAryReverseOrder""",7,253,57,1,0,14,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestMergeVeryUnevenListsWrongOrder,"""github.com/Workiva/go-datastructures/sort.TestMergeVeryUnevenListsWrongOrder""",5,223,34,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/insert,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).insert""",7,424,6,1,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/entries.go/successor,"""(github.com/Workiva/go-datastructures/trie/yfast.Entries).successor""",7,142,9,1,2,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/key.go/first,"""(github.com/Workiva/go-datastructures/btree/_link.Keys).first""",7,80,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestOTAddInOrderMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.TestOTAddInOrderMultiDimensions""",12,628,31,1,0,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/node.go/newNode,"""github.com/Workiva/go-datastructures/slice/skip.newNode""",7,34,7,2,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/splitAt,"""(*github.com/Workiva/go-datastructures/btree/palm.nodes).splitAt""",7,255,7,1,2,9,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Map,"""(*github.com/Workiva/go-datastructures/list.list).Map""",2,235,3,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/mock/batcher.go/IsDisposed,"""(*github.com/Workiva/go-datastructures/mock.Batcher).IsDisposed""",2,41,10,0,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/hilbert/hilbert.go/Decode,"""github.com/Workiva/go-datastructures/numerics/hilbert.Decode""",2,61,6,1,2,15,8,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/global.go/newResults,"""github.com/Workiva/go-datastructures/numerics/optimization.newResults""",3,168,10,3,1,14,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestOverwriteEvenAry,"""github.com/Workiva/go-datastructures/btree/_link.TestOverwriteEvenAry""",7,253,20,1,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/TestIterator,"""github.com/Workiva/go-datastructures/trie/ctrie.TestIterator""",2,411,12,1,0,45,18,3,0,1,0,3,1,0,0,0,0,3,0,1,1,2,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
/trie/ctrie/ctrie.go/resurrect,"""github.com/Workiva/go-datastructures/trie/ctrie.resurrect""",2,895,9,2,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/iterator.go/Next,"""(*github.com/Workiva/go-datastructures/trie/xfast.Iterator).Next""",5,44,4,0,1,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/Blocks,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).Blocks""",20,294,6,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/find,"""(github.com/Workiva/go-datastructures/hashmap/fastinteger.packets).find""",4,153,4,1,1,8,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/and.go/andDenseWithDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.andDenseWithDenseBitArray""",20,103,25,1,1,13,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/IntersectsBetween,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).IntersectsBetween""",20,308,17,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/selectable.go/Cancel,"""(*github.com/Workiva/go-datastructures/futures.Selectable).Cancel""",4,96,6,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestTakeUntilThenGet,"""github.com/Workiva/go-datastructures/queue.TestTakeUntilThenGet""",8,595,20,1,0,10,6,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/TestExists_WithNewItems,"""github.com/Workiva/go-datastructures/set.TestExists_WithNewItems""",2,221,23,1,0,14,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestComplement,"""github.com/Workiva/go-datastructures/bitarray.TestComplement""",20,466,14,1,0,14,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/print,"""(*github.com/Workiva/go-datastructures/btree/_link.node).print""",7,290,5,1,0,11,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/selectable.go/WaitChan,"""(*github.com/Workiva/go-datastructures/futures.Selectable).WaitChan""",4,96,8,0,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/fibheap/fibheap.go/Error,"""(github.com/Workiva/go-datastructures/fibheap.NilError).Error""",4,330,5,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/delete,"""(*github.com/Workiva/go-datastructures/tree/avl.Immutable).delete""",5,407,6,1,1,105,13,4,0,0,0,0,0,0,0,0,0,2,0,1,0,12,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/collisionHash,"""github.com/Workiva/go-datastructures/trie/dtrie.collisionHash""",4,145,13,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node_test.go/checkTree,"""github.com/Workiva/go-datastructures/btree/_link.checkTree""",7,148,9,2,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/search,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).search""",7,347,6,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestSuccessorDoesNotExist,"""github.com/Workiva/go-datastructures/trie/xfast.TestSuccessorDoesNotExist""",5,579,25,1,0,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestInsertDuplicateHilbert,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestInsertDuplicateHilbert""",7,457,26,1,0,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree.go/newTree,"""github.com/Workiva/go-datastructures/btree/_link.newTree""",7,129,7,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/splitAt,"""(*github.com/Workiva/go-datastructures/btree/palm.keys).splitAt""",7,255,7,1,2,9,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestOTAddRandomOrderMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.TestOTAddRandomOrderMultiDimensions""",12,628,35,1,0,12,11,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestDuplicateOperation,"""github.com/Workiva/go-datastructures/bitarray.TestDuplicateOperation""",20,466,22,1,0,40,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestMergeVeryUnevenListIsSubset,"""github.com/Workiva/go-datastructures/sort.TestMergeVeryUnevenListIsSubset""",5,223,31,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/treeFromBytes,"""github.com/Workiva/go-datastructures/btree/immutable.treeFromBytes""",14,212,13,3,2,15,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/node.go/Compare,"""(*github.com/Workiva/go-datastructures/slice/skip.node).Compare""",7,34,7,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/remove,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).remove""",2,895,6,1,2,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree.go/multithreadedInsert,"""(*github.com/Workiva/go-datastructures/btree/_link.blink).multithreadedInsert""",7,129,19,1,1,24,16,2,1,0,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/rtree/hilbert/node.go/splitInternal,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).splitInternal""",7,347,13,1,3,17,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/BenchmarkBulkUpdatePoints,"""github.com/Workiva/go-datastructures/rtree/hilbert.BenchmarkBulkUpdatePoints""",7,457,25,1,0,11,5,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/node.go/KeyHash,"""(*github.com/Workiva/go-datastructures/trie/dtrie.collisionNode).KeyHash""",4,208,7,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/global.go/Less,"""(github.com/Workiva/go-datastructures/numerics/optimization.pbs).Less""",3,168,4,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/global.go/Len,"""(github.com/Workiva/go-datastructures/numerics/optimization.pbs).Len""",3,168,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/TestLen,"""github.com/Workiva/go-datastructures/set.TestLen""",2,221,7,1,0,12,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/iterator.go/iterExhausted,"""github.com/Workiva/go-datastructures/trie/yfast.iterExhausted""",7,79,13,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestSecondCommitMultipleSplits,"""github.com/Workiva/go-datastructures/btree/immutable.TestSecondCommitMultipleSplits""",14,991,30,1,0,26,22,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/btree/palm/tree_test.go/generateRandomKeys,"""github.com/Workiva/go-datastructures/btree/palm.generateRandomKeys""",7,584,18,1,1,7,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/constructMockPayloads,"""github.com/Workiva/go-datastructures/btree/plus.constructMockPayloads""",7,204,21,1,1,7,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/last,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.keys).last""",7,347,4,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher.go/Flush,"""(*github.com/Workiva/go-datastructures/batcher.basicBatcher).Flush""",2,274,5,0,1,10,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/pop,"""(*github.com/Workiva/go-datastructures/btree/_link.nodes).pop""",7,290,3,0,1,9,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node_gen.go/Msgsize,"""(github.com/Workiva/go-datastructures/btree/immutable.Keys).Msgsize""",14,304,7,0,1,10,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/Search,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).Search""",7,400,6,1,1,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/trie/yfast/entries.go/get,"""(github.com/Workiva/go-datastructures/trie/yfast.Entries).get""",7,142,3,1,1,11,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/BenchmarkBulkAddToExisting,"""github.com/Workiva/go-datastructures/btree/palm.BenchmarkBulkAddToExisting""",7,584,26,1,0,14,6,2,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/euclideanDistance,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nmVertex).euclideanDistance""",3,559,17,1,1,9,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestApplyWithBail,"""github.com/Workiva/go-datastructures/rangetree.TestApplyWithBail""",12,628,17,1,0,13,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/iterator.go/Next,"""(*github.com/Workiva/go-datastructures/trie/yfast.Iterator).Next""",7,79,4,0,1,21,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/toItems,"""(github.com/Workiva/go-datastructures/btree/immutable.orderedItems).toItems""",14,991,7,0,1,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/mergeLists,"""github.com/Workiva/go-datastructures/fibheap.mergeLists""",4,330,10,1,1,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/BenchmarkImmutableInsertFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkImmutableInsertFirstDimension""",12,533,38,1,0,10,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/normalizeComparison,"""github.com/Workiva/go-datastructures/tree/avl.normalizeComparison""",5,407,19,1,1,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestMask,"""github.com/Workiva/go-datastructures/trie/xfast.TestMask""",5,579,8,1,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/BenchmarkSparseBitArrayToNums,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkSparseBitArrayToNums""",20,294,29,1,0,12,6,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue_test.go/TestPriorityEmpty,"""github.com/Workiva/go-datastructures/queue.TestPriorityEmpty""",8,239,17,1,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/takeOpposite,"""github.com/Workiva/go-datastructures/tree/avl.takeOpposite""",5,407,12,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInsert3_4_5_WithEndDuplicate,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsert3_4_5_WithEndDuplicate""",7,412,36,1,0,13,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_examples_test.go/ExampleFloatingFibonacciHeap_Delete,"""github.com/Workiva/go-datastructures/fibheap.ExampleFloatingFibonacciHeap_Delete""",4,104,35,0,0,12,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/BenchmarkInsertWithExpand,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.BenchmarkInsertWithExpand""",4,292,25,1,0,17,7,3,1,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue.go/Empty,"""(*github.com/Workiva/go-datastructures/queue.PriorityQueue).Empty""",8,242,5,0,1,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/bitarray/bitmap.go/PopCount,"""(github.com/Workiva/go-datastructures/bitarray.Bitmap64).PopCount""",20,59,8,0,1,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap_test.go/TestBitmap32_PopCount,"""github.com/Workiva/go-datastructures/bitarray.TestBitmap32_PopCount""",20,79,21,1,0,11,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/cacher.go/getNode,"""(*github.com/Workiva/go-datastructures/btree/immutable.cacher).getNode""",14,117,7,3,2,36,13,0,0,1,0,0,0,1,0,0,0,0,0,0,0,5,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/hashmap/fastinteger/hash_test.go/BenchmarkFnvHash,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.BenchmarkFnvHash""",4,56,16,1,0,18,12,3,1,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,4,0,0,0,0,1,1,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring.go/put,"""(*github.com/Workiva/go-datastructures/queue.RingBuffer).put""",8,179,3,2,2,38,8,1,0,0,0,0,0,0,0,0,0,2,0,0,0,4,1,3,1,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0
/btree/palm/node.go/print,"""(*github.com/Workiva/go-datastructures/btree/palm.node).print""",7,255,5,1,0,15,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/selectable.go/Fill,"""(*github.com/Workiva/go-datastructures/futures.Selectable).Fill""",4,96,4,2,1,14,4,0,0,0,0,0,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0
/numerics/hilbert/hilbert_test.go/BenchmarkEncode,"""github.com/Workiva/go-datastructures/numerics/hilbert.BenchmarkEncode""",2,54,15,1,0,4,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTSingleDimensionAdd,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTSingleDimensionAdd""",3,397,24,1,0,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/newCtrie,"""github.com/Workiva/go-datastructures/trie/ctrie.newCtrie""",2,895,8,3,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/and_test.go/TestAndSparseWithEmptySparse,"""github.com/Workiva/go-datastructures/bitarray.TestAndSparseWithEmptySparse""",20,189,28,1,0,11,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree.go/print,"""(*github.com/Workiva/go-datastructures/btree/_link.blink).print""",7,129,5,1,0,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/operation,"""(*github.com/Workiva/go-datastructures/btree/palm.applyAction).operation""",7,199,9,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/interface.go/Less,"""(github.com/Workiva/go-datastructures/sort.Comparators).Less""",5,33,4,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestNodeSplit,"""github.com/Workiva/go-datastructures/btree/immutable.TestNodeSplit""",14,991,13,1,0,41,33,2,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestInsertCausesRootSplitOddAry,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestInsertCausesRootSplitOddAry""",7,457,31,1,0,14,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/generateMockEntries,"""github.com/Workiva/go-datastructures/slice/skip.generateMockEntries""",7,404,19,1,1,7,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand_test.go/TestNandDenseWithSparseBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestNandDenseWithSparseBitArray""",20,300,31,1,0,28,18,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/keyAt,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).keyAt""",14,476,5,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/equal,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nmVertex).equal""",3,559,5,2,1,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/TestDelete,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.TestDelete""",4,292,10,1,0,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/Iter,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).Iter""",5,587,4,1,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/or_test.go/BenchmarkOrSparseWithSparse,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkOrSparseWithSparse""",20,257,27,1,0,21,8,2,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/newItem,"""github.com/Workiva/go-datastructures/btree/immutable.newItem""",14,991,7,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/TestTwoKeysLeafNodeSplit,"""github.com/Workiva/go-datastructures/btree/plus.TestTwoKeysLeafNodeSplit""",7,204,24,1,0,12,6,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/ClearBit,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).ClearBit""",20,308,8,1,1,14,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestOTRootDeleteMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.TestOTRootDeleteMultiDimensions""",12,628,31,1,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher.go/newMutex,"""github.com/Workiva/go-datastructures/batcher.newMutex""",2,274,8,0,1,2,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/TestRebuild,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.TestRebuild""",4,292,11,1,0,13,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/cache/cache_test.go/TestEvictionPolicy,"""github.com/Workiva/go-datastructures/cache.TestEvictionPolicy""",2,122,18,1,0,12,14,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableInsertMultipleNegativeIndexFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertMultipleNegativeIndexFirstDimension""",12,533,54,1,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/init,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).init""",5,587,4,1,0,24,6,1,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,1,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/Len,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).Len""",7,246,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/newTree,"""github.com/Workiva/go-datastructures/rtree/hilbert.newTree""",7,400,7,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestSplitLargeSkipList,"""github.com/Workiva/go-datastructures/slice/skip.TestSplitLargeSkipList""",7,404,22,1,0,21,19,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLInsertLeftLeaningDoubleRotation,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLInsertLeftLeaningDoubleRotation""",5,372,38,1,0,23,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestRandom,"""github.com/Workiva/go-datastructures/btree/immutable.TestRandom""",14,991,10,1,0,17,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap_test.go/BenchmarkBitmap64_PopCount,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkBitmap64_PopCount""",20,79,26,1,0,6,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestMultipleInsertCausesSplitEvenAryReverseOrder,"""github.com/Workiva/go-datastructures/btree/palm.TestMultipleInsertCausesSplitEvenAryReverseOrder""",7,584,48,1,0,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/node.go/newNode,"""github.com/Workiva/go-datastructures/rangetree.newNode""",12,21,7,3,1,10,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block.go/intersects,"""(github.com/Workiva/go-datastructures/bitarray.block).intersects""",20,86,10,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/Less,"""(*github.com/Workiva/go-datastructures/btree/immutable.keySortWrapper).Less""",14,476,4,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/lastValue,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).lastValue""",14,476,9,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/mock_test.go/ID,"""(github.com/Workiva/go-datastructures/augmentedtree.mockInterval).ID""",7,43,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/addNode,"""(*github.com/Workiva/go-datastructures/btree/immutable.context).addNode""",14,212,7,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/futures/selectable.go/wchan,"""(*github.com/Workiva/go-datastructures/futures.Selectable).wchan""",4,96,5,0,1,8,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/trie/ctrie/ctrie.go/defaultHashFactory,"""github.com/Workiva/go-datastructures/trie/ctrie.defaultHashFactory""",2,895,18,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/TestInsertTNode,"""github.com/Workiva/go-datastructures/trie/ctrie.TestInsertTNode""",2,411,15,1,0,21,16,4,0,0,0,0,0,0,0,0,0,4,0,4,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0
/trie/xfast/xfast_test.go/TestDeleteMiddleBranch,"""github.com/Workiva/go-datastructures/trie/xfast.TestDeleteMiddleBranch""",5,579,22,1,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Get,"""(*github.com/Workiva/go-datastructures/list.list).Get""",2,235,3,1,2,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/encoding.go/Unmarshal,"""github.com/Workiva/go-datastructures/bitarray.Unmarshal""",20,218,9,1,2,21,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestMultipleInsertCausesSplitEvenAry,"""github.com/Workiva/go-datastructures/btree/palm.TestMultipleInsertCausesSplitEvenAry""",7,584,36,1,0,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/BenchmarkIteration,"""github.com/Workiva/go-datastructures/btree/plus.BenchmarkIteration""",7,412,18,1,0,15,8,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Tail,"""(*github.com/Workiva/go-datastructures/list.emptyList).Tail""",2,235,4,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/key,"""(github.com/Workiva/go-datastructures/rangetree/skiplist.skipEntry).key""",3,413,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/push,"""(*github.com/Workiva/go-datastructures/btree/palm.nodes).push""",7,255,4,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/Insert,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).Insert""",7,544,6,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/cache/cache.go/EvictionPolicy,"""github.com/Workiva/go-datastructures/cache.EvictionPolicy""",2,182,14,1,1,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/replaceValueAt,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).replaceValueAt""",14,476,14,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/successor,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).successor""",7,246,9,1,1,12,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/checkAndRun,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).checkAndRun""",7,400,11,1,0,42,20,1,0,0,0,0,0,1,0,0,0,2,0,0,0,8,1,2,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0
/trie/yfast/entries.go/insert,"""(*github.com/Workiva/go-datastructures/trie/yfast.Entries).insert""",7,142,6,1,1,18,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/SetBit,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).SetBit""",20,294,6,1,1,20,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/rebuild,"""(*github.com/Workiva/go-datastructures/hashmap/fastinteger.FastIntegerHashMap).rebuild""",4,153,7,0,0,10,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/splitNode,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).splitNode""",7,400,9,3,0,17,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/split,"""(*github.com/Workiva/go-datastructures/btree/palm.node).split""",7,255,5,1,3,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/get,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).get""",7,246,3,1,1,13,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher.go/Dispose,"""(*github.com/Workiva/go-datastructures/batcher.basicBatcher).Dispose""",2,274,7,0,0,25,6,1,0,0,0,0,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree.go/Insert,"""(*github.com/Workiva/go-datastructures/btree/_link.blink).Insert""",7,129,6,1,1,12,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/iterator.go/exhaust,"""(*github.com/Workiva/go-datastructures/btree/plus.iterator).exhaust""",7,52,7,0,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/delete,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).delete""",7,347,6,1,1,14,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/toCompressed,"""github.com/Workiva/go-datastructures/trie/ctrie.toCompressed""",2,895,12,2,1,17,9,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/btree/immutable/node.go/Len,"""(*github.com/Workiva/go-datastructures/btree/immutable.nodeSortWrapper).Len""",14,476,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestLoad,"""github.com/Workiva/go-datastructures/btree/immutable.TestLoad""",14,991,8,1,0,19,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/btree/palm/node.go/search,"""(*github.com/Workiva/go-datastructures/btree/palm.keys).search""",7,255,6,1,1,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/btree/palm/tree.go/newTree,"""github.com/Workiva/go-datastructures/btree/palm.newTree""",7,544,7,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestAddRebalanceInOrder,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddRebalanceInOrder""",7,630,23,1,0,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher_test.go/TestDispose,"""github.com/Workiva/go-datastructures/batcher.TestDispose""",2,163,11,1,0,30,24,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/Nand,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).Nand""",20,294,4,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/BenchmarkBulkAdd,"""github.com/Workiva/go-datastructures/btree/immutable.BenchmarkBulkAdd""",14,991,16,1,0,10,6,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/Put,"""(*github.com/Workiva/go-datastructures/queue.Queue).Put""",8,360,3,1,1,32,9,1,0,0,1,0,0,0,0,1,2,0,0,0,0,4,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0
/trie/xfast/xfast_test.go/dumpNode,"""github.com/Workiva/go-datastructures/trie/xfast.dumpNode""",5,579,8,2,0,5,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand.go/nandSparseWithDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.nandSparseWithDenseBitArray""",20,136,27,2,1,30,11,1,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand.go/nandDenseWithSparseBitArray,"""github.com/Workiva/go-datastructures/bitarray.nandDenseWithSparseBitArray""",20,136,27,2,1,19,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node_gen.go/UnmarshalMsg,"""(*github.com/Workiva/go-datastructures/btree/immutable.Key).UnmarshalMsg""",14,304,12,1,2,43,9,1,0,0,0,0,0,0,0,0,0,1,0,3,0,6,1,4,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/key.go/split,"""(*github.com/Workiva/go-datastructures/btree/_link.Keys).split""",7,80,5,0,3,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/BenchmarkMultiDimensionQuery,"""github.com/Workiva/go-datastructures/rangetree/skiplist.BenchmarkMultiDimensionQuery""",3,397,28,1,0,15,7,1,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/Clear,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).Clear""",2,895,5,0,0,12,4,1,0,0,0,0,0,0,0,0,0,0,2,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestMultipleDeleteOddAryReverseOrder,"""github.com/Workiva/go-datastructures/btree/palm.TestMultipleDeleteOddAryReverseOrder""",7,584,36,1,0,14,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/error.go/Error,"""(github.com/Workiva/go-datastructures/bitarray.OutOfRangeError).Error""",20,12,5,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestMultipleInsertCausesSplitEvenAryMultiThreaded,"""github.com/Workiva/go-datastructures/btree/_link.TestMultipleInsertCausesSplitEvenAryMultiThreaded""",7,253,49,1,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestGenerativeAdds,"""github.com/Workiva/go-datastructures/btree/immutable.TestGenerativeAdds""",14,991,18,1,0,50,37,3,2,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered.go/getOrAdd,"""(*github.com/Workiva/go-datastructures/rangetree.orderedNodes).getOrAdd""",12,225,8,2,2,22,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/BenchmarkFlatten,"""github.com/Workiva/go-datastructures/set.BenchmarkFlatten""",2,221,16,1,0,11,5,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
/btree/_link/key.go/insertAt,"""(*github.com/Workiva/go-datastructures/btree/_link.Keys).insertAt""",7,80,8,2,1,16,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/BenchmarkImmutableMultiDimensionInserts,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkImmutableMultiDimensionInserts""",12,533,39,1,0,17,9,3,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/InsertAtPosition,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).InsertAtPosition""",7,424,16,2,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/BenchmarkInsert,"""github.com/Workiva/go-datastructures/trie/xfast.BenchmarkInsert""",5,579,15,1,0,6,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestTreeApply,"""github.com/Workiva/go-datastructures/rangetree.TestTreeApply""",12,628,13,1,0,13,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTMultiDimensionOverwrite,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTMultiDimensionOverwrite""",3,397,29,1,0,13,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/byPosition,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.nodes).byPosition""",7,347,10,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring.go/roundUp,"""github.com/Workiva/go-datastructures/queue.roundUp""",8,179,7,1,1,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestSplitAtSkipListLength,"""github.com/Workiva/go-datastructures/slice/skip.TestSplitAtSkipListLength""",7,404,25,1,0,8,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable.go/Get,"""(*github.com/Workiva/go-datastructures/rangetree.immutableRangeTree).Get""",12,259,3,1,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/TestFlattenCaches_CacheReturn,"""github.com/Workiva/go-datastructures/set.TestFlattenCaches_CacheReturn""",2,221,29,1,0,11,6,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/isInternal,"""github.com/Workiva/go-datastructures/trie/xfast.isInternal""",5,587,10,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestAddDeleteDuplicatesRebalanceReverseOrder,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddDeleteDuplicatesRebalanceReverseOrder""",7,630,44,1,0,14,10,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/path.go/peek,"""(*github.com/Workiva/go-datastructures/btree/immutable.path).peek""",14,49,4,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring_test.go/TestPutToFull,"""github.com/Workiva/go-datastructures/queue.TestPutToFull""",8,295,13,1,0,30,14,1,0,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0
/btree/palm/tree.go/fetchKeysInSerial,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).fetchKeysInSerial""",7,544,17,1,0,25,10,2,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,3,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/splitAt,"""(github.com/Workiva/go-datastructures/btree/plus.nodes).splitAt""",7,254,7,1,2,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestBitOperations,"""github.com/Workiva/go-datastructures/bitarray.TestBitOperations""",20,466,17,1,0,53,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/AsMutable,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).AsMutable""",14,212,9,0,1,11,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/Get,"""(*github.com/Workiva/go-datastructures/hashmap/fastinteger.FastIntegerHashMap).Get""",4,153,3,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/BenchmarkImmutableDelete,"""github.com/Workiva/go-datastructures/tree/avl.BenchmarkImmutableDelete""",5,372,24,1,0,12,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestDeleteNotFound,"""github.com/Workiva/go-datastructures/trie/xfast.TestDeleteNotFound""",5,579,18,1,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast_test.go/BenchmarkIterator,"""github.com/Workiva/go-datastructures/trie/yfast.BenchmarkIterator""",7,266,17,1,0,14,8,2,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestPredecessorIsExactValue,"""github.com/Workiva/go-datastructures/trie/xfast.TestPredecessorIsExactValue""",5,579,27,1,0,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/cacher.go/asyncLoadNode,"""(*github.com/Workiva/go-datastructures/btree/immutable.cacher).asyncLoadNode""",14,117,13,3,0,13,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/mock_test.go/newMockKey,"""github.com/Workiva/go-datastructures/btree/plus.newMockKey""",7,29,10,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/get,"""(*github.com/Workiva/go-datastructures/queue.items).get""",8,360,3,1,1,15,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/TestClear,"""github.com/Workiva/go-datastructures/trie/ctrie.TestClear""",2,411,9,1,0,13,16,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
/rangetree/orderedtree_test.go/TestOTDeleteInOrderMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.TestOTDeleteInOrderMultiDimensions""",12,628,34,1,0,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/delete,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).delete""",7,246,6,1,1,21,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/intFromBool,"""github.com/Workiva/go-datastructures/tree/avl.intFromBool""",5,407,11,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/constructRandomMockKeys,"""github.com/Workiva/go-datastructures/btree/plus.constructRandomMockKeys""",7,204,23,1,1,7,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered_test.go/TestInsertDelete,"""github.com/Workiva/go-datastructures/rangetree.TestInsertDelete""",12,158,16,1,0,18,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/init,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).init""",7,400,4,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/mock/rangetree.go/Apply,"""(*github.com/Workiva/go-datastructures/mock.RangeTree).Apply""",2,61,5,2,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/generateRandomMultiDimensionalEntries,"""github.com/Workiva/go-datastructures/rangetree/skiplist.generateRandomMultiDimensionalEntries""",3,397,37,1,1,8,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/New,"""github.com/Workiva/go-datastructures/trie/xfast.New""",5,587,3,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/insert,"""(*github.com/Workiva/go-datastructures/bitarray.uintSlice).insert""",20,308,6,1,2,16,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/TestGet,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.TestGet""",4,292,7,1,0,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/init,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).init""",7,424,4,1,0,14,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/isLeaf,"""github.com/Workiva/go-datastructures/trie/xfast.isLeaf""",5,587,6,1,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestCopyBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestCopyBitArray""",20,466,16,1,0,10,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableMultiDimensionBulkAdd,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableMultiDimensionBulkAdd""",12,533,34,1,0,13,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestOTDeleteReturnsDeleted,"""github.com/Workiva/go-datastructures/rangetree.TestOTDeleteReturnsDeleted""",12,628,26,1,0,21,17,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/mock_test.go/chunkKeys,"""github.com/Workiva/go-datastructures/btree/plus.chunkKeys""",7,29,9,2,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/cache/cache.go/New,"""github.com/Workiva/go-datastructures/cache.New""",2,182,3,2,1,14,4,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/TakeUntil,"""(*github.com/Workiva/go-datastructures/queue.Queue).TakeUntil""",8,360,9,1,2,15,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/trie/ctrie/ctrie_test.go/BenchmarkReadOnlySnapshot,"""github.com/Workiva/go-datastructures/trie/ctrie.BenchmarkReadOnlySnapshot""",2,411,25,1,0,11,6,2,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
/bitarray/sparse_bitarray.go/SetBit,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).SetBit""",20,308,6,1,1,9,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/toOrdered,"""github.com/Workiva/go-datastructures/btree/immutable.toOrdered""",14,991,9,1,1,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue_test.go/BenchmarkPriorityQueue,"""github.com/Workiva/go-datastructures/queue.BenchmarkPriorityQueue""",8,239,22,1,0,22,8,2,0,0,0,0,0,1,0,0,0,3,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/trie/ctrie/ctrie.go/Insert,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).Insert""",2,895,6,2,0,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/TestSize,"""github.com/Workiva/go-datastructures/trie/ctrie.TestSize""",2,411,8,1,0,6,7,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
/trie/xfast/xfast.go/delete,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).delete""",5,587,6,1,0,64,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/reset,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).reset""",7,544,5,0,0,8,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/btree/plus/btree_test.go/TestTreeInsertQuery2_3_4,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsertQuery2_3_4""",7,412,24,1,0,10,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTInsertBeyondDimension,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTInsertBeyondDimension""",3,397,27,1,0,9,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand_test.go/TestNandSparseWithSmallerDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestNandSparseWithSmallerDenseBitArray""",20,300,38,1,0,32,21,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/whichSide,"""github.com/Workiva/go-datastructures/trie/xfast.whichSide""",5,587,9,1,1,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestAddEmptyPut,"""github.com/Workiva/go-datastructures/queue.TestAddEmptyPut""",8,595,15,1,0,8,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/mock_test.go/LowAtDimension,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.mockInterval).LowAtDimension""",3,32,14,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/flatten,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).flatten""",14,476,7,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/prependKey,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).prependKey""",14,476,10,1,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/mock_test.go/Compare,"""(*github.com/Workiva/go-datastructures/btree/plus.mockKey).Compare""",7,29,7,1,1,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/intervals.go/Dispose,"""(*github.com/Workiva/go-datastructures/augmentedtree.Intervals).Dispose""",7,23,7,0,0,7,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/btree/palm/tree_test.go/TestInsertAndDeletesWithSplits,"""github.com/Workiva/go-datastructures/btree/palm.TestInsertAndDeletesWithSplits""",7,584,30,1,0,26,22,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0
/trie/xfast/mock_test.go/Key,"""(*github.com/Workiva/go-datastructures/trie/xfast.mockEntry).Key""",5,18,3,0,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/BenchmarkBulkAdd,"""github.com/Workiva/go-datastructures/btree/palm.BenchmarkBulkAdd""",7,584,16,1,0,13,6,2,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/determineDistance,"""github.com/Workiva/go-datastructures/numerics/optimization.determineDistance""",3,559,17,1,1,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge.go/prepareForSymMerge,"""github.com/Workiva/go-datastructures/sort.prepareForSymMerge""",5,196,18,1,1,17,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/BenchmarkRemove,"""github.com/Workiva/go-datastructures/trie/ctrie.BenchmarkRemove""",2,411,15,1,0,12,8,2,0,0,0,0,0,0,0,0,0,3,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0
/augmentedtree/atree.go/intervalOverlaps,"""github.com/Workiva/go-datastructures/augmentedtree.intervalOverlaps""",7,402,16,4,1,16,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/adjustRange,"""(*github.com/Workiva/go-datastructures/augmentedtree.node).adjustRange""",7,402,11,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/setMin,"""github.com/Workiva/go-datastructures/augmentedtree.setMin""",7,402,6,1,0,13,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLFails,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLFails""",5,372,12,1,0,21,12,2,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/BenchmarkImmutableBulkDelete,"""github.com/Workiva/go-datastructures/tree/avl.BenchmarkImmutableBulkDelete""",5,372,28,1,0,12,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/mock_test.go/constructMultiDimensionInterval,"""github.com/Workiva/go-datastructures/augmentedtree.constructMultiDimensionInterval""",7,43,31,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/BenchmarkCompressedIntersects,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkCompressedIntersects""",20,294,29,1,0,16,8,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/threadsafe/err/error.go/Get,"""(*github.com/Workiva/go-datastructures/threadsafe/err.Error).Get""",2,33,3,0,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/trie/ctrie/ctrie.go/Snapshot,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).Snapshot""",2,895,8,0,1,8,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/insert,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).insert""",5,587,6,1,0,99,15,1,0,0,0,0,0,0,0,0,0,4,0,0,0,14,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/encoding.go/Uint64FromBytes,"""github.com/Workiva/go-datastructures/bitarray.Uint64FromBytes""",20,218,15,1,2,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/and_test.go/TestAndDenseWithEmptyDense,"""github.com/Workiva/go-datastructures/bitarray.TestAndDenseWithEmptyDense""",20,189,26,1,0,12,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/disposer,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).disposer""",7,544,8,1,0,11,2,1,0,0,0,2,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/rtree/hilbert/tree.go/fetchKeys,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).fetchKeys""",7,400,9,2,3,29,18,3,2,0,0,0,0,0,0,0,0,0,0,2,2,1,1,3,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/TestExists,"""github.com/Workiva/go-datastructures/set.TestExists""",2,221,10,1,0,11,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/replaceAtPosition,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).replaceAtPosition""",7,424,17,2,0,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/BenchmarkDelete,"""github.com/Workiva/go-datastructures/btree/palm.BenchmarkDelete""",7,584,15,1,0,11,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/futures.go/HasResult,"""(*github.com/Workiva/go-datastructures/futures.Future).HasResult""",4,82,9,0,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/rangetree/entries.go/NewEntries,"""github.com/Workiva/go-datastructures/rangetree.NewEntries""",12,29,10,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/btree/plus/btree_test.go/BenchmarkReadAndWrites,"""github.com/Workiva/go-datastructures/btree/plus.BenchmarkReadAndWrites""",7,412,22,1,0,14,7,2,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/expand,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nelderMead).expand""",3,559,6,2,1,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/newNelderMead,"""github.com/Workiva/go-datastructures/numerics/optimization.newNelderMead""",3,559,13,1,1,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestSplitLargeSkipListOddNumber,"""github.com/Workiva/go-datastructures/slice/skip.TestSplitLargeSkipListOddNumber""",7,404,31,1,0,21,19,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestGetWithPosition,"""github.com/Workiva/go-datastructures/slice/skip.TestGetWithPosition""",7,404,19,1,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/New,"""github.com/Workiva/go-datastructures/btree/palm.New""",7,544,3,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/set,"""(github.com/Workiva/go-datastructures/hashmap/fastinteger.packets).set""",4,153,3,1,0,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/reflect,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nelderMead).reflect""",3,559,7,2,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block.go/or,"""(github.com/Workiva/go-datastructures/bitarray.block).or""",20,86,2,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/mock/batcher.go/Flush,"""(*github.com/Workiva/go-datastructures/mock.Batcher).Flush""",2,41,5,0,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap.go/SetBit,"""(github.com/Workiva/go-datastructures/bitarray.Bitmap64).SetBit""",20,59,6,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestGetBitAtCapacity,"""github.com/Workiva/go-datastructures/bitarray.TestGetBitAtCapacity""",20,466,20,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/mock/batcher.go/Dispose,"""(*github.com/Workiva/go-datastructures/mock.Batcher).Dispose""",2,41,7,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/BenchmarkBulkAddPoints,"""github.com/Workiva/go-datastructures/rtree/hilbert.BenchmarkBulkAddPoints""",7,457,22,1,0,10,4,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/ReplaceAtPosition,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).ReplaceAtPosition""",7,424,17,2,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue_test.go/TestPriorityGet,"""github.com/Workiva/go-datastructures/queue.TestPriorityGet""",8,239,15,1,0,41,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestTakeUntilNoMatches,"""github.com/Workiva/go-datastructures/queue.TestTakeUntilNoMatches""",8,595,22,1,0,10,6,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/node.go/get,"""github.com/Workiva/go-datastructures/trie/dtrie.get""",4,208,3,3,1,20,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestMultipleAddMultipleDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestMultipleAddMultipleDimensions""",7,454,33,1,0,39,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/insertAt,"""(*github.com/Workiva/go-datastructures/btree/palm.keys).insertAt""",7,255,8,2,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/Size,"""(*github.com/Workiva/go-datastructures/fibheap.FloatingFibonacciHeap).Size""",4,330,4,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestMatchingQuery,"""github.com/Workiva/go-datastructures/augmentedtree.TestMatchingQuery""",7,630,17,1,0,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree.go/Insert,"""(*github.com/Workiva/go-datastructures/btree/plus.btree).Insert""",7,97,6,1,0,4,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/mock_test.go/Compare,"""(github.com/Workiva/go-datastructures/tree/avl.mockEntry).Compare""",5,16,7,1,1,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestEquality,"""github.com/Workiva/go-datastructures/bitarray.TestEquality""",20,466,12,1,0,20,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/entries_test.go/TestEntriesMax,"""github.com/Workiva/go-datastructures/trie/yfast.TestEntriesMax""",7,134,14,1,0,17,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand_test.go/BenchmarkNandDenseWithSparse,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkNandDenseWithSparse""",20,300,28,1,0,18,8,2,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestSimpleInsert,"""github.com/Workiva/go-datastructures/btree/palm.TestSimpleInsert""",7,584,16,1,0,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_single_example_test.go/Example,"""github.com/Workiva/go-datastructures/fibheap.Example""",4,73,7,0,0,59,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/error.go/Error,"""(github.com/Workiva/go-datastructures/rangetree.NoEntriesError).Error""",12,24,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/Add,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).Add""",12,248,3,1,1,18,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap_test.go/TestBitmap64_ClearBit,"""github.com/Workiva/go-datastructures/bitarray.TestBitmap64_ClearBit""",20,79,21,1,0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/newLeafNode,"""github.com/Workiva/go-datastructures/btree/plus.newLeafNode""",7,254,11,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestMerge,"""github.com/Workiva/go-datastructures/fibheap.TestMerge""",4,444,9,1,0,20,12,3,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/cache/cache.go/Put,"""(*github.com/Workiva/go-datastructures/cache.cache).Put""",2,182,3,2,0,16,10,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/rangetree/orderedtree_test.go/TestOTDeleteEmptyTreeMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.TestOTDeleteEmptyTreeMultiDimensions""",12,628,36,1,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/Len,"""(*github.com/Workiva/go-datastructures/tree/avl.Immutable).Len""",5,407,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/length,"""(*github.com/Workiva/go-datastructures/trie/ctrie.lNode).length""",2,895,6,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestDeleteRight,"""github.com/Workiva/go-datastructures/augmentedtree.TestDeleteRight""",7,630,15,1,0,11,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeGetNotFound,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeGetNotFound""",7,412,19,1,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/BenchmarkDelete,"""github.com/Workiva/go-datastructures/rtree/hilbert.BenchmarkDelete""",7,457,15,1,0,11,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/removeBalance,"""github.com/Workiva/go-datastructures/tree/avl.removeBalance""",5,407,13,3,1,24,9,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/global.go/sort,"""(github.com/Workiva/go-datastructures/numerics/optimization.pbs).sort""",3,168,4,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/queue/priority_queue.go/pop,"""(*github.com/Workiva/go-datastructures/queue.priorityItems).pop""",8,242,3,0,1,28,7,1,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/replaceAt,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.nodes).replaceAt""",7,347,9,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/splitAt,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).splitAt""",14,476,7,1,2,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand_test.go/BenchmarkNandSparseWithDense,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkNandSparseWithDense""",20,300,28,1,0,18,8,2,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/BenchmarkOTAddItemsMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkOTAddItemsMultiDimensions""",12,628,34,1,0,15,9,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/BenchmarkInsertSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkInsertSecondDimension""",12,628,30,1,0,10,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/copy,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).copy""",20,308,4,0,1,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/operation,"""(*github.com/Workiva/go-datastructures/btree/palm.removeAction).operation""",7,199,9,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestDeleteLeft,"""github.com/Workiva/go-datastructures/augmentedtree.TestDeleteLeft""",7,630,14,1,0,11,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/copyToGen,"""(*github.com/Workiva/go-datastructures/trie/ctrie.iNode).copyToGen""",2,895,9,2,1,6,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/mock/rangetree.go/Add,"""(*github.com/Workiva/go-datastructures/mock.RangeTree).Add""",2,61,3,1,1,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/BenchmarkDeleteFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkDeleteFirstDimension""",12,628,29,1,0,10,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/BenchmarkMultiDimensionInsertReverse,"""github.com/Workiva/go-datastructures/rangetree/skiplist.BenchmarkMultiDimensionInsertReverse""",3,397,36,1,0,11,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/node.go/copy,"""(*github.com/Workiva/go-datastructures/tree/avl.node).copy""",5,34,4,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand.go/nandSparseWithSparseBitArray,"""github.com/Workiva/go-datastructures/bitarray.nandSparseWithSparseBitArray""",20,136,28,1,1,65,12,1,0,0,0,0,0,0,0,0,0,3,0,0,0,3,1,3,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/toItems,"""(github.com/Workiva/go-datastructures/btree/immutable.Keys).toItems""",14,476,7,0,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLDeleteWithRotation,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLDeleteWithRotation""",5,372,25,1,0,16,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/BenchmarkBulkGet,"""github.com/Workiva/go-datastructures/btree/palm.BenchmarkBulkGet""",7,584,16,1,0,11,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/BenchmarkApply,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkApply""",12,628,14,1,0,15,7,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/applyNode,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).applyNode""",7,400,9,2,0,18,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0
/bitarray/iterator.go/Value,"""(*github.com/Workiva/go-datastructures/bitarray.bitArrayIterator).Value""",20,53,5,0,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/TestGetCompressedBit,"""github.com/Workiva/go-datastructures/bitarray.TestGetCompressedBit""",20,294,20,1,0,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestMultipleInsertCausesSplitOddAryReverseOrder,"""github.com/Workiva/go-datastructures/btree/_link.TestMultipleInsertCausesSplitOddAryReverseOrder""",7,253,47,1,0,11,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/newRemoveAction,"""github.com/Workiva/go-datastructures/rtree/hilbert.newRemoveAction""",7,171,15,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/updateTest,"""github.com/Workiva/go-datastructures/trie/dtrie.updateTest""",4,145,10,3,0,5,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/key,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.lastBundle).key""",3,413,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/updated,"""(*github.com/Workiva/go-datastructures/trie/ctrie.cNode).updated""",2,895,7,3,1,6,3,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/Less,"""(github.com/Workiva/go-datastructures/btree/immutable.orderedItems).Less""",14,991,4,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/add,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).add""",12,248,3,1,1,19,6,1,0,0,0,0,0,0,0,0,0,1,1,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/encoding_test.go/TestBitArraySerialization,"""github.com/Workiva/go-datastructures/bitarray.TestBitArraySerialization""",20,122,25,1,0,24,14,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/query,"""(github.com/Workiva/go-datastructures/btree/immutable.orderedItems).query""",14,991,5,1,1,12,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestMultipleAdd,"""github.com/Workiva/go-datastructures/btree/palm.TestMultipleAdd""",7,584,15,1,0,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/peek,"""(*github.com/Workiva/go-datastructures/queue.items).peek""",8,360,4,0,2,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestAddDeleteDuplicatesRebalanceRandomOrder,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddDeleteDuplicatesRebalanceRandomOrder""",7,630,43,1,0,15,10,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/iterator.go/Next,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArrayIterator).Next""",20,53,4,0,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_examples_test.go/ExampleFloatingFibonacciHeap_Size,"""github.com/Workiva/go-datastructures/fibheap.ExampleFloatingFibonacciHeap_Size""",4,104,33,0,0,8,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/int64_test.go/TestSort,"""github.com/Workiva/go-datastructures/slice.TestSort""",2,38,8,1,0,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast_test.go/TestTriePredecessor,"""github.com/Workiva/go-datastructures/trie/yfast.TestTriePredecessor""",7,266,19,1,0,26,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/popFirstValue,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).popFirstValue""",14,476,13,0,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead_test.go/TestNelderMeadConstrained,"""github.com/Workiva/go-datastructures/numerics/optimization.TestNelderMeadConstrained""",3,144,25,1,0,46,22,0,0,0,0,0,0,0,0,0,0,0,0,4,0,3,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableInsertMultiplePositiveIndexSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertMultiplePositiveIndexSecondDimension""",12,533,55,1,0,12,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/global.go/Swap,"""(github.com/Workiva/go-datastructures/numerics/optimization.pbs).Swap""",3,168,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/hilbert.go/getCenter,"""github.com/Workiva/go-datastructures/rtree/hilbert.getCenter""",7,63,9,1,2,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/BenchmarkIntersects,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkIntersects""",20,466,19,1,0,12,7,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/node.go/Key,"""(*github.com/Workiva/go-datastructures/trie/dtrie.collisionNode).Key""",4,208,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/add.go/AddItems,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).AddItems""",14,303,8,1,2,16,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/Delete,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).Delete""",7,544,6,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/augmentedtree/atree.go/newDummy,"""github.com/Workiva/go-datastructures/augmentedtree.newDummy""",7,402,8,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/BenchmarkQueryItemsMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.BenchmarkQueryItemsMultiDimensions""",7,454,34,1,0,22,11,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestQueryWithLine,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestQueryWithLine""",7,457,17,1,0,45,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/mock_test.go/newMockInterval,"""github.com/Workiva/go-datastructures/rangetree/skiplist.newMockInterval""",3,32,15,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/TestRemove,"""github.com/Workiva/go-datastructures/set.TestRemove""",2,221,10,1,0,8,7,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/sort.go/sortBucket,"""github.com/Workiva/go-datastructures/sort.sortBucket""",5,72,10,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/augmentedtree/atree_test.go/TestSimpleAddRootRight,"""github.com/Workiva/go-datastructures/augmentedtree.TestSimpleAddRootRight""",7,630,22,1,0,18,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable.go/delete,"""(*github.com/Workiva/go-datastructures/rangetree.immutableRangeTree).delete""",12,259,6,4,0,54,14,3,0,0,0,0,0,0,0,0,0,3,1,1,0,4,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/isLastDimension,"""github.com/Workiva/go-datastructures/rangetree.isLastDimension""",12,248,15,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/getConsoleLogger,"""github.com/Workiva/go-datastructures/rtree/hilbert.getConsoleLogger""",7,457,16,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/exists,"""(github.com/Workiva/go-datastructures/hashmap/fastinteger.packets).exists""",4,153,6,1,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/Predecessor,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).Predecessor""",7,246,11,1,1,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/key.go/reverse,"""(github.com/Workiva/go-datastructures/btree/_link.Keys).reverse""",7,80,7,0,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/BenchmarkBulkAdd,"""github.com/Workiva/go-datastructures/btree/_link.BenchmarkBulkAdd""",7,253,16,1,0,10,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/global.go/exists,"""(*github.com/Workiva/go-datastructures/numerics/optimization.results).exists""",3,168,6,2,1,17,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/shrink,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nelderMead).shrink""",3,559,6,1,0,7,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/compare,"""github.com/Workiva/go-datastructures/augmentedtree.compare""",7,402,7,2,1,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/insert,"""(*github.com/Workiva/go-datastructures/bitarray.blocks).insert""",20,308,6,1,0,9,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/gcasRead,"""github.com/Workiva/go-datastructures/trie/ctrie.gcasRead""",2,895,8,2,1,7,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0
/queue/ring_test.go/TestDisposeOnGet,"""github.com/Workiva/go-datastructures/queue.TestDisposeOnGet""",8,295,16,1,0,22,13,1,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0
/rangetree/skiplist/skiplist_test.go/TestRTInsertNegativeInZeroDimensionMultiDimensionList,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTInsertNegativeInZeroDimensionMultiDimensionList""",3,397,53,1,0,16,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/mock_test.go/Compare,"""(github.com/Workiva/go-datastructures/slice/skip.mockEntry).Compare""",7,49,7,1,1,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/needsSplit,"""(*github.com/Workiva/go-datastructures/btree/plus.inode).needsSplit""",7,254,10,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/int64.go/Insert,"""(github.com/Workiva/go-datastructures/slice.Int64Slice).Insert""",2,69,6,1,1,14,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/BenchmarkMultiDimensionInsertNegativeAtZeroDimension,"""github.com/Workiva/go-datastructures/rangetree/skiplist.BenchmarkMultiDimensionInsertNegativeAtZeroDimension""",3,397,52,1,0,11,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge.go/symSearch,"""github.com/Workiva/go-datastructures/sort.symSearch""",5,196,9,1,1,12,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/Delete,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).Delete""",7,246,6,1,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree.go/Get,"""(*github.com/Workiva/go-datastructures/btree/_link.blink).Get""",7,129,3,1,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/splitLeafAt,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).splitLeafAt""",14,476,11,1,2,18,7,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/mock/batcher.go/Put,"""(*github.com/Workiva/go-datastructures/mock.Batcher).Put""",2,41,3,1,1,6,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/IsEmpty,"""(*github.com/Workiva/go-datastructures/list.list).IsEmpty""",2,235,7,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue_test.go/TestPriorityGetPutDisposed,"""github.com/Workiva/go-datastructures/queue.TestPriorityGetPutDisposed""",8,239,26,1,0,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/fetchKeysInParallel,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).fetchKeysInParallel""",7,400,19,1,0,49,23,3,1,0,0,0,0,1,0,0,0,4,0,2,0,4,1,2,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,3,0
/augmentedtree/atree_test.go/TestDeleteRebalanceRandomOrder,"""github.com/Workiva/go-datastructures/augmentedtree.TestDeleteRebalanceRandomOrder""",7,630,30,1,0,20,12,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/mock_test.go/newMockEntry,"""github.com/Workiva/go-datastructures/trie/xfast.newMockEntry""",5,18,12,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/Delete,"""(*github.com/Workiva/go-datastructures/tree/avl.Immutable).Delete""",5,407,6,1,2,12,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/Lookup,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).Lookup""",2,895,6,1,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie.go/Get,"""(*github.com/Workiva/go-datastructures/trie/dtrie.Dtrie).Get""",4,74,3,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/mock/rangetree.go/InsertAtDimension,"""(*github.com/Workiva/go-datastructures/mock.RangeTree).InsertAtDimension""",2,61,17,2,2,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/TestMultipleInsertCausesSplitEvenAry,"""github.com/Workiva/go-datastructures/btree/_link.TestMultipleInsertCausesSplitEvenAry""",7,253,36,1,0,11,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/TestMultipleLeafNodeInsert,"""github.com/Workiva/go-datastructures/btree/plus.TestMultipleLeafNodeInsert""",7,204,26,1,0,16,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/remove,"""(*github.com/Workiva/go-datastructures/queue.waiters).remove""",8,360,6,1,0,13,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/TestAddDuplicateItem,"""github.com/Workiva/go-datastructures/set.TestAddDuplicateItem""",2,221,20,1,0,8,7,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/New,"""github.com/Workiva/go-datastructures/slice/skip.New""",7,424,3,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/commit,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).commit""",14,212,6,0,1,15,6,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/newNodes,"""github.com/Workiva/go-datastructures/btree/palm.newNodes""",7,255,8,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/Enqueue,"""(*github.com/Workiva/go-datastructures/fibheap.FloatingFibonacciHeap).Enqueue""",4,330,7,1,1,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/TestInsert,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.TestInsert""",4,292,10,1,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/global.go/grab,"""(*github.com/Workiva/go-datastructures/numerics/optimization.results).grab""",3,168,4,1,1,20,5,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/isInf,"""github.com/Workiva/go-datastructures/numerics/optimization.isInf""",3,559,5,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/inserted,"""(*github.com/Workiva/go-datastructures/trie/ctrie.cNode).inserted""",2,895,8,3,1,12,5,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/iterator.go/Value,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArrayIterator).Value""",20,53,5,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/iterator.go/newCompressedBitArrayIterator,"""github.com/Workiva/go-datastructures/bitarray.newCompressedBitArrayIterator""",20,53,29,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/reverse,"""(github.com/Workiva/go-datastructures/btree/plus.keys).reverse""",7,254,7,0,0,4,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestFibHeap_Delete_NilNode,"""github.com/Workiva/go-datastructures/fibheap.TestFibHeap_Delete_NilNode""",4,444,26,1,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestSimpleInsert,"""github.com/Workiva/go-datastructures/slice/skip.TestSimpleInsert""",7,404,16,1,0,17,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/get,"""(*github.com/Workiva/go-datastructures/tree/avl.Immutable).get""",5,407,3,1,1,15,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,3,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/rdcssRoot,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).rdcssRoot""",2,895,9,3,1,13,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/augmentedtree/multidimensional_test.go/TestDeleteRebalanceRandomOrderMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestDeleteRebalanceRandomOrderMultiDimensions""",7,454,45,1,0,27,12,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/getIndexAndRemainder,"""github.com/Workiva/go-datastructures/bitarray.getIndexAndRemainder""",20,294,20,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_gen.go/Msgsize,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).Msgsize""",14,86,7,0,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableSingleDimensionMultipleAdds,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableSingleDimensionMultipleAdds""",12,533,40,1,0,23,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/TestInsert,"""github.com/Workiva/go-datastructures/trie/dtrie.TestInsert""",4,145,10,1,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/delete.go/walkupDelete,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).walkupDelete""",14,263,12,4,1,134,51,1,0,0,0,0,0,0,0,0,0,3,0,0,0,18,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/reverse,"""github.com/Workiva/go-datastructures/btree/immutable.reverse""",14,991,7,1,1,6,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestDuplicate,"""github.com/Workiva/go-datastructures/btree/immutable.TestDuplicate""",14,991,13,1,0,17,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/delete,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.keys).delete""",7,347,6,1,1,12,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/split,"""github.com/Workiva/go-datastructures/btree/_link.split""",7,290,5,3,0,37,22,1,0,0,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0
/rtree/hilbert/tree_test.go/print,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).print""",7,457,5,1,0,13,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestDeleteLargeBranch,"""github.com/Workiva/go-datastructures/trie/xfast.TestDeleteLargeBranch""",5,579,21,1,0,23,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/insert,"""(*github.com/Workiva/go-datastructures/btree/_link.node).insert""",7,290,6,1,1,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/appendValue,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).appendValue""",14,476,11,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestDispose,"""github.com/Workiva/go-datastructures/queue.TestDispose""",8,595,11,1,0,18,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring_test.go/BenchmarkRBPut,"""github.com/Workiva/go-datastructures/queue.BenchmarkRBPut""",8,295,14,1,0,15,7,1,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/BenchmarkQueryBulkPoints,"""github.com/Workiva/go-datastructures/rtree/hilbert.BenchmarkQueryBulkPoints""",7,457,24,1,0,11,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block.go/get,"""(github.com/Workiva/go-datastructures/bitarray.block).get""",20,86,3,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/Intersects,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).Intersects""",20,308,10,1,1,33,10,1,0,0,0,0,0,0,0,0,0,1,0,0,0,6,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLDeleteWithDoubleRotation,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLDeleteWithDoubleRotation""",5,372,31,1,0,15,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/TestLongCompressedIntersects,"""github.com/Workiva/go-datastructures/bitarray.TestLongCompressedIntersects""",20,294,28,1,0,23,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/cutNode,"""github.com/Workiva/go-datastructures/fibheap.cutNode""",4,330,7,2,0,36,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/constructInfiniteRect,"""github.com/Workiva/go-datastructures/rtree/hilbert.constructInfiniteRect""",7,457,21,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLDeleteReplay,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLDeleteReplay""",5,372,19,1,0,18,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/key.go/chunkKeys,"""github.com/Workiva/go-datastructures/btree/_link.chunkKeys""",7,80,9,2,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue_test.go/TestEmptyPriorityGetWithDispose,"""github.com/Workiva/go-datastructures/queue.TestEmptyPriorityGetWithDispose""",8,239,31,1,0,20,11,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0
/slice/skip/skip_test.go/BenchmarkGet,"""github.com/Workiva/go-datastructures/slice/skip.BenchmarkGet""",7,404,12,1,0,12,6,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestClearBitAtCapacity,"""github.com/Workiva/go-datastructures/bitarray.TestClearBitAtCapacity""",20,466,22,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node_gen.go/Msgsize,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).Msgsize""",14,304,7,0,1,14,4,2,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/last,"""(*github.com/Workiva/go-datastructures/btree/palm.keys).last""",7,255,4,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree.go/Len,"""(*github.com/Workiva/go-datastructures/btree/plus.btree).Len""",7,97,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue.go/get,"""(*github.com/Workiva/go-datastructures/queue.priorityItems).get""",8,242,3,1,1,11,4,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/or_test.go/TestOrSparseWithEmptySparse,"""github.com/Workiva/go-datastructures/bitarray.TestOrSparseWithEmptySparse""",20,257,27,1,0,14,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTMultiDimensionQuery,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTMultiDimensionQuery""",3,397,25,1,0,30,29,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/bitCount,"""github.com/Workiva/go-datastructures/trie/ctrie.bitCount""",2,895,8,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring_test.go/TestOffer,"""github.com/Workiva/go-datastructures/queue.TestOffer""",8,295,9,1,0,19,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/iterator_test.go/TestIterate,"""github.com/Workiva/go-datastructures/slice/skip.TestIterate""",7,41,11,1,0,32,29,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/BenchmarkByPosition,"""github.com/Workiva/go-datastructures/slice/skip.BenchmarkByPosition""",7,404,19,1,0,11,7,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/node.go/emptyNode,"""github.com/Workiva/go-datastructures/trie/dtrie.emptyNode""",4,208,9,2,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/setLowest,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).setLowest""",20,294,9,0,0,15,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/query.go/iterativeFindWithoutPath,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).iterativeFindWithoutPath""",14,181,24,2,3,29,8,1,0,0,0,0,0,0,0,0,0,5,0,0,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/TestRoundUp,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.TestRoundUp""",4,292,11,1,0,9,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/entries.go/search,"""(github.com/Workiva/go-datastructures/trie/yfast.Entries).search""",7,142,6,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/bitarray/encoding_test.go/TestUnmarshalErrors,"""github.com/Workiva/go-datastructures/bitarray.TestUnmarshalErrors""",20,122,19,1,0,21,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/executeInterfacesInSerial,"""github.com/Workiva/go-datastructures/btree/palm.executeInterfacesInSerial""",7,199,25,2,0,8,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/clean,"""github.com/Workiva/go-datastructures/trie/ctrie.clean""",2,895,5,3,1,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestGetManyByPosition,"""github.com/Workiva/go-datastructures/slice/skip.TestGetManyByPosition""",7,404,21,1,0,8,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/delete,"""(*github.com/Workiva/go-datastructures/augmentedtree.tree).delete""",7,402,6,1,0,78,21,1,0,0,0,0,0,0,0,0,0,1,0,0,0,11,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/getParent,"""github.com/Workiva/go-datastructures/btree/_link.getParent""",7,290,9,3,1,15,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/trie/xfast/xfast.go/Get,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).Get""",5,587,3,1,1,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree.go/delete,"""(*github.com/Workiva/go-datastructures/rangetree.orderedTree).delete""",12,248,6,1,1,30,8,2,0,0,0,0,0,0,0,0,0,2,2,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/add,"""(github.com/Workiva/go-datastructures/btree/immutable.orderedItems).add""",14,991,3,1,1,18,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/action.go/complete,"""(*github.com/Workiva/go-datastructures/btree/palm.getAction).complete""",7,199,8,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/btree/immutable/rt_test.go/Len,"""(*github.com/Workiva/go-datastructures/btree/immutable.valueSortWrapper).Len""",14,991,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block.go/toNums,"""(github.com/Workiva/go-datastructures/bitarray.block).toNums""",20,86,6,2,0,6,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand_test.go/TestNandSparseWithSparseBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestNandSparseWithSparseBitArray""",20,300,32,1,0,39,26,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node_gen.go/MarshalMsg,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).MarshalMsg""",14,304,10,1,2,32,18,2,0,0,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/BenchmarkExecuteQuery,"""github.com/Workiva/go-datastructures/btree/palm.BenchmarkExecuteQuery""",7,584,21,1,0,11,7,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/LowerLeft,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).LowerLeft""",7,347,9,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestDeleteEmptyTree,"""github.com/Workiva/go-datastructures/augmentedtree.TestDeleteEmptyTree""",7,630,19,1,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/or_test.go/TestOrDenseWithEmptyDense,"""github.com/Workiva/go-datastructures/bitarray.TestOrDenseWithEmptyDense""",20,257,25,1,0,12,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_gen.go/MarshalMsg,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).MarshalMsg""",14,86,10,1,2,22,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/Len,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).Len""",3,413,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeGet,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeGet""",7,412,11,1,0,10,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/NewFloatFibHeap,"""github.com/Workiva/go-datastructures/fibheap.NewFloatFibHeap""",4,330,15,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestTakeUntilOnDisposedQueue,"""github.com/Workiva/go-datastructures/queue.TestTakeUntilOnDisposedQueue""",8,595,28,1,0,9,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring_test.go/TestRingMultipleInserts,"""github.com/Workiva/go-datastructures/queue.TestRingMultipleInserts""",8,295,23,1,0,26,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestCommit,"""github.com/Workiva/go-datastructures/btree/immutable.TestCommit""",14,991,10,1,0,22,20,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/newNodes,"""github.com/Workiva/go-datastructures/rtree/hilbert.newNodes""",7,347,8,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict.go/Add,"""(*github.com/Workiva/go-datastructures/set.Set).Add""",2,136,3,1,0,8,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/slice/skip/skip_test.go/TestGetPositionAfterDelete,"""github.com/Workiva/go-datastructures/slice/skip.TestGetPositionAfterDelete""",7,404,26,1,0,13,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/Get,"""(*github.com/Workiva/go-datastructures/tree/avl.Immutable).Get""",5,407,3,1,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree.go/keySearch,"""github.com/Workiva/go-datastructures/btree/plus.keySearch""",7,97,9,2,1,15,2,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,3,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/ID,"""(github.com/Workiva/go-datastructures/btree/immutable.Key).ID""",14,476,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/Merge,"""(*github.com/Workiva/go-datastructures/fibheap.FloatingFibonacciHeap).Merge""",4,330,5,1,2,16,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertNegativeIndexOutOfBoundsSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertNegativeIndexOutOfBoundsSecondDimension""",12,628,49,1,0,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/Swap,"""(github.com/Workiva/go-datastructures/bitarray.uintSlice).Swap""",20,308,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/BenchmarkQueueGet,"""github.com/Workiva/go-datastructures/queue.BenchmarkQueueGet""",8,595,17,1,0,21,9,4,2,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/insertNode,"""github.com/Workiva/go-datastructures/slice/skip.insertNode""",7,424,10,7,1,40,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/numerics/optimization/global.go/reSort,"""(*github.com/Workiva/go-datastructures/numerics/optimization.results).reSort""",3,168,6,1,0,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestBitArrayToNums,"""github.com/Workiva/go-datastructures/bitarray.TestBitArrayToNums""",20,466,18,1,0,11,5,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie.go/Remove,"""(*github.com/Workiva/go-datastructures/trie/dtrie.Dtrie).Remove""",4,74,6,1,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable.go/Query,"""(*github.com/Workiva/go-datastructures/rangetree.immutableRangeTree).Query""",12,259,5,1,1,9,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTSingleDimensionOverwrite,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTSingleDimensionOverwrite""",3,397,30,1,0,13,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/key.go/search,"""(github.com/Workiva/go-datastructures/btree/_link.Keys).search""",7,80,6,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/rtree/hilbert/node.go/insertAt,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.keys).insertAt""",7,347,8,2,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/mock_test.go/LowerLeft,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.mockRectangle).LowerLeft""",7,22,9,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/global.go/search,"""(*github.com/Workiva/go-datastructures/numerics/optimization.results).search""",3,168,6,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/rangetree/immutable_test.go/TestImmutableMultiDimensionMultipleAdds,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableMultiDimensionMultipleAdds""",12,533,39,1,0,23,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/needsSplit,"""(*github.com/Workiva/go-datastructures/btree/palm.node).needsSplit""",7,255,10,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/fetchKeysInParallel,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).fetchKeysInParallel""",7,544,19,1,0,58,28,3,1,0,0,0,0,1,0,0,0,4,0,2,0,6,1,3,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,3,0
/trie/xfast/xfast_test.go/checkPattern,"""github.com/Workiva/go-datastructures/trie/xfast.checkPattern""",5,579,12,3,0,14,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring_test.go/BenchmarkRBGet,"""github.com/Workiva/go-datastructures/queue.BenchmarkRBGet""",8,295,14,1,0,12,5,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/iinsert,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).iinsert""",2,895,7,5,1,68,21,0,0,0,0,0,0,0,0,0,0,0,6,0,0,6,1,4,2,0,0,14,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestAddDeleteDuplicatesRebalanceReverseOrderMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddDeleteDuplicatesRebalanceReverseOrderMultiDimensions""",7,454,59,1,0,15,10,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/max,"""(*github.com/Workiva/go-datastructures/btree/_link.node).max""",7,290,3,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/splitLeaf,"""(*github.com/Workiva/go-datastructures/btree/palm.node).splitLeaf""",7,255,9,1,3,11,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/getBucketKey,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).getBucketKey""",7,246,12,1,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/Blocks,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).Blocks""",20,308,6,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestSecondCommitSplitsRoot,"""github.com/Workiva/go-datastructures/btree/immutable.TestSecondCommitSplitsRoot""",14,991,26,1,0,23,16,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/BenchmarkDeleteSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkDeleteSecondDimension""",12,628,30,1,0,10,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/Dispose,"""(*github.com/Workiva/go-datastructures/queue.Queue).Dispose""",8,360,7,0,1,21,3,1,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/rangetree/immutable_test.go/TestImmutableGet,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableGet""",12,533,16,1,0,8,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestMergeVeryUnevenListsAlreadySortedWrongOrder,"""github.com/Workiva/go-datastructures/sort.TestMergeVeryUnevenListsAlreadySortedWrongOrder""",5,223,47,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/encoding_test.go/TestBitArrayMarshalUnmarshal,"""github.com/Workiva/go-datastructures/bitarray.TestBitArrayMarshalUnmarshal""",20,122,28,1,0,19,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/TestDeleteCollision,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.TestDeleteCollision""",4,292,19,1,0,15,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/sort,"""(github.com/Workiva/go-datastructures/numerics/optimization.sorter).sort""",3,559,4,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/trie/dtrie/dtrie_test.go/insertTest,"""github.com/Workiva/go-datastructures/trie/dtrie.insertTest""",4,145,10,3,1,6,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/Get,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).Get""",7,246,3,1,1,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/searchNode,"""(*github.com/Workiva/go-datastructures/btree/_link.node).searchNode""",7,290,10,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue.go/Dispose,"""(*github.com/Workiva/go-datastructures/queue.PriorityQueue).Dispose""",8,242,7,0,0,15,5,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0
/rtree/hilbert/node.go/insert,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.keys).insert""",7,347,6,1,2,16,5,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/node.go/Key,"""(*github.com/Workiva/go-datastructures/trie/dtrie.node).Key""",4,208,3,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/selectable_test.go/TestSelectableSetError,"""github.com/Workiva/go-datastructures/futures.TestSelectableSetError""",4,71,22,1,0,12,8,0,0,0,0,2,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertPositiveIndexFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertPositiveIndexFirstDimension""",12,628,37,1,0,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/InsertAtDimension,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).InsertAtDimension""",3,413,17,2,2,16,5,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestTwoInsert,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestTwoInsert""",7,457,13,1,0,19,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestFibHeap_Merge_NilHeap,"""github.com/Workiva/go-datastructures/fibheap.TestFibHeap_Merge_NilHeap""",4,444,25,1,0,7,6,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestMultipleInsertsCauseInternalSplitOddAryRandomPoints,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestMultipleInsertsCauseInternalSplitOddAryRandomPoints""",7,457,55,1,0,20,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/Or,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).Or""",20,294,2,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/valueAt,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).valueAt""",14,476,7,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/int64.go/Sort,"""(github.com/Workiva/go-datastructures/slice.Int64Slice).Sort""",2,69,4,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/sort/symmerge_test.go/TestSymSearch,"""github.com/Workiva/go-datastructures/sort.TestSymSearch""",5,223,13,1,0,12,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/hasInternal,"""github.com/Workiva/go-datastructures/trie/xfast.hasInternal""",5,587,11,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/split,"""github.com/Workiva/go-datastructures/btree/plus.split""",7,254,5,2,1,28,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/len,"""(*github.com/Workiva/go-datastructures/btree/palm.nodes).len""",7,255,3,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTMultiDimensionInsertNegative,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTMultiDimensionInsertNegative""",3,397,34,1,0,16,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/encoding_test.go/TestSparseBitArraySerialization,"""github.com/Workiva/go-datastructures/bitarray.TestSparseBitArraySerialization""",20,122,31,1,0,22,15,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip.go/delete,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).delete""",7,424,6,1,1,27,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/sort/symmerge_test.go/TestDecomposePanicsWithWrongLength,"""github.com/Workiva/go-datastructures/sort.TestDecomposePanicsWithWrongLength""",5,223,34,1,0,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/copy,"""(*github.com/Workiva/go-datastructures/tree/avl.Immutable).copy""",5,407,4,0,1,11,2,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/TestAll,"""github.com/Workiva/go-datastructures/set.TestAll""",2,221,7,1,0,16,6,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/node.go/KeyHash,"""(*github.com/Workiva/go-datastructures/trie/dtrie.node).KeyHash""",4,208,7,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/cacher.go/clear,"""(*github.com/Workiva/go-datastructures/btree/immutable.cacher).clear""",14,117,5,0,0,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/queue/queue.go/Disposed,"""(*github.com/Workiva/go-datastructures/queue.Queue).Disposed""",8,360,8,0,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/btree/immutable/rt_test.go/verify,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).verify""",14,991,6,2,2,39,35,2,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/iterator.go/Value,"""(*github.com/Workiva/go-datastructures/btree/plus.iterator).Value""",7,52,5,0,1,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/cache/cache.go/Size,"""(*github.com/Workiva/go-datastructures/cache.cache).Size""",2,182,4,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/nand_test.go/TestNandDenseWithDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestNandDenseWithDenseBitArray""",20,300,30,1,0,34,21,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertMultipleNegativeIndexFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertMultipleNegativeIndexFirstDimension""",12,628,45,1,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Find,"""(*github.com/Workiva/go-datastructures/list.emptyList).Find""",2,235,4,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/BenchmarkLen,"""github.com/Workiva/go-datastructures/set.BenchmarkLen""",2,221,12,1,0,11,5,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
/slice/int64.go/Less,"""(github.com/Workiva/go-datastructures/slice.Int64Slice).Less""",2,69,4,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestPredecessorBetweenTwoKeys,"""github.com/Workiva/go-datastructures/trie/xfast.TestPredecessorBetweenTwoKeys""",5,579,29,1,0,17,12,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestIsEmpty,"""github.com/Workiva/go-datastructures/bitarray.TestIsEmpty""",20,466,11,1,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block_test.go/BenchmarkBlockToNums,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkBlockToNums""",20,34,20,1,0,12,6,2,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/add.go/insertLastDimension,"""github.com/Workiva/go-datastructures/btree/immutable.insertLastDimension""",14,303,19,3,2,14,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/hilbert/hilbert.go/Encode,"""github.com/Workiva/go-datastructures/numerics/hilbert.Encode""",2,61,6,1,1,11,8,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertPositiveIndexOutOfBoundsSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertPositiveIndexOutOfBoundsSecondDimension""",12,628,49,1,0,10,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/constructOrderedMockComparators,"""github.com/Workiva/go-datastructures/sort.constructOrderedMockComparators""",5,223,31,1,1,7,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/newDelayed,"""github.com/Workiva/go-datastructures/btree/immutable.newDelayed""",14,991,10,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/read,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).read""",7,544,4,1,0,14,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestFibHeap_DecreaseKey_EmptyHeap,"""github.com/Workiva/go-datastructures/fibheap.TestFibHeap_DecreaseKey_EmptyHeap""",4,444,33,1,0,12,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast_test.go/TestTrieIterator,"""github.com/Workiva/go-datastructures/trie/yfast.TestTrieIterator""",7,266,16,1,0,32,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/BenchmarkQueryItems,"""github.com/Workiva/go-datastructures/augmentedtree.BenchmarkQueryItems""",7,630,19,1,0,16,11,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent_test.go/TestInsertAndGet,"""github.com/Workiva/go-datastructures/list.TestInsertAndGet""",2,273,16,1,0,30,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring_test.go/BenchmarkRBLifeCycle,"""github.com/Workiva/go-datastructures/queue.BenchmarkRBLifeCycle""",8,295,20,1,0,26,12,2,0,0,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0
/rangetree/immutable.go/apply,"""(*github.com/Workiva/go-datastructures/rangetree.immutableRangeTree).apply""",12,259,5,4,1,22,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/splitKeys,"""github.com/Workiva/go-datastructures/btree/immutable.splitKeys""",14,476,9,2,1,6,9,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block.go/findLeftPosition,"""(github.com/Workiva/go-datastructures/bitarray.block).findLeftPosition""",20,86,16,0,1,9,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap_test.go/TestBitmap32_zGetBit,"""github.com/Workiva/go-datastructures/bitarray.TestBitmap32_zGetBit""",20,79,20,1,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/mock_test.go/HighAtDimension,"""(*github.com/Workiva/go-datastructures/rangetree.mockInterval).HighAtDimension""",12,43,15,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/error.go/Error,"""(github.com/Workiva/go-datastructures/rangetree.OutOfDimensionError).Error""",12,24,5,0,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/fetchKeys,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).fetchKeys""",7,544,9,2,3,29,18,3,2,0,0,0,0,0,0,0,0,0,0,2,2,1,1,3,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead_test.go/TestNelderMeadPolynomialMax,"""github.com/Workiva/go-datastructures/numerics/optimization.TestNelderMeadPolynomialMax""",3,144,27,1,0,15,9,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/rectangle.go/adjust,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.rectangle).adjust""",7,77,6,1,0,17,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/value,"""(*github.com/Workiva/go-datastructures/btree/immutable.sliceIterator).value""",14,476,5,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/push,"""(*github.com/Workiva/go-datastructures/btree/_link.nodes).push""",7,290,4,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/Apply,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).Apply""",3,413,5,2,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node_test.go/TestSplitLeafNodeOddAry,"""github.com/Workiva/go-datastructures/btree/_link.TestSplitLeafNodeOddAry""",7,148,23,1,0,14,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInsert3_4_5AfterQuery,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsert3_4_5AfterQuery""",7,412,29,1,0,10,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/deleteAt,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.nodes).deleteAt""",7,347,8,1,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/Compare,"""(github.com/Workiva/go-datastructures/sort.mockComparator).Compare""",5,223,7,1,1,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/init,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).init""",7,246,4,1,0,16,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/yfast.go/predecessor,"""(*github.com/Workiva/go-datastructures/trie/yfast.YFastTrie).predecessor""",7,246,11,1,1,29,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/next,"""(*github.com/Workiva/go-datastructures/btree/immutable.sliceIterator).next""",14,476,4,0,1,18,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue.go/swap,"""(*github.com/Workiva/go-datastructures/queue.priorityItems).swap""",8,242,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered.go/apply,"""(github.com/Workiva/go-datastructures/rangetree.orderedNodes).apply""",12,225,5,2,1,17,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/TestAddItems,"""github.com/Workiva/go-datastructures/set.TestAddItems""",2,221,12,1,0,19,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree.go/newNode,"""github.com/Workiva/go-datastructures/augmentedtree.newNode""",7,402,7,3,1,13,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/node.go/iterate,"""github.com/Workiva/go-datastructures/trie/dtrie.iterate""",4,208,7,2,1,7,4,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestMultipleInsertCausesSplitEvenAryRandomOrder,"""github.com/Workiva/go-datastructures/btree/palm.TestMultipleInsertCausesSplitEvenAryRandomOrder""",7,584,47,1,0,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/BenchmarkInsertAtPosition,"""github.com/Workiva/go-datastructures/slice/skip.BenchmarkInsertAtPosition""",7,404,25,1,0,10,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/futures_test.go/TestWaitOnGetResult,"""github.com/Workiva/go-datastructures/futures.TestWaitOnGetResult""",4,83,19,1,0,23,13,0,0,1,1,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/rangetree/orderedtree_test.go/TestOverwrites,"""github.com/Workiva/go-datastructures/rangetree.TestOverwrites""",12,628,14,1,0,17,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/New,"""github.com/Workiva/go-datastructures/rangetree/skiplist.New""",3,413,3,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/TestLeafNodeSplitEvenNumber,"""github.com/Workiva/go-datastructures/btree/plus.TestLeafNodeSplitEvenNumber""",7,204,27,1,0,12,6,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestDecomposeForSymMergeOddNumber,"""github.com/Workiva/go-datastructures/sort.TestDecomposeForSymMergeOddNumber""",5,223,33,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/TestSize,"""github.com/Workiva/go-datastructures/trie/dtrie.TestSize""",4,145,8,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestNoMatchLeft,"""github.com/Workiva/go-datastructures/augmentedtree.TestNoMatchLeft""",7,630,15,1,0,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher.go/Unlock,"""(*github.com/Workiva/go-datastructures/batcher.mutex).Unlock""",2,274,6,0,0,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/BenchmarkFindQuery,"""github.com/Workiva/go-datastructures/btree/palm.BenchmarkFindQuery""",7,584,18,1,0,11,7,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict.go/Clear,"""(*github.com/Workiva/go-datastructures/set.Set).Clear""",2,136,5,0,0,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/trie/ctrie/ctrie.go/ReadOnlySnapshot,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).ReadOnlySnapshot""",2,895,16,0,1,11,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/mockHashFactory,"""github.com/Workiva/go-datastructures/trie/ctrie.mockHashFactory""",2,411,15,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/or_test.go/BenchmarkOrSparseWithDense,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkOrSparseWithDense""",20,257,26,1,0,21,8,2,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/cache/cache.go/ensureCapacity,"""(*github.com/Workiva/go-datastructures/cache.cache).ensureCapacity""",2,182,14,1,0,7,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/search,"""(*github.com/Workiva/go-datastructures/btree/plus.lnode).search""",7,254,6,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLBulkDeleteAll,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLBulkDeleteAll""",5,372,20,1,0,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/cacher.go/newCacher,"""github.com/Workiva/go-datastructures/btree/immutable.newCacher""",14,117,9,1,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/BenchmarkImmutableGet,"""github.com/Workiva/go-datastructures/tree/avl.BenchmarkImmutableGet""",5,372,21,1,0,12,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/int64_test.go/TestInsert,"""github.com/Workiva/go-datastructures/slice.TestInsert""",2,38,10,1,0,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/insert,"""(*github.com/Workiva/go-datastructures/btree/plus.inode).insert""",7,254,6,2,1,25,7,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,1,2,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestSymMergeAlreadySortedReverseOrder,"""github.com/Workiva/go-datastructures/sort.TestSymMergeAlreadySortedReverseOrder""",5,223,37,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/global.go/insert,"""(*github.com/Workiva/go-datastructures/numerics/optimization.results).insert""",3,168,6,1,0,14,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestPoll,"""github.com/Workiva/go-datastructures/queue.TestPoll""",8,595,8,1,0,41,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/Load,"""github.com/Workiva/go-datastructures/btree/immutable.Load""",14,212,4,3,2,16,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/BenchmarkGetitems,"""github.com/Workiva/go-datastructures/btree/immutable.BenchmarkGetitems""",14,991,17,1,0,23,16,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/BenchmarkGetBit,"""github.com/Workiva/go-datastructures/bitarray.BenchmarkGetBit""",20,466,15,1,0,16,7,3,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableSingleDimensionBulkDeletes,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableSingleDimensionBulkDeletes""",12,533,39,1,0,20,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/mock/rangetree.go/Query,"""(*github.com/Workiva/go-datastructures/mock.RangeTree).Query""",2,61,5,1,1,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/constructRandomMockPoints,"""github.com/Workiva/go-datastructures/rtree/hilbert.constructRandomMockPoints""",7,457,25,1,1,8,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/key,"""(*github.com/Workiva/go-datastructures/btree/_link.node).key""",7,290,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/dispose,"""(*github.com/Workiva/go-datastructures/btree/palm.keyBundle).dispose""",7,544,7,1,0,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestMultipleBulkInsertOddAry,"""github.com/Workiva/go-datastructures/btree/palm.TestMultipleBulkInsertOddAry""",7,584,28,1,0,18,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/getParent,"""github.com/Workiva/go-datastructures/btree/palm.getParent""",7,255,9,2,1,8,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge.go/symRotate,"""github.com/Workiva/go-datastructures/sort.symRotate""",5,196,9,2,0,27,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl.go/adjustBalance,"""github.com/Workiva/go-datastructures/tree/avl.adjustBalance""",5,407,13,2,0,14,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/predecessor,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).predecessor""",5,587,11,1,1,29,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node.go/split,"""(*github.com/Workiva/go-datastructures/btree/plus.inode).split""",7,254,5,0,3,20,10,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/GetBit,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).GetBit""",20,294,6,1,2,8,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/minUint64,"""github.com/Workiva/go-datastructures/rtree/hilbert.minUint64""",7,171,9,1,1,9,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/BenchmarkInsert,"""github.com/Workiva/go-datastructures/trie/ctrie.BenchmarkInsert""",2,411,15,1,0,6,4,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring_test.go/TestDisposeOnPut,"""github.com/Workiva/go-datastructures/queue.TestDisposeOnPut""",8,295,16,1,0,30,14,2,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0
/rangetree/immutable_test.go/BenchmarkImmutableInsertSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkImmutableInsertSecondDimension""",12,533,39,1,0,10,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertInvalidNumber,"""github.com/Workiva/go-datastructures/rangetree.TestInsertInvalidNumber""",12,628,23,1,0,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node_gen.go/MarshalMsg,"""(*github.com/Workiva/go-datastructures/btree/immutable.Key).MarshalMsg""",14,304,10,1,2,16,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge_test.go/TestSymMergeUnevenLists,"""github.com/Workiva/go-datastructures/sort.TestSymMergeUnevenLists""",5,223,23,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/TestMultipleDelete,"""github.com/Workiva/go-datastructures/btree/palm.TestMultipleDelete""",7,584,18,1,0,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestAddRebalanceOutOfOrder,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddRebalanceOutOfOrder""",7,630,26,1,0,12,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/intersectsSparseBitArray,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).intersectsSparseBitArray""",20,294,24,1,1,8,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/ring.go/Dispose,"""(*github.com/Workiva/go-datastructures/queue.RingBuffer).Dispose""",8,179,7,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/btree/plus/btree_test.go/TestTreeInsertQuery3_4_5,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsertQuery3_4_5""",7,412,24,1,0,10,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/IsEmpty,"""(*github.com/Workiva/go-datastructures/list.emptyList).IsEmpty""",2,235,7,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap.go/ClearBit,"""(github.com/Workiva/go-datastructures/bitarray.Bitmap32).ClearBit""",20,59,8,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestComplementResetsBounds,"""github.com/Workiva/go-datastructures/bitarray.TestComplementResetsBounds""",20,466,26,1,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/fetchKeysInSerial,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).fetchKeysInSerial""",7,400,17,1,0,15,6,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict_test.go/TestFlattenCaches,"""github.com/Workiva/go-datastructures/set.TestFlattenCaches""",2,221,17,1,0,10,6,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher_test.go/TestMaxBytes,"""github.com/Workiva/go-datastructures/batcher.TestMaxBytes""",2,163,12,1,0,16,10,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge.go/SymMerge,"""github.com/Workiva/go-datastructures/sort.SymMerge""",5,196,8,1,1,37,23,0,0,0,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0
/augmentedtree/atree.go/newTree,"""github.com/Workiva/go-datastructures/augmentedtree.newTree""",7,402,7,1,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestFibHeap_Delete_EmptyHeap,"""github.com/Workiva/go-datastructures/fibheap.TestFibHeap_Delete_EmptyHeap""",4,444,28,1,0,10,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap.go/delete,"""(github.com/Workiva/go-datastructures/hashmap/fastinteger.packets).delete""",4,153,6,1,1,14,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/hilbert/hilbert_test.go/BenchmarkDecode,"""github.com/Workiva/go-datastructures/numerics/hilbert.BenchmarkDecode""",2,54,15,1,0,4,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/TestRTMultiDimensionDelete,"""github.com/Workiva/go-datastructures/rangetree/skiplist.TestRTMultiDimensionDelete""",3,397,26,1,0,10,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/newBitArray,"""github.com/Workiva/go-datastructures/bitarray.newBitArray""",20,294,11,2,1,22,6,1,0,0,0,0,0,0,0,0,0,0,1,1,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/Less,"""(github.com/Workiva/go-datastructures/bitarray.uintSlice).Less""",20,308,4,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/Capacity,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).Capacity""",20,308,8,0,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInsert3_4_5,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsert3_4_5""",7,412,19,1,0,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/TestTreeInsertReverseOrder2_3_4,"""github.com/Workiva/go-datastructures/btree/plus.TestTreeInsertReverseOrder2_3_4""",7,412,31,1,0,13,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered_test.go/TestApply,"""github.com/Workiva/go-datastructures/rangetree.TestApply""",12,158,9,1,0,66,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestOTDeleteReverseOrderMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.TestOTDeleteReverseOrderMultiDimensions""",12,628,39,1,0,17,16,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/nodes,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.insertAction).nodes""",7,171,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node.go/needsSplit,"""(*github.com/Workiva/go-datastructures/btree/_link.node).needsSplit""",7,290,10,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestNodeInfiniteLoop,"""github.com/Workiva/go-datastructures/btree/immutable.TestNodeInfiniteLoop""",14,991,20,1,0,12,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree_test.go/BenchmarkBulkDelete,"""github.com/Workiva/go-datastructures/btree/palm.BenchmarkBulkDelete""",7,584,19,1,0,15,7,2,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestSimpleInsert,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestSimpleInsert""",7,457,16,1,0,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/untombed,"""(*github.com/Workiva/go-datastructures/trie/ctrie.tNode).untombed""",2,895,8,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Head,"""(*github.com/Workiva/go-datastructures/list.emptyList).Head""",2,235,4,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/iterator_test.go/TestIterator,"""github.com/Workiva/go-datastructures/trie/xfast.TestIterator""",5,43,12,1,0,34,26,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/node_test.go/TestLeafNodeInsert,"""github.com/Workiva/go-datastructures/btree/plus.TestLeafNodeInsert""",7,204,18,1,0,11,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/TestDeleteAll,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.TestDeleteAll""",4,292,13,1,0,13,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/mock_test.go/newMockEntry,"""github.com/Workiva/go-datastructures/rangetree/skiplist.newMockEntry""",3,32,12,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap.go/GetBit,"""(github.com/Workiva/go-datastructures/bitarray.Bitmap64).GetBit""",20,59,6,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/priority_queue_test.go/TestPriorityPeek,"""github.com/Workiva/go-datastructures/queue.TestPriorityPeek""",8,239,16,1,0,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/executeInterfacesInSerial,"""github.com/Workiva/go-datastructures/rtree/hilbert.executeInterfacesInSerial""",7,171,25,2,0,8,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/or_test.go/TestOrDenseWithDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestOrDenseWithDenseBitArray""",20,257,28,1,0,38,22,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree.go/recursiveMutate,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.tree).recursiveMutate""",7,400,15,2,0,81,26,3,0,0,0,0,0,0,0,0,0,3,0,3,2,11,0,0,1,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/btree/immutable/rt_test.go/TestLargeAdd,"""github.com/Workiva/go-datastructures/btree/immutable.TestLargeAdd""",14,991,12,1,0,23,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/TestInsertOverwrite,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.TestInsertOverwrite""",4,292,19,1,0,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/searchRects,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).searchRects""",7,347,11,1,1,9,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestDeleteRebalanceInOrderMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestDeleteRebalanceInOrderMultiDimensions""",7,454,41,1,0,25,13,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/rects,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.getAction).rects""",7,171,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/newKeys,"""github.com/Workiva/go-datastructures/rtree/hilbert.newKeys""",7,347,7,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/generateRandomMockEntries,"""github.com/Workiva/go-datastructures/slice/skip.generateRandomMockEntries""",7,404,25,1,1,7,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/checkPredecessor,"""github.com/Workiva/go-datastructures/trie/xfast.checkPredecessor""",5,579,16,2,0,30,7,2,1,0,0,0,0,0,0,0,0,2,0,0,0,5,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestReverseNodeSplit,"""github.com/Workiva/go-datastructures/btree/immutable.TestReverseNodeSplit""",14,991,20,1,0,30,23,2,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/checkAndRun,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).checkAndRun""",7,544,11,1,0,46,24,1,0,0,0,0,0,1,0,0,0,2,0,0,0,8,1,3,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0
/btree/plus/iterator.go/Next,"""(*github.com/Workiva/go-datastructures/btree/plus.iterator).Next""",7,52,4,0,1,16,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/And,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).And""",20,294,3,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestGenerativeDeletes,"""github.com/Workiva/go-datastructures/btree/immutable.TestGenerativeDeletes""",14,991,21,1,0,38,39,1,0,0,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/and_test.go/TestAndSparseWithSmallerDenseBitArray,"""github.com/Workiva/go-datastructures/bitarray.TestAndSparseWithSmallerDenseBitArray""",20,189,37,1,0,29,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/plus/btree_test.go/BenchmarkBulkAddToExisting,"""github.com/Workiva/go-datastructures/btree/plus.BenchmarkBulkAddToExisting""",7,412,26,1,0,14,6,2,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableInsertMultipleNegativeIndexSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertMultipleNegativeIndexSecondDimension""",12,533,55,1,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableInsertInvalidNumber,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertInvalidNumber""",12,533,32,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/hilbert.go/bundlesFromRects,"""github.com/Workiva/go-datastructures/rtree/hilbert.bundlesFromRects""",7,63,16,1,1,31,22,3,1,0,0,0,0,1,0,0,0,2,0,5,0,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0
/rtree/hilbert/mock_test.go/UpperRight,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.mockRectangle).UpperRight""",7,22,10,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLSimpleDelete,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLSimpleDelete""",5,372,19,1,0,28,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/batcher/batcher_test.go/TestMaxItems,"""github.com/Workiva/go-datastructures/batcher.TestMaxItems""",2,163,12,1,0,14,10,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/encoding.go/Deserialize,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).Deserialize""",20,218,11,1,1,40,15,2,0,0,0,0,0,0,0,0,0,6,0,1,0,4,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue.go/getUntil,"""(*github.com/Workiva/go-datastructures/queue.items).getUntil""",8,360,8,1,1,23,5,1,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/entries_test.go/TestEntriesDelete,"""github.com/Workiva/go-datastructures/trie/yfast.TestEntriesDelete""",7,134,17,1,0,13,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/Len,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).Len""",14,212,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestOTMultipleAddMultipleDimensions,"""github.com/Workiva/go-datastructures/rangetree.TestOTMultipleAddMultipleDimensions""",12,628,35,1,0,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree.go/insert,"""(*github.com/Workiva/go-datastructures/btree/_link.blink).insert""",7,129,6,2,1,20,8,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0
/btree/immutable/node.go/ToItem,"""(github.com/Workiva/go-datastructures/btree/immutable.Key).ToItem""",14,476,6,0,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/constructMultiDimensionalImmutableTree,"""github.com/Workiva/go-datastructures/rangetree.constructMultiDimensionalImmutableTree""",12,533,38,1,2,8,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/Remove,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).Remove""",2,895,6,1,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/walkUpSuccessor,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).walkUpSuccessor""",5,587,15,1,0,10,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/mock_test.go/newMockRectangle,"""github.com/Workiva/go-datastructures/rtree/hilbert.newMockRectangle""",7,22,16,1,1,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/node_test.go/TestSplitLeafNodeEvenAry,"""github.com/Workiva/go-datastructures/btree/_link.TestSplitLeafNodeEvenAry""",7,148,24,1,0,15,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/search,"""(github.com/Workiva/go-datastructures/btree/immutable.orderedItems).search""",14,991,6,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/btree/plus/btree_test.go/TestGetExactMatchesOnly,"""github.com/Workiva/go-datastructures/btree/plus.TestGetExactMatchesOnly""",7,412,23,1,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/sort,"""(github.com/Workiva/go-datastructures/btree/immutable.Keys).sort""",14,476,4,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/keys,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.insertAction).keys""",7,171,4,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/addNode,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.insertAction).addNode""",7,171,7,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/sort.go/MultithreadedSortComparators,"""github.com/Workiva/go-datastructures/sort.MultithreadedSortComparators""",5,72,28,1,1,41,25,3,1,0,0,0,0,2,0,0,0,3,0,1,0,2,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0
/rangetree/ordered.go/deleteAt,"""(*github.com/Workiva/go-datastructures/rangetree.orderedNodes).deleteAt""",12,225,8,1,1,10,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/BenchmarkOTQueryItemsMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkOTQueryItemsMultiDimensions""",12,628,36,1,0,20,14,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/mock_test.go/constructMockInterval,"""github.com/Workiva/go-datastructures/rangetree.constructMockInterval""",12,43,21,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/sort_test.go/TestMultiThreadedSortEvenNumber,"""github.com/Workiva/go-datastructures/sort.TestMultiThreadedSortEvenNumber""",5,39,31,1,0,8,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/flagPos,"""github.com/Workiva/go-datastructures/trie/ctrie.flagPos""",2,895,7,3,2,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/generateLinearItems,"""github.com/Workiva/go-datastructures/btree/immutable.generateLinearItems""",14,991,19,1,1,8,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/less,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nmVertex).less""",3,559,4,2,1,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/subtract,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nmVertex).subtract""",3,559,8,1,1,9,4,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/splitNode,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).splitNode""",7,544,9,3,0,17,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/symmerge.go/symSwap,"""github.com/Workiva/go-datastructures/sort.symSwap""",5,196,7,2,0,4,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestDeleteAll,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestDeleteAll""",7,457,13,1,0,10,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestFibHeap_DecreaseKey_LargerNewPriority,"""github.com/Workiva/go-datastructures/fibheap.TestFibHeap_DecreaseKey_LargerNewPriority""",4,444,41,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/block.go/remove,"""(github.com/Workiva/go-datastructures/bitarray.block).remove""",20,86,6,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestInsertRandomGetByPosition,"""github.com/Workiva/go-datastructures/slice/skip.TestInsertRandomGetByPosition""",7,404,29,1,0,9,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/key.go/chunkKeys,"""github.com/Workiva/go-datastructures/btree/palm.chunkKeys""",7,20,9,2,1,6,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/hashmap/fastinteger/hashmap_test.go/TestMultipleInserts,"""github.com/Workiva/go-datastructures/hashmap/fastinteger.TestMultipleInserts""",4,292,19,1,0,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestPollNoMemoryLeak,"""github.com/Workiva/go-datastructures/queue.TestPollNoMemoryLeak""",8,595,20,1,0,10,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/TestGetPositionBulkDelete,"""github.com/Workiva/go-datastructures/slice/skip.TestGetPositionBulkDelete""",7,404,25,1,0,14,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/And,"""(*github.com/Workiva/go-datastructures/bitarray.sparseBitArray).And""",20,308,3,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/rectangle.go/newRectangeFromRect,"""github.com/Workiva/go-datastructures/rtree/hilbert.newRectangeFromRect""",7,77,19,1,1,11,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/tree/avl/avl_test.go/TestAVLSimpleInsert,"""github.com/Workiva/go-datastructures/tree/avl.TestAVLSimpleInsert""",5,372,19,1,0,20,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/lookup,"""(*github.com/Workiva/go-datastructures/trie/ctrie.lNode).lookup""",2,895,6,1,2,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/BenchmarkSnapshot,"""github.com/Workiva/go-datastructures/trie/ctrie.BenchmarkSnapshot""",2,411,17,1,0,11,6,2,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
/bitarray/bitarray_test.go/TestClear,"""github.com/Workiva/go-datastructures/bitarray.TestClear""",20,466,9,1,0,33,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/cache/cache_test.go/TestNew,"""github.com/Workiva/go-datastructures/cache.TestNew""",2,122,7,1,0,17,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/_link/tree_test.go/generateKeys,"""github.com/Workiva/go-datastructures/btree/_link.generateKeys""",7,253,12,1,1,7,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/TestDeleteMultipleLevelsRandomlyBulk,"""github.com/Workiva/go-datastructures/btree/immutable.TestDeleteMultipleLevelsRandomlyBulk""",14,991,36,1,0,10,10,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/atree_test.go/TestRootDelete,"""github.com/Workiva/go-datastructures/augmentedtree.TestRootDelete""",7,630,14,1,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray.go/deleteAtIndex,"""(*github.com/Workiva/go-datastructures/bitarray.uintSlice).deleteAtIndex""",20,308,13,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/multiDelete,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).multiDelete""",14,476,11,2,0,34,14,3,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/btree/plus/node.go/needsSplit,"""(*github.com/Workiva/go-datastructures/btree/plus.lnode).needsSplit""",7,254,10,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap.go/PopCount,"""(github.com/Workiva/go-datastructures/bitarray.Bitmap32).PopCount""",20,59,8,0,1,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray_test.go/TestBitArrayEqualsSparse,"""github.com/Workiva/go-datastructures/bitarray.TestBitArrayEqualsSparse""",20,466,24,1,0,17,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/rdcssReadRoot,"""(*github.com/Workiva/go-datastructures/trie/ctrie.Ctrie).rdcssReadRoot""",2,895,13,1,1,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0
/btree/immutable/node_gen.go/UnmarshalMsg,"""(*github.com/Workiva/go-datastructures/btree/immutable.Keys).UnmarshalMsg""",14,304,12,1,2,30,8,1,0,0,0,0,0,0,0,0,0,1,0,0,0,6,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/queue/queue_test.go/TestTakeUntilEmptyQueue,"""github.com/Workiva/go-datastructures/queue.TestTakeUntilEmptyQueue""",8,595,23,1,0,12,4,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitmap.go/ClearBit,"""(github.com/Workiva/go-datastructures/bitarray.Bitmap64).ClearBit""",20,59,8,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/node.go/Swap,"""(*github.com/Workiva/go-datastructures/btree/immutable.keySortWrapper).Swap""",14,476,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/BenchmarkFibHeap_Merge,"""github.com/Workiva/go-datastructures/fibheap.BenchmarkFibHeap_Merge""",4,444,22,1,0,10,8,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/iterator.go/exhaust,"""(*github.com/Workiva/go-datastructures/trie/xfast.Iterator).exhaust""",5,44,7,0,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/outsideContract,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nelderMead).outsideContract""",3,559,15,2,1,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/BenchmarkInsertFirstDimension,"""github.com/Workiva/go-datastructures/rangetree.BenchmarkInsertFirstDimension""",12,628,29,1,0,10,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/intersectsDenseBitArray,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).intersectsDenseBitArray""",20,294,23,1,1,8,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/Swap,"""(*github.com/Workiva/go-datastructures/btree/immutable.valueSortWrapper).Swap""",14,991,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict.go/Dispose,"""(*github.com/Workiva/go-datastructures/set.Set).Dispose""",2,136,7,0,0,15,5,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/set/dict.go/New,"""github.com/Workiva/go-datastructures/set.New""",2,136,3,1,1,11,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
/bitarray/encoding.go/Serialize,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).Serialize""",20,218,9,0,2,34,7,0,0,0,0,0,0,0,0,0,0,2,0,0,0,6,0,0,0,0,0,7,0,1,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap.go/Min,"""(*github.com/Workiva/go-datastructures/fibheap.FloatingFibonacciHeap).Min""",4,330,3,0,2,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/futures/futures.go/New,"""github.com/Workiva/go-datastructures/futures.New""",4,82,3,2,1,8,4,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0
/list/persistent_test.go/TestFind,"""github.com/Workiva/go-datastructures/list.TestFind""",2,273,8,1,0,21,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/splitLeaf,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).splitLeaf""",7,347,9,1,3,17,7,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/yfast/entries.go/max,"""(github.com/Workiva/go-datastructures/trie/yfast.Entries).max""",7,142,3,0,2,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/mock_test.go/LowAtDimension,"""(*github.com/Workiva/go-datastructures/augmentedtree.mockInterval).LowAtDimension""",7,43,14,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/sparse_bitarray_test.go/TestSparseBitArrayToNums,"""github.com/Workiva/go-datastructures/bitarray.TestSparseBitArrayToNums""",20,294,24,1,0,10,5,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/withPosition,"""(*github.com/Workiva/go-datastructures/btree/palm.keys).withPosition""",7,255,12,1,2,10,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/fibheap/fibheap_test.go/TestFibHeap_Enqueue_Min,"""github.com/Workiva/go-datastructures/fibheap.TestFibHeap_Enqueue_Min""",4,444,23,1,0,9,6,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestInsertNegativeIndexSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.TestInsertNegativeIndexSecondDimension""",12,628,38,1,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist.go/delete,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.skipListRT).delete""",3,413,6,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/split,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.node).split""",7,347,5,1,3,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestDeleteMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestDeleteMultiDimensions""",7,454,25,1,0,41,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable_test.go/TestImmutableInsertPositiveIndexOutOfBoundsSecondDimension,"""github.com/Workiva/go-datastructures/rangetree.TestImmutableInsertPositiveIndexOutOfBoundsSecondDimension""",12,533,58,1,0,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/list/persistent.go/Remove,"""(*github.com/Workiva/go-datastructures/list.emptyList).Remove""",2,235,6,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead_test.go/TestNelderMeadPolynomialMin,"""github.com/Workiva/go-datastructures/numerics/optimization.TestNelderMeadPolynomialMin""",3,144,27,1,0,16,12,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/iterator.go/Next,"""(*github.com/Workiva/go-datastructures/slice/skip.iterator).Next""",7,56,4,0,1,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt_test.go/Save,"""(*github.com/Workiva/go-datastructures/btree/immutable.ephemeral).Save""",14,991,4,1,1,13,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/btree/immutable/delete.go/delete,"""(*github.com/Workiva/go-datastructures/btree/immutable.Tr).delete""",14,263,6,1,1,90,33,4,3,0,0,0,0,0,0,0,0,1,0,1,1,11,0,0,0,0,0,16,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/immutable/rt.go/getNode,"""(*github.com/Workiva/go-datastructures/btree/immutable.context).getNode""",14,212,7,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/slice/skip/skip.go/SplitAt,"""(*github.com/Workiva/go-datastructures/slice/skip.SkipList).SplitAt""",7,424,7,1,2,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/augmentedtree/multidimensional_test.go/TestAddRebalanceRandomOrderMultiDimensions,"""github.com/Workiva/go-datastructures/augmentedtree.TestAddRebalanceRandomOrderMultiDimensions""",7,454,42,1,0,20,11,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/dtrie/dtrie_test.go/BenchmarkRemove,"""github.com/Workiva/go-datastructures/trie/dtrie.BenchmarkRemove""",4,145,15,1,0,7,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast.go/walkUpPredecessor,"""(*github.com/Workiva/go-datastructures/trie/xfast.XFastTrie).walkUpPredecessor""",5,587,17,1,0,8,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/xfast/xfast_test.go/TestDeleteLateBranchingMin,"""github.com/Workiva/go-datastructures/trie/xfast.TestDeleteLateBranchingMin""",5,579,26,1,0,24,18,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/tree.go/applyNode,"""(*github.com/Workiva/go-datastructures/btree/palm.ptree).applyNode""",7,544,9,2,0,34,13,2,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0
/btree/palm/tree_test.go/BenchmarkReadAndWrites,"""github.com/Workiva/go-datastructures/btree/palm.BenchmarkReadAndWrites""",7,584,22,1,0,14,7,2,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestOTAddLargeNumbersMultiDimension,"""github.com/Workiva/go-datastructures/rangetree.TestOTAddLargeNumbersMultiDimension""",12,628,35,1,0,16,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/btree/palm/node.go/byPosition,"""(*github.com/Workiva/go-datastructures/btree/palm.nodes).byPosition""",7,255,10,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/orderedtree_test.go/TestOTDeleteMultiDimensions,"""github.com/Workiva/go-datastructures/rangetree.TestOTDeleteMultiDimensions""",12,628,27,1,0,15,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/node.go/search,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.keys).search""",7,347,6,1,1,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/btree/immutable/node.go/needsSplit,"""(*github.com/Workiva/go-datastructures/btree/immutable.Node).needsSplit""",14,476,10,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/ordered.go/addAt,"""(*github.com/Workiva/go-datastructures/rangetree.orderedNodes).addAt""",12,225,5,2,1,18,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie.go/newMainNode,"""github.com/Workiva/go-datastructures/trie/ctrie.newMainNode""",2,895,11,6,1,19,4,0,0,0,0,0,0,0,0,0,0,0,1,3,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/mock_test.go/HighAtDimension,"""(*github.com/Workiva/go-datastructures/rangetree/skiplist.mockInterval).HighAtDimension""",3,32,15,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/trie/ctrie/ctrie_test.go/TestCtrie,"""github.com/Workiva/go-datastructures/trie/ctrie.TestCtrie""",2,411,9,1,0,51,53,3,0,0,0,0,0,0,0,0,0,3,0,15,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0
/btree/immutable/rt_test.go/defaultConfig,"""github.com/Workiva/go-datastructures/btree/immutable.defaultConfig""",14,991,13,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/tree_test.go/TestQueryForPoint,"""github.com/Workiva/go-datastructures/rtree/hilbert.TestQueryForPoint""",7,457,17,1,0,22,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/slice/skip/skip_test.go/BenchmarkInsert,"""github.com/Workiva/go-datastructures/slice/skip.BenchmarkInsert""",7,404,15,1,0,11,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/or.go/orSparseWithSparseBitArray,"""github.com/Workiva/go-datastructures/bitarray.orSparseWithSparseBitArray""",20,136,26,2,1,55,28,1,0,0,0,0,0,0,0,0,0,2,0,0,0,5,1,3,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable.go/Len,"""(*github.com/Workiva/go-datastructures/rangetree.immutableRangeTree).Len""",12,259,3,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/skiplist/skiplist_test.go/BenchmarkMultiDimensionInsert,"""github.com/Workiva/go-datastructures/rangetree/skiplist.BenchmarkMultiDimensionInsert""",3,397,29,1,0,10,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/bitarray/bitarray.go/copy,"""(*github.com/Workiva/go-datastructures/bitarray.bitArray).copy""",20,294,4,0,1,9,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/numerics/optimization/nelder_mead.go/add,"""(*github.com/Workiva/go-datastructures/numerics/optimization.nmVertex).add""",3,559,3,1,1,9,4,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rangetree/immutable.go/Add,"""(*github.com/Workiva/go-datastructures/rangetree.immutableRangeTree).Add""",12,259,3,1,1,17,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/rtree/hilbert/action.go/nodes,"""(*github.com/Workiva/go-datastructures/rtree/hilbert.getAction).nodes""",7,171,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/set/dict.go/Remove,"""(*github.com/Workiva/go-datastructures/set.Set).Remove""",2,136,6,1,0,8,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0
/slice/skip/mock_test.go/exhaust,"""(*github.com/Workiva/go-datastructures/slice/skip.mockIterator).exhaust""",7,49,7,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/sort/interface.go/Len,"""(github.com/Workiva/go-datastructures/sort.Comparators).Len""",5,33,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
