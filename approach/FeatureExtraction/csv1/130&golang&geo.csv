function,id,pkgfiles,fileloc,namelength,parameters,returns,loc,funccalls,loops,nestedloops,channels,sends,receives,closes,gos,concrranges,selects,selectcases,variables,pointers,slices,maps,ifelses,switches,switchcases,panics,recovers,defers,cyclomaticcomplexity,bufio,bytes,crypto,database/sql,encoding,encoding/binary,encoding/csv,encoding/json,encoding/xml,io,io/ioutil,math,math/rand,mime,net,net/http,net/http/httptest,net/http/httptrace,net/http/httputil,net/rpc,net/rpc/jsonrpc,net/smtp,net/textproto,os,os/exec,os/signal,sort,strconv,sync,sync/atomic,syscall
/s2/polyline.go/Length,"""(*github.com/golang/geo/s2.Polyline).Length""",52,192,6,0,1,7,2,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates_test.go/TestPredicatesRobustSignEqualities,"""github.com/golang/geo/s2.TestPredicatesRobustSignEqualities""",52,298,34,1,0,20,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/precAdd,"""github.com/golang/geo/r3.precAdd""",5,184,7,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/LargestComponent,"""(github.com/golang/geo/r3.Vector).LargestComponent""",5,168,16,0,1,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval_test.go/TestIntervalFromPointPair,"""github.com/golang/geo/s1.TestIntervalFromPointPair""",7,441,25,1,0,16,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/CellIDFromFace,"""github.com/golang/geo/s2.CellIDFromFace""",52,885,14,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/Edge,"""(*github.com/golang/geo/s2.Loop).Edge""",52,446,4,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/ContainsPoint,"""(github.com/golang/geo/s2.Rect).ContainsPoint""",52,424,13,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/max,"""github.com/golang/geo/s2.max""",52,449,3,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_bounder_test.go/rectBoundForPoints,"""github.com/golang/geo/s2.rectBoundForPoints""",52,219,18,1,1,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng.go/Distance,"""(github.com/golang/geo/s2.LatLng).Distance""",52,81,8,1,1,8,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng.go/PointFromLatLng,"""github.com/golang/geo/s2.PointFromLatLng""",52,81,15,1,1,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/FullLoop,"""github.com/golang/geo/s2.FullLoop""",52,446,8,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/IsEmpty,"""(*github.com/golang/geo/s2.Loop).IsEmpty""",52,446,7,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapCenterHeightRadius,"""github.com/golang/geo/s2.TestCapCenterHeightRadius""",52,702,25,1,0,38,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestContainsPoint,"""github.com/golang/geo/r2.TestContainsPoint""",3,457,17,1,0,18,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestAddPoint,"""github.com/golang/geo/r2.TestAddPoint""",3,457,12,1,0,12,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/IsUnit,"""(github.com/golang/geo/r3.Vector).IsUnit""",5,168,6,0,1,3,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/wedge_relations.go/WedgeRelation,"""github.com/golang/geo/s2.WedgeRelation""",52,83,13,1,1,42,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/MaxPointError,"""(github.com/golang/geo/s1.ChordAngle).MaxPointError""",7,192,13,0,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/clamp,"""github.com/golang/geo/s2.clamp""",52,885,5,1,1,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDCommonAncestorLevel,"""github.com/golang/geo/s2.TestCellIDCommonAncestorLevel""",52,1032,29,1,0,65,35,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle_test.go/TestAngleString,"""github.com/golang/geo/s1.TestAngleString""",7,153,15,1,0,4,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion_test.go/TestCellUnionNormalization,"""github.com/golang/geo/s2.TestCellUnionNormalization""",52,707,26,1,0,27,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/randomFrame,"""github.com/golang/geo/s2.randomFrame""",52,395,11,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3_test.go/TestDet,"""github.com/golang/geo/s2.TestDet""",52,478,7,1,0,66,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3_test.go/TestTranspose,"""github.com/golang/geo/s2.TestTranspose""",52,478,13,1,0,66,7,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/IntervalFromEndpoints,"""github.com/golang/geo/s1.IntervalFromEndpoints""",7,330,21,1,1,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/Intersects,"""(github.com/golang/geo/s2.CellID).Intersects""",52,885,10,1,1,2,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/Prev,"""(github.com/golang/geo/s2.CellID).Prev""",52,885,4,0,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/stToSiTi,"""github.com/golang/geo/s2.stToSiTi""",52,289,8,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/ContainsOrigin,"""(*github.com/golang/geo/s2.testShape).ContainsOrigin""",52,241,14,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/Face,"""(github.com/golang/geo/s2.CellID).Face""",52,885,4,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/readUint32,"""(*github.com/golang/geo/s2.decoder).readUint32""",52,167,10,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng.go/LatLngFromDegrees,"""github.com/golang/geo/s2.LatLngFromDegrees""",52,81,17,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/metric.go/MaxLevel,"""(github.com/golang/geo/s2.Metric).MaxLevel""",52,150,8,1,1,13,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/IsLeaf,"""(github.com/golang/geo/s2.Cell).IsLeaf""",52,375,6,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/isEmptyOrFull,"""(*github.com/golang/geo/s2.Loop).isEmptyOrFull""",52,446,13,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode_test.go/TestEncodeDecode,"""github.com/golang/geo/s2.TestEncodeDecode""",52,205,16,1,0,95,47,1,0,0,0,0,0,0,0,0,0,2,0,3,0,2,0,0,0,0,0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/makeLoop,"""github.com/golang/geo/s2.makeLoop""",52,395,8,1,1,9,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/InteriorContainsInterval,"""(github.com/golang/geo/r1.Interval).InteriorContainsInterval""",3,145,24,1,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Intersects,"""(github.com/golang/geo/r2.Rect).Intersects""",3,241,10,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle_test.go/TestChordAngleBasics,"""github.com/golang/geo/s1.TestChordAngleBasics""",7,233,20,1,0,31,8,1,0,0,0,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/ChildBegin,"""(github.com/golang/geo/s2.CellID).ChildBegin""",52,885,10,0,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/CapBound,"""(github.com/golang/geo/s2.Cap).CapBound""",52,467,8,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3.go/col,"""(*github.com/golang/geo/s2.matrix3x3).col""",52,113,3,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/IsEmpty,"""(github.com/golang/geo/r1.Interval).IsEmpty""",3,145,7,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle.go/E6,"""(github.com/golang/geo/s1.Angle).E6""",7,98,2,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/InteriorContainsInterval,"""(github.com/golang/geo/s1.Interval).InteriorContainsInterval""",7,330,24,1,1,11,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/Radius,"""(github.com/golang/geo/s2.Cap).Radius""",52,467,6,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/NumLoops,"""(*github.com/golang/geo/s2.Polygon).NumLoops""",52,335,8,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/CapBound,"""(*github.com/golang/geo/s2.Loop).CapBound""",52,446,8,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/PointFromCoords,"""github.com/golang/geo/s2.PointFromCoords""",52,312,15,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/dimension,"""(*github.com/golang/geo/s2.Polygon).dimension""",52,335,9,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/Vertex,"""(github.com/golang/geo/s2.Cell).Vertex""",52,375,6,1,1,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/LeafCellsCovered,"""(*github.com/golang/geo/s2.CellUnion).LeafCellsCovered""",52,234,16,0,1,6,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/randomCellID,"""github.com/golang/geo/s2.randomCellID""",52,395,12,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestNorm,"""github.com/golang/geo/r2.TestNorm""",3,457,8,1,0,22,7,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/MulByFloat64,"""(github.com/golang/geo/r3.PreciseVector).MulByFloat64""",5,184,12,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/InfChordAngle,"""github.com/golang/geo/s1.InfChordAngle""",7,192,13,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/readFloat32,"""(*github.com/golang/geo/s2.decoder).readFloat32""",52,167,11,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crosser.go/NewEdgeCrosser,"""github.com/golang/geo/s2.NewEdgeCrosser""",52,217,14,1,1,9,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/Encode,"""(github.com/golang/geo/s2.Loop).Encode""",52,446,6,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/readInt32,"""(*github.com/golang/geo/s2.decoder).readInt32""",52,167,9,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/String,"""(github.com/golang/geo/r1.Interval).String""",3,145,6,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Hi,"""(github.com/golang/geo/r2.Rect).Hi""",3,241,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle_test.go/TestChordAngleArithmetic,"""github.com/golang/geo/s1.TestChordAngleArithmetic""",7,233,24,1,0,52,22,2,0,0,0,0,0,0,0,0,0,1,0,2,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances.go/IsDistanceLess,"""github.com/golang/geo/s2.IsDistanceLess""",52,243,14,2,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/exitPoint,"""(github.com/golang/geo/s2.pointUVW).exitPoint""",52,455,9,1,1,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances.go/DistanceFromSegment,"""github.com/golang/geo/s2.DistanceFromSegment""",52,243,19,1,1,4,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/chainStart,"""(*github.com/golang/geo/s2.Polygon).chainStart""",52,335,10,1,1,14,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_bounder_test.go/TestRectBounderExpandForSubregions,"""github.com/golang/geo/s2.TestRectBounderExpandForSubregions""",52,219,34,1,0,85,33,2,0,0,0,0,0,0,0,0,0,0,0,2,0,6,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/CellUnionFromRange,"""github.com/golang/geo/s2.CellUnionFromRange""",52,234,18,1,1,7,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/readFloat64,"""(*github.com/golang/geo/s2.decoder).readFloat64""",52,167,11,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng.go/latitude,"""github.com/golang/geo/s2.latitude""",52,81,8,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crosser_test.go/testCrossing,"""github.com/golang/geo/s2.testCrossing""",52,230,12,5,0,40,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/stToIJ,"""github.com/golang/geo/s2.stToIJ""",52,885,6,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/float64Eq,"""github.com/golang/geo/s2.float64Eq""",52,395,9,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv_test.go/TestFaceXYZtoUVW,"""github.com/golang/geo/s2.TestFaceXYZtoUVW""",52,346,16,1,0,40,32,1,0,0,0,0,0,0,0,0,0,2,0,0,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/String,"""(github.com/golang/geo/r3.Vector).String""",5,168,6,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/longitude,"""(github.com/golang/geo/s2.Cell).longitude""",52,375,9,1,1,19,5,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,5,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crosser.go/CrossingSign,"""(*github.com/golang/geo/s2.EdgeCrosser).CrossingSign""",52,217,12,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/unitNorm,"""github.com/golang/geo/s2.unitNorm""",52,289,8,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestIntervalOps,"""github.com/golang/geo/r2.TestIntervalOps""",3,457,15,1,0,115,43,1,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/ChordAngleBetweenPoints,"""github.com/golang/geo/s2.ChordAngleBetweenPoints""",52,312,23,1,1,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/newCandidate,"""(*github.com/golang/geo/s2.coverer).newCandidate""",52,449,12,1,1,18,4,0,0,0,0,0,0,0,0,0,0,0,1,0,0,6,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/parseLatLngs,"""github.com/golang/geo/s2.parseLatLngs""",52,395,12,1,1,29,14,1,0,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,3,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0
/r3/vector_test.go/TestVectorSub,"""github.com/golang/geo/r3.TestVectorSub""",5,323,13,1,0,14,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/fastContains,"""(github.com/golang/geo/s1.Interval).fastContains""",7,330,12,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion_test.go/TestCellUnionDenormalize,"""github.com/golang/geo/s2.TestCellUnionDenormalize""",52,707,24,1,0,93,129,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/TestShapeIndexBasics,"""github.com/golang/geo/s2.TestShapeIndexBasics""",52,241,20,1,0,17,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle_test.go/TestChordAngleTrigonometry,"""github.com/golang/geo/s1.TestChordAngleTrigonometry""",7,233,26,1,0,44,49,1,0,0,0,0,0,0,0,0,0,3,0,0,0,9,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/Contains,"""(github.com/golang/geo/s2.Cap).Contains""",52,467,8,1,1,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping_test.go/TestEdgeClippingIntersectsFace,"""github.com/golang/geo/s2.TestEdgeClippingIntersectsFace""",52,383,30,1,0,18,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon_test.go/TestPolygonLoopIsHoleAndLoopSign,"""github.com/golang/geo/s2.TestPolygonLoopIsHoleAndLoopSign""",52,324,32,1,0,20,11,0,0,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/ContainsOrigin,"""(*github.com/golang/geo/s2.Polygon).ContainsOrigin""",52,335,14,0,1,6,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion_test.go/TestCellUnionNormalizePseudoRandom,"""github.com/golang/geo/s2.TestCellUnionNormalizePseudoRandom""",52,707,34,1,0,110,90,6,5,0,0,0,0,0,0,0,0,4,0,4,0,23,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test_test.go/TestParseRect,"""github.com/golang/geo/s2.TestParseRect""",52,180,13,1,0,61,29,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/wedge_relations_test.go/TestWedgeRelations,"""github.com/golang/geo/s2.TestWedgeRelations""",52,151,18,1,0,142,11,1,0,0,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle.go/Degrees,"""(github.com/golang/geo/s1.Angle).Degrees""",7,98,7,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/Equals,"""(*github.com/golang/geo/s2.Polyline).Equals""",52,192,6,1,1,11,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDFromTokensErrorCases,"""github.com/golang/geo/s2.TestCellIDFromTokensErrorCases""",52,1032,30,1,0,21,11,1,0,0,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer_test.go/TestCovererRandomCaps,"""github.com/golang/geo/s2.TestCovererRandomCaps""",52,135,21,1,0,33,27,2,1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/Intersection,"""(github.com/golang/geo/s2.Rect).Intersection""",52,424,12,1,1,8,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/Covering,"""(*github.com/golang/geo/s2.RegionCoverer).Covering""",52,449,8,1,1,4,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/IsEmpty,"""(github.com/golang/geo/r2.Rect).IsEmpty""",3,241,7,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestCenter,"""github.com/golang/geo/r2.TestCenter""",3,457,10,1,0,13,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/lsb,"""(github.com/golang/geo/s2.CellID).lsb""",52,885,3,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/centerST,"""(github.com/golang/geo/s2.CellID).centerST""",52,885,8,0,1,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Dot,"""(github.com/golang/geo/r2.Point).Dot""",3,241,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/loopIsHole,"""(*github.com/golang/geo/s2.Polygon).loopIsHole""",52,335,10,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/TestPointPlanarCentroid,"""github.com/golang/geo/s2.TestPointPlanarCentroid""",52,375,23,1,0,27,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/skewedInt,"""github.com/golang/geo/s2.skewedInt""",52,395,9,1,1,3,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/radiusToHeight,"""github.com/golang/geo/s2.radiusToHeight""",52,467,14,1,1,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/edgeIntersectsRect,"""github.com/golang/geo/s2.edgeIntersectsRect""",52,455,18,2,1,25,10,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/pointsApproxEquals,"""github.com/golang/geo/s2.pointsApproxEquals""",52,395,18,2,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/RectFromCenterSize,"""github.com/golang/geo/s2.RectFromCenterSize""",52,424,18,1,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/parsePoint,"""github.com/golang/geo/s2.parsePoint""",52,395,10,1,1,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle.go/E5,"""(github.com/golang/geo/s1.Angle).E5""",7,98,2,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/updateEndpoint,"""github.com/golang/geo/s2.updateEndpoint""",52,455,14,3,2,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng.go/IsValid,"""(github.com/golang/geo/s2.LatLng).IsValid""",52,81,7,0,1,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/IntersectsCell,"""(*github.com/golang/geo/s2.Polyline).IntersectsCell""",52,192,14,1,1,31,9,3,1,0,0,0,0,0,0,0,0,2,0,1,0,3,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/CapFromCenterAngle,"""github.com/golang/geo/s2.CapFromCenterAngle""",52,467,18,2,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/Advance,"""(github.com/golang/geo/s2.CellID).Advance""",52,885,7,1,1,21,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crossings.go/VertexCrossing,"""github.com/golang/geo/s2.VertexCrossing""",52,149,14,1,1,23,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,4,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer_test.go/TestCovererRandomCells,"""github.com/golang/geo/s2.TestCovererRandomCells""",52,135,22,1,0,17,14,2,1,0,0,0,0,0,0,0,0,1,1,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectVertexCCWOrder,"""github.com/golang/geo/s2.TestRectVertexCCWOrder""",52,846,22,1,0,18,12,2,1,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/InteriorContains,"""(github.com/golang/geo/r1.Interval).InteriorContains""",3,145,16,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/precSub,"""github.com/golang/geo/r3.precSub""",5,184,7,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/EmptyInterval,"""github.com/golang/geo/s1.EmptyInterval""",7,330,13,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/Begin,"""(*github.com/golang/geo/s2.ShapeIndex).Begin""",52,481,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/Height,"""(github.com/golang/geo/s2.Cap).Height""",52,467,6,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell.go/ShrinkToFit,"""(*github.com/golang/geo/s2.PaddedCell).ShrinkToFit""",52,238,11,1,1,57,30,0,0,0,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates.go/exactSign,"""github.com/golang/geo/s2.exactSign""",52,222,9,2,1,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline_test.go/TestPolylineBasics,"""github.com/golang/geo/s2.TestPolylineBasics""",52,128,18,1,0,27,17,0,0,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector_test.go/TestPreciseAdd,"""github.com/golang/geo/r3.TestPreciseAdd""",5,461,14,1,0,31,15,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/TestCellIntersectsCell,"""github.com/golang/geo/s2.TestCellIntersectsCell""",52,506,22,1,0,27,22,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/vAxis,"""github.com/golang/geo/s2.vAxis""",52,289,5,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapAddCap,"""github.com/golang/geo/s2.TestCapAddCap""",52,702,13,1,0,31,5,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle.go/String,"""(github.com/golang/geo/s1.Angle).String""",7,98,6,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
/s1/chordangle.go/Sin,"""(github.com/golang/geo/s1.ChordAngle).Sin""",7,192,3,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_bounder.go/NewRectBounder,"""github.com/golang/geo/s2.NewRectBounder""",52,338,14,0,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances_test.go/TestEdgeDistancesCheckDistance,"""github.com/golang/geo/s2.TestEdgeDistancesCheckDistance""",52,246,30,1,0,140,28,1,0,0,0,0,0,0,0,0,0,0,0,1,0,5,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/ExpandedByMargin,"""(github.com/golang/geo/r2.Rect).ExpandedByMargin""",3,241,16,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/TestLoopBasic,"""github.com/golang/geo/s2.TestLoopBasic""",52,655,13,1,0,34,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances.go/updateMinDistance,"""github.com/golang/geo/s2.updateMinDistance""",52,243,17,3,2,13,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapInteriorIntersects,"""github.com/golang/geo/s2.TestCapInteriorIntersects""",52,702,25,1,0,20,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/TestLoopNumEdges,"""github.com/golang/geo/s2.TestLoopNumEdges""",52,655,16,1,0,21,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Sub,"""(github.com/golang/geo/r3.Vector).Sub""",5,168,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/InteriorContains,"""(github.com/golang/geo/s1.Interval).InteriorContains""",7,330,16,1,1,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/Swap,"""(github.com/golang/geo/s2.priorityQueue).Swap""",52,449,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/Remove,"""(*github.com/golang/geo/s2.ShapeIndex).Remove""",52,481,6,1,0,8,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestEmptyRect,"""github.com/golang/geo/r2.TestEmptyRect""",3,457,13,1,0,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapAddPoint,"""github.com/golang/geo/s2.TestCapAddPoint""",52,702,15,1,0,52,20,1,0,0,0,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectIntersectsLatEdge,"""github.com/golang/geo/s2.TestRectIntersectsLatEdge""",52,846,25,1,0,81,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestCross,"""github.com/golang/geo/r2.TestCross""",3,457,9,1,0,18,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorDistance,"""github.com/golang/geo/r3.TestVectorDistance""",5,323,18,1,0,21,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/Intersection,"""(github.com/golang/geo/s1.Interval).Intersection""",7,330,12,1,1,27,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/RegularLoopForFrame,"""github.com/golang/geo/s2.RegularLoopForFrame""",52,446,19,3,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/Reverse,"""(*github.com/golang/geo/s2.Polyline).Reverse""",52,192,7,0,0,4,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDExpandedByDistanceUV,"""github.com/golang/geo/s2.TestCellIDExpandedByDistanceUV""",52,1032,30,1,0,47,23,2,1,0,0,0,0,0,0,0,0,3,0,0,0,6,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/IsLeaf,"""(github.com/golang/geo/s2.CellID).IsLeaf""",52,885,6,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Lo,"""(github.com/golang/geo/r2.Rect).Lo""",3,241,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/MaxAngleError,"""(github.com/golang/geo/s1.ChordAngle).MaxAngleError""",7,192,13,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crosser_test.go/TestEdgeCrosserCrossings,"""github.com/golang/geo/s2.TestEdgeCrosserCrossings""",52,230,24,1,0,165,13,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates_test.go/BenchmarkSign,"""github.com/golang/geo/s2.BenchmarkSign""",52,298,13,1,0,7,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates_test.go/TestPredicatesSign,"""github.com/golang/geo/s2.TestPredicatesSign""",52,298,18,1,0,54,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/randomCap,"""github.com/golang/geo/s2.randomCap""",52,395,9,1,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/samplePointFromCap,"""github.com/golang/geo/s2.samplePointFromCap""",52,395,18,1,1,15,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorLargestSmallestComponents,"""github.com/golang/geo/r3.TestVectorLargestSmallestComponents""",5,323,35,1,0,21,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances.go/Interpolate,"""github.com/golang/geo/s2.Interpolate""",52,243,11,2,1,9,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances_test.go/TestEdgeDistancesInterpolateOverLongEdge,"""github.com/golang/geo/s2.TestEdgeDistancesInterpolateOverLongEdge""",52,246,40,1,0,19,17,1,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng_test.go/TestLatLngNormalized,"""github.com/golang/geo/s2.TestLatLngNormalized""",52,139,20,1,0,61,23,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/IsPoint,"""(github.com/golang/geo/s2.Rect).IsPoint""",52,424,7,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_bounder.go/maxErrorForTests,"""(*github.com/golang/geo/s2.RectBounder).maxErrorForTests""",52,338,16,0,1,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/uvwFace,"""github.com/golang/geo/s2.uvwFace""",52,289,7,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector_test.go/TestPreciseIsUnit,"""github.com/golang/geo/r3.TestPreciseIsUnit""",5,461,17,1,0,41,9,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval_test.go/TestCenter,"""github.com/golang/geo/s1.TestCenter""",7,441,10,1,0,23,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/ClipToFace,"""github.com/golang/geo/s2.ClipToFace""",52,455,10,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3.go/scale,"""(*github.com/golang/geo/s2.matrix3x3).scale""",52,113,5,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/randomFloat64,"""github.com/golang/geo/s2.randomFloat64""",52,395,13,0,1,3,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/rectsApproxEqual,"""github.com/golang/geo/s2.rectsApproxEqual""",52,395,16,2,1,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/IsUnit,"""(github.com/golang/geo/r3.PreciseVector).IsUnit""",5,184,6,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/SizeIJ,"""(github.com/golang/geo/s2.Cell).SizeIJ""",52,375,6,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/distanceFromBegin,"""(github.com/golang/geo/s2.CellID).distanceFromBegin""",52,885,17,0,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/metric.go/Value,"""(github.com/golang/geo/s2.Metric).Value""",52,150,5,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector_test.go/TestPreciseSub,"""github.com/golang/geo/r3.TestPreciseSub""",5,461,14,1,0,31,15,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectIntersectsLngEdge,"""github.com/golang/geo/s2.TestRectIntersectsLngEdge""",52,846,25,1,0,80,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector_test.go/TestPreciseNorm2,"""github.com/golang/geo/r3.TestPreciseNorm2""",5,461,16,1,0,32,12,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3.go/mul,"""(*github.com/golang/geo/s2.matrix3x3).mul""",52,113,3,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDLatLng,"""github.com/golang/geo/s2.TestCellIDLatLng""",52,1032,16,1,0,33,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/Len,"""(github.com/golang/geo/s2.byCellID).Len""",52,1032,3,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/CellFromCellID,"""github.com/golang/geo/s2.CellFromCellID""",52,375,14,1,1,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/Edge,"""(*github.com/golang/geo/s2.Polygon).Edge""",52,335,4,1,1,21,10,2,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates_test.go/BenchmarkRobustSignSimple,"""github.com/golang/geo/s2.BenchmarkRobustSignSimple""",52,298,25,1,0,7,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectContainsPoint,"""github.com/golang/geo/s2.TestRectContainsPoint""",52,846,21,1,0,16,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval_test.go/TestIntervalString,"""github.com/golang/geo/s1.TestIntervalString""",7,441,18,1,0,4,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/perturbedCornerOrMidpoint,"""github.com/golang/geo/s2.perturbedCornerOrMidpoint""",52,395,25,1,1,21,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapContainsPoint,"""github.com/golang/geo/s2.TestCapContainsPoint""",52,702,20,1,0,33,19,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestDot,"""github.com/golang/geo/r2.TestDot""",3,457,7,1,0,16,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle.go/Normalized,"""(github.com/golang/geo/s1.Angle).Normalized""",7,98,10,0,1,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/InteriorIntersects,"""(github.com/golang/geo/s2.Cap).InteriorIntersects""",52,467,18,1,1,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crossings.go/CrossingSign,"""github.com/golang/geo/s2.CrossingSign""",52,149,12,1,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/metric.go/MinLevel,"""(github.com/golang/geo/s2.Metric).MinLevel""",52,150,8,1,1,13,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/TestPointApproxEqual,"""github.com/golang/geo/s2.TestPointApproxEqual""",52,375,20,1,0,26,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/rawPoint,"""(github.com/golang/geo/s2.CellID).rawPoint""",52,885,8,0,1,3,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/faceSiTi,"""(github.com/golang/geo/s2.CellID).faceSiTi""",52,885,8,0,1,11,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/CapBound,"""(github.com/golang/geo/s2.Point).CapBound""",52,312,8,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapInteriorContains,"""github.com/golang/geo/s2.TestCapInteriorContains""",52,702,23,1,0,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/RangeMin,"""(github.com/golang/geo/s2.CellID).RangeMin""",52,885,8,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/Center,"""(github.com/golang/geo/r1.Interval).Center""",3,145,6,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/Intersects,"""(github.com/golang/geo/s1.Interval).Intersects""",7,330,10,1,1,11,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle_test.go/TestChordAngleIsFunctions,"""github.com/golang/geo/s1.TestChordAngleIsFunctions""",7,233,25,1,0,29,7,1,0,0,0,0,0,0,0,0,0,1,0,1,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/IntersectsCell,"""(github.com/golang/geo/s2.Cell).IntersectsCell""",52,375,14,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/randomUniformInt,"""github.com/golang/geo/s2.randomUniformInt""",52,395,16,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval_test.go/TestAddPoint,"""github.com/golang/geo/r1.TestAddPoint""",3,333,12,1,0,16,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Cross,"""(github.com/golang/geo/r3.Vector).Cross""",5,168,5,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle_test.go/TestChordAngleAngleEquality,"""github.com/golang/geo/s1.TestChordAngleAngleEquality""",7,233,27,1,0,22,17,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_bounder_test.go/TestRectBounderMaxLatitudeEdgeInterior,"""github.com/golang/geo/s2.TestRectBounderMaxLatitudeEdgeInterior""",52,219,38,1,0,46,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/AddPoint,"""(github.com/golang/geo/s2.Cap).AddPoint""",52,467,8,1,1,14,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/IntersectsCell,"""(*github.com/golang/geo/s2.Loop).IntersectsCell""",52,446,14,1,1,25,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/Next,"""(github.com/golang/geo/s2.CellID).Next""",52,885,4,0,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/boundST,"""(github.com/golang/geo/s2.CellID).boundST""",52,885,7,0,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/centerUV,"""(github.com/golang/geo/s2.CellID).centerUV""",52,885,8,0,1,3,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crosser.go/EdgeOrVertexCrossing,"""(*github.com/golang/geo/s2.EdgeCrosser).EdgeOrVertexCrossing""",52,217,20,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/IndexCell,"""(*github.com/golang/geo/s2.ShapeIndexIterator).IndexCell""",52,481,9,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/isValid,"""(github.com/golang/geo/s1.ChordAngle).isValid""",7,192,7,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/encode,"""(github.com/golang/geo/s2.Polyline).encode""",52,192,6,1,0,8,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/Union,"""(github.com/golang/geo/s2.Rect).Union""",52,424,5,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/newClippedShape,"""github.com/golang/geo/s2.newClippedShape""",52,481,15,2,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/AddCap,"""(github.com/golang/geo/s2.Cap).AddCap""",52,467,6,1,1,15,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/RangeMax,"""(github.com/golang/geo/s2.CellID).RangeMax""",52,885,8,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/Edge,"""(*github.com/golang/geo/s2.testShape).Edge""",52,241,4,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/intersectsLatEdge,"""github.com/golang/geo/s2.intersectsLatEdge""",52,424,17,3,1,53,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/sampleBoundary,"""github.com/golang/geo/s2.sampleBoundary""",52,1032,14,1,1,17,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/TestPointRegion,"""github.com/golang/geo/s2.TestPointRegion""",52,375,15,1,0,34,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectArea,"""github.com/golang/geo/s2.TestRectArea""",52,846,12,1,0,14,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/CellFromLatLng,"""github.com/golang/geo/s2.CellFromLatLng""",52,375,14,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/BenchmarkPointAreaGirardCase,"""github.com/golang/geo/s2.BenchmarkPointAreaGirardCase""",52,375,28,1,0,4,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectFromLatLng,"""github.com/golang/geo/s2.TestRectFromLatLng""",52,846,18,1,0,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectCapBound,"""github.com/golang/geo/s2.TestRectCapBound""",52,846,16,1,0,23,11,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector_test.go/TestPreciseCross,"""github.com/golang/geo/r3.TestPreciseCross""",5,461,16,1,0,45,21,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorNormalize,"""github.com/golang/geo/r3.TestVectorNormalize""",5,323,19,1,0,18,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/CapBound,"""(github.com/golang/geo/s2.Cell).CapBound""",52,375,8,0,1,9,8,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances.go/interiorDist,"""github.com/golang/geo/s2.interiorDist""",52,243,12,3,2,66,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline_test.go/TestPolylineIntersectsCell,"""github.com/golang/geo/s2.TestPolylineIntersectsCell""",52,128,26,1,0,12,6,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/ChildPosition,"""(github.com/golang/geo/s2.CellID).ChildPosition""",52,885,13,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/TrueCentroid,"""github.com/golang/geo/s2.TrueCentroid""",52,312,12,1,1,33,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/encode,"""(github.com/golang/geo/s2.Rect).encode""",52,424,6,1,0,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/NewShapeIndex,"""github.com/golang/geo/s2.NewShapeIndex""",52,481,13,0,1,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion_test.go/TestCellUnionLeafCellsCovered,"""github.com/golang/geo/s2.TestCellUnionLeafCellsCovered""",52,707,29,1,0,59,28,1,0,0,0,0,0,0,0,0,0,0,0,6,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/TestPointDistance,"""github.com/golang/geo/s2.TestPointDistance""",52,375,17,1,0,22,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectExpanded,"""github.com/golang/geo/s2.TestRectExpanded""",52,846,16,1,0,111,60,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/newTestShape,"""github.com/golang/geo/s2.newTestShape""",52,241,12,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/Dot,"""(github.com/golang/geo/r3.PreciseVector).Dot""",5,184,3,1,1,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/Encode,"""(github.com/golang/geo/s2.Point).Encode""",52,312,6,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/rawFastCovering,"""(*github.com/golang/geo/s2.coverer).rawFastCovering""",52,449,15,1,1,13,9,1,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapExpanded,"""github.com/golang/geo/s2.TestCapExpanded""",52,702,15,1,0,24,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Abs,"""(github.com/golang/geo/r3.Vector).Abs""",5,168,3,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/isFace,"""(github.com/golang/geo/s2.CellID).isFace""",52,885,6,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/RectBound,"""(*github.com/golang/geo/s2.CellUnion).RectBound""",52,234,9,0,1,6,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDFromFace,"""github.com/golang/geo/s2.TestCellIDFromFace""",52,1032,18,1,0,8,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/Prev,"""(*github.com/golang/geo/s2.ShapeIndexIterator).Prev""",52,481,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/TestLoopEdge,"""github.com/golang/geo/s2.TestLoopEdge""",52,655,12,1,0,69,20,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell_test.go/TestPaddedCellEntryExitVertices,"""github.com/golang/geo/s2.TestPaddedCellEntryExitVertices""",52,181,31,1,0,34,32,1,0,0,0,0,0,0,0,0,0,1,0,0,0,6,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test_test.go/TestParsePoints,"""github.com/golang/geo/s2.TestParsePoints""",52,180,15,1,0,33,3,2,1,0,0,0,0,0,0,0,0,0,0,6,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorAdd,"""github.com/golang/geo/r3.TestVectorAdd""",5,323,13,1,0,14,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/CellIDFromLatLng,"""github.com/golang/geo/s2.CellIDFromLatLng""",52,885,16,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/lsbForLevel,"""github.com/golang/geo/s2.lsbForLevel""",52,885,11,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3_test.go/TestScale,"""github.com/golang/geo/s2.TestScale""",52,478,9,1,0,66,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/IntersectsCell,"""(github.com/golang/geo/s2.Rect).IntersectsCell""",52,424,14,1,1,61,28,2,0,0,0,0,0,0,0,0,0,0,0,2,0,11,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/add,"""(*github.com/golang/geo/s2.ShapeIndexCell).add""",52,481,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/Done,"""(*github.com/golang/geo/s2.ShapeIndexIterator).Done""",52,481,4,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/TestPointArea,"""github.com/golang/geo/s2.TestPointArea""",52,375,13,1,0,31,3,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/ContainsCell,"""(github.com/golang/geo/s2.Cap).ContainsCell""",52,467,12,1,1,11,4,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/ContainsLatLng,"""(github.com/golang/geo/s2.Rect).ContainsLatLng""",52,424,14,1,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion_test.go/addCells,"""github.com/golang/geo/s2.addCells""",52,707,8,5,0,75,17,2,0,0,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/float64Near,"""github.com/golang/geo/s2.float64Near""",52,395,11,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/Add,"""(github.com/golang/geo/r3.PreciseVector).Add""",5,184,3,1,1,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle.go/isInf,"""(github.com/golang/geo/s1.Angle).isInf""",7,98,5,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/Invert,"""(github.com/golang/geo/s1.Interval).Invert""",7,330,6,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng.go/LatLngFromPoint,"""github.com/golang/geo/s2.LatLngFromPoint""",52,81,15,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle_test.go/TestDegreesVsRadians,"""github.com/golang/geo/s1.TestDegreesVsRadians""",7,153,20,1,0,32,16,3,1,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng_test.go/TestLatLngPointConversion,"""github.com/golang/geo/s2.TestLatLngPointConversion""",52,139,25,1,0,36,12,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/dimension,"""(*github.com/golang/geo/s2.testShape).dimension""",52,241,9,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/Sin2,"""(github.com/golang/geo/s1.ChordAngle).Sin2""",7,192,4,0,1,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/TestCellObjectSize,"""github.com/golang/geo/s2.TestCellObjectSize""",52,506,18,1,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorIsUnit,"""github.com/golang/geo/r3.TestVectorIsUnit""",5,323,16,1,0,18,2,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/Center,"""(github.com/golang/geo/s1.Interval).Center""",7,330,6,0,1,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/clipEdgeBound,"""github.com/golang/geo/s2.clipEdgeBound""",52,455,13,2,2,16,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/numChains,"""(*github.com/golang/geo/s2.Polygon).numChains""",52,335,9,0,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/Centroid,"""(github.com/golang/geo/s2.Cap).Centroid""",52,467,8,0,1,13,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/Level,"""(github.com/golang/geo/s2.CellID).Level""",52,885,5,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval_test.go/TestLength,"""github.com/golang/geo/r1.TestLength""",3,333,10,1,0,17,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/PreciseVectorFromVector,"""github.com/golang/geo/r3.PreciseVectorFromVector""",5,184,23,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/Encode,"""(github.com/golang/geo/s2.CellID).Encode""",52,885,6,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline_test.go/TestPolylineShape,"""github.com/golang/geo/s2.TestPolylineShape""",52,128,17,1,0,42,28,0,0,0,0,0,0,0,0,0,0,7,1,0,0,11,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/Parent,"""(github.com/golang/geo/s2.CellID).Parent""",52,885,6,1,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/ChildEndAtLevel,"""(github.com/golang/geo/s2.CellID).ChildEndAtLevel""",52,885,15,1,1,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/encode,"""(github.com/golang/geo/s2.CellID).encode""",52,885,6,1,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapContainsCell,"""github.com/golang/geo/s2.TestCapContainsCell""",52,702,19,1,0,59,38,3,2,0,0,0,0,0,0,0,0,2,0,0,0,9,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/TestLoopOriginInside,"""github.com/golang/geo/s2.TestLoopOriginInside""",52,655,20,1,0,37,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/TestLoopContainsPoint,"""github.com/golang/geo/s2.TestLoopContainsPoint""",52,655,21,1,0,91,32,7,5,0,0,0,0,0,0,0,0,4,0,3,1,6,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/numChains,"""(*github.com/golang/geo/s2.testShape).numChains""",52,241,9,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances.go/UpdateMinDistance,"""github.com/golang/geo/s2.UpdateMinDistance""",52,243,17,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/readUint64,"""(*github.com/golang/geo/s2.decoder).readUint64""",52,167,10,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/RectBound,"""(github.com/golang/geo/s2.Rect).RectBound""",52,424,9,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping_test.go/chooseRectEndpoint,"""github.com/golang/geo/s2.chooseRectEndpoint""",52,383,18,1,1,8,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/Norm2,"""(github.com/golang/geo/r3.PreciseVector).Norm2""",5,184,5,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances.go/IsInteriorDistanceLess,"""github.com/golang/geo/s2.IsInteriorDistanceLess""",52,243,22,2,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer_test.go/checkCovering,"""github.com/golang/geo/s2.checkCovering""",52,135,13,5,0,37,18,3,0,0,0,0,0,0,0,0,0,1,0,0,1,7,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/Vector,"""(github.com/golang/geo/r3.PreciseVector).Vector""",5,184,6,0,1,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/IsFull,"""(github.com/golang/geo/s2.Rect).IsFull""",52,424,6,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/TestCellChildren,"""github.com/golang/geo/s2.TestCellChildren""",52,506,16,1,0,4,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/randomUint64,"""github.com/golang/geo/s2.randomUint64""",52,395,12,0,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/InteriorCovering,"""(*github.com/golang/geo/s2.RegionCoverer).InteriorCovering""",52,449,16,1,1,4,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/findByShapeID,"""(*github.com/golang/geo/s2.ShapeIndexCell).findByShapeID""",52,481,13,1,1,10,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/TestCellContainsPoint,"""github.com/golang/geo/s2.TestCellContainsPoint""",52,506,21,1,0,27,27,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/Equal,"""(github.com/golang/geo/r1.Interval).Equal""",3,145,5,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Sub,"""(github.com/golang/geo/r2.Point).Sub""",3,241,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/cellIDFromFaceIJ,"""github.com/golang/geo/s2.cellIDFromFaceIJ""",52,885,16,1,1,22,8,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3.go/transpose,"""(*github.com/golang/geo/s2.matrix3x3).transpose""",52,113,9,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/Contains,"""(github.com/golang/geo/r1.Interval).Contains""",3,145,8,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/precInt,"""github.com/golang/geo/r3.precInt""",5,184,7,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/Loops,"""(*github.com/golang/geo/s2.Polygon).Loops""",52,335,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/FastCovering,"""(*github.com/golang/geo/s2.RegionCoverer).FastCovering""",52,449,12,1,1,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/matricesApproxEqual,"""github.com/golang/geo/s2.matricesApproxEqual""",52,395,19,1,1,12,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/writeUint32,"""(*github.com/golang/geo/s2.encoder).writeUint32""",52,167,11,1,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3.go/getFrame,"""github.com/golang/geo/s2.getFrame""",52,113,8,1,1,10,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell.go/Center,"""(github.com/golang/geo/s2.PaddedCell).Center""",52,238,6,0,1,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/intersectsLngEdge,"""github.com/golang/geo/s2.intersectsLngEdge""",52,424,17,3,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/ContainsInterval,"""(github.com/golang/geo/r1.Interval).ContainsInterval""",3,145,16,1,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/FullInterval,"""github.com/golang/geo/s1.FullInterval""",7,330,12,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/IsFull,"""(github.com/golang/geo/s1.Interval).IsFull""",7,330,6,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/AllNeighbors,"""(github.com/golang/geo/s2.CellID).AllNeighbors""",52,885,12,1,1,43,16,1,0,0,0,0,0,0,0,0,0,1,0,1,0,3,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/IsFull,"""(github.com/golang/geo/s2.Cap).IsFull""",52,467,6,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/NumEdges,"""(*github.com/golang/geo/s2.testShape).NumEdges""",52,241,8,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/precMul,"""github.com/golang/geo/r3.precMul""",5,184,7,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/PolylineFromLatLngs,"""github.com/golang/geo/s2.PolylineFromLatLngs""",52,192,19,1,1,6,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/String,"""(github.com/golang/geo/s2.Rect).String""",52,424,6,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/CellUnion,"""(*github.com/golang/geo/s2.RegionCoverer).CellUnion""",52,449,9,1,1,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3_test.go/TestMul,"""github.com/golang/geo/s2.TestMul""",52,478,7,1,0,51,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectEmptyAndFull,"""github.com/golang/geo/s2.TestRectEmptyAndFull""",52,846,20,1,0,26,10,1,0,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestNormalize,"""github.com/golang/geo/r2.TestNormalize""",3,457,13,1,0,24,9,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Dot,"""(github.com/golang/geo/r3.Vector).Dot""",5,168,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3_test.go/TestSetCol,"""github.com/golang/geo/s2.TestSetCol""",52,478,10,1,0,38,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell_test.go/TestPaddedCellShrinkToFit,"""github.com/golang/geo/s2.TestPaddedCellShrinkToFit""",52,181,25,1,0,61,28,1,0,0,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDContinuity,"""github.com/golang/geo/s2.TestCellIDContinuity""",52,1032,20,1,0,34,34,1,0,0,0,0,0,0,0,0,0,2,0,0,0,5,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Normalize,"""(github.com/golang/geo/r2.Point).Normalize""",3,241,9,0,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/Abs,"""(github.com/golang/geo/r3.PreciseVector).Abs""",5,184,3,0,1,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/wedge_relations.go/WedgeIntersects,"""github.com/golang/geo/s2.WedgeIntersects""",52,83,15,1,1,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDAdvance,"""github.com/golang/geo/s2.TestCellIDAdvance""",52,1032,17,1,0,48,30,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/TestShapeIndexNoEdges,"""github.com/golang/geo/s2.TestShapeIndexNoEdges""",52,241,21,1,0,8,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/loopSign,"""(*github.com/golang/geo/s2.Polygon).loopSign""",52,335,8,1,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/adjustCellLevels,"""(*github.com/golang/geo/s2.coverer).adjustCellLevels""",52,449,16,1,0,22,5,2,1,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapUnion,"""github.com/golang/geo/s2.TestCapUnion""",52,702,12,1,0,94,95,0,0,0,0,0,0,0,0,0,0,6,0,0,0,21,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/TestCellContainsPointConsistentWithS2CellIDFromPoint,"""github.com/golang/geo/s2.TestCellContainsPointConsistentWithS2CellIDFromPoint""",52,506,52,1,0,14,14,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crosser.go/NewChainEdgeCrosser,"""github.com/golang/geo/s2.NewChainEdgeCrosser""",52,217,19,1,1,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/faceXYZToUV,"""github.com/golang/geo/s2.faceXYZToUV""",52,289,11,2,2,30,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,6,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates_test.go/TestPredicatesStableSignFailureRate,"""github.com/golang/geo/s2.TestPredicatesStableSignFailureRate""",52,298,35,1,0,46,14,1,0,0,0,0,0,0,0,0,0,6,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestClampPoint,"""github.com/golang/geo/r2.TestClampPoint""",3,457,14,1,0,22,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorOrtho,"""github.com/golang/geo/r3.TestVectorOrtho""",5,323,15,1,0,17,10,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/Expanded,"""(github.com/golang/geo/s1.Interval).Expanded""",7,330,8,1,1,28,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/Swap,"""(github.com/golang/geo/s2.byID).Swap""",52,234,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/LargestComponent,"""(github.com/golang/geo/r3.PreciseVector).LargestComponent""",5,184,16,0,1,13,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/Hi,"""(github.com/golang/geo/s2.Rect).Hi""",52,424,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/uNorm,"""github.com/golang/geo/s2.uNorm""",52,289,5,2,1,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/encode,"""(*github.com/golang/geo/s2.CellUnion).encode""",52,234,6,1,0,6,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/ContainsCell,"""(github.com/golang/geo/s2.Rect).ContainsCell""",52,424,12,1,1,11,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/metric_test.go/TestMetric,"""github.com/golang/geo/s2.TestMetric""",52,93,10,1,0,61,31,1,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/IsValid,"""(github.com/golang/geo/r2.Rect).IsValid""",3,241,7,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/stToUV,"""github.com/golang/geo/s2.stToUV""",52,289,6,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv_test.go/TestSTUVFace,"""github.com/golang/geo/s2.TestSTUVFace""",52,346,12,1,0,39,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/Pos,"""(github.com/golang/geo/s2.CellID).Pos""",52,885,3,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/bruteForceContainsPoint,"""(*github.com/golang/geo/s2.Loop).bruteForceContainsPoint""",52,446,23,1,1,8,6,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/normalizeCovering,"""(*github.com/golang/geo/s2.coverer).normalizeCovering""",52,449,17,1,0,42,12,3,1,0,0,0,0,0,0,0,0,1,0,0,0,6,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_bounder_test.go/TestRectBounderMaxLatitudeSimple,"""github.com/golang/geo/s2.TestRectBounderMaxLatitudeSimple""",52,219,32,1,0,27,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/ApproxArea,"""(github.com/golang/geo/s2.Cell).ApproxArea""",52,375,10,0,1,19,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/ToToken,"""(github.com/golang/geo/s2.CellID).ToToken""",52,885,7,0,1,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/FullPolygon,"""github.com/golang/geo/s2.FullPolygon""",52,335,11,0,1,10,6,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/IsValid,"""(github.com/golang/geo/s2.Rect).IsValid""",52,424,7,0,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv_test.go/TestSTUV,"""github.com/golang/geo/s2.TestSTUV""",52,346,8,1,0,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle_test.go/TestE5E6E7Representation,"""github.com/golang/geo/s1.TestE5E6E7Representation""",7,153,24,1,0,43,25,1,0,0,0,0,0,0,0,0,0,0,0,1,0,9,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/Distance,"""(github.com/golang/geo/s2.Point).Distance""",52,312,8,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/randomUint32,"""github.com/golang/geo/s2.randomUint32""",52,395,12,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/parsePoints,"""github.com/golang/geo/s2.parsePoints""",52,395,11,1,1,7,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/Cross,"""(github.com/golang/geo/r3.PreciseVector).Cross""",5,184,5,1,1,6,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crosser_test.go/compareCrossingResults,"""github.com/golang/geo/s2.compareCrossingResults""",52,230,22,1,1,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/clippedEdgeBound,"""github.com/golang/geo/s2.clippedEdgeBound""",52,455,16,2,1,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/TestShapeIndexCellBasics,"""github.com/golang/geo/s2.TestShapeIndexCellBasics""",52,241,24,1,0,26,10,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/writeInt32,"""(*github.com/golang/geo/s2.encoder).writeInt32""",52,167,10,1,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/SmallestComponent,"""(github.com/golang/geo/r3.Vector).SmallestComponent""",5,168,17,0,1,13,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/Face,"""(github.com/golang/geo/s2.Cell).Face""",52,375,4,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/HasInterior,"""(*github.com/golang/geo/s2.Polygon).HasInterior""",52,335,11,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDParentChildRelationships,"""github.com/golang/geo/s2.TestCellIDParentChildRelationships""",52,1032,34,1,0,50,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/ClampPoint,"""(github.com/golang/geo/r2.Rect).ClampPoint""",3,241,10,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectAddPoint,"""github.com/golang/geo/s2.TestRectAddPoint""",52,846,16,1,0,32,13,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/CapFromPoint,"""github.com/golang/geo/s2.CapFromPoint""",52,467,12,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/immediateParent,"""(github.com/golang/geo/s2.CellID).immediateParent""",52,885,15,0,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/PolygonFromLoops,"""github.com/golang/geo/s2.PolygonFromLoops""",52,335,16,1,1,29,12,1,0,0,0,0,0,0,0,0,0,1,1,2,0,3,0,0,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates.go/stableSign,"""github.com/golang/geo/s2.stableSign""",52,222,10,1,1,37,11,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/Intersects,"""(github.com/golang/geo/r1.Interval).Intersects""",3,145,10,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_bounder.go/RectBound,"""(*github.com/golang/geo/s2.RectBounder).RectBound""",52,338,9,0,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping_test.go/TestEdgeClippingIntersectsOppositeEdges,"""github.com/golang/geo/s2.TestEdgeClippingIntersectsOppositeEdges""",52,383,39,1,0,19,10,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/Encode,"""(*github.com/golang/geo/s2.CellUnion).Encode""",52,234,6,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/validFaceXYZToUV,"""github.com/golang/geo/s2.validFaceXYZToUV""",52,289,16,2,2,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/xyzToFaceUV,"""github.com/golang/geo/s2.xyzToFaceUV""",52,289,11,1,2,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances.go/InterpolateAtDistance,"""github.com/golang/geo/s2.InterpolateAtDistance""",52,243,21,2,1,15,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_bounder.go/ExpandForSubregions,"""github.com/golang/geo/s2.ExpandForSubregions""",52,338,19,1,1,131,12,0,0,0,0,0,0,0,0,0,0,1,0,0,0,7,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping_test.go/TestEdgeClippingExitPoint,"""github.com/golang/geo/s2.TestEdgeClippingExitPoint""",52,383,25,1,0,17,11,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/ChordAngleFromAngle,"""github.com/golang/geo/s1.ChordAngleFromAngle""",7,192,19,1,1,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/CapBound,"""(*github.com/golang/geo/s2.Polygon).CapBound""",52,335,8,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping_test.go/TestEdgeClippingClipEdge,"""github.com/golang/geo/s2.TestEdgeClippingClipEdge""",52,383,24,1,0,86,60,2,1,0,0,0,0,0,0,0,0,3,0,1,0,10,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/Center,"""(*github.com/golang/geo/s2.ShapeIndexIterator).Center""",52,481,6,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates_test.go/TestPredicatesRobustSign,"""github.com/golang/geo/s2.TestPredicatesRobustSign""",52,298,24,1,0,103,9,1,0,0,0,0,0,0,0,0,0,0,0,1,0,5,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/Union,"""(github.com/golang/geo/s1.Interval).Union""",7,330,5,1,1,28,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/Denormalize,"""(*github.com/golang/geo/s2.CellUnion).Denormalize""",52,234,11,1,0,24,6,2,1,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3.go/String,"""(*github.com/golang/geo/s2.matrix3x3).String""",52,113,6,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/OriginPoint,"""github.com/golang/geo/s2.OriginPoint""",52,312,11,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/isSpecial,"""(github.com/golang/geo/s1.ChordAngle).isSpecial""",7,192,9,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval_test.go/TestConstructors,"""github.com/golang/geo/s1.TestConstructors""",7,441,16,1,0,13,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/String,"""(github.com/golang/geo/s2.Cap).String""",52,467,6,0,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/IsFull,"""(*github.com/golang/geo/s2.Polygon).IsFull""",52,335,6,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/numChains,"""(*github.com/golang/geo/s2.Polyline).numChains""",52,192,9,0,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/min,"""github.com/golang/geo/s2.min""",52,449,3,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/addCandidate,"""(*github.com/golang/geo/s2.coverer).addCandidate""",52,449,12,1,0,38,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/String,"""(github.com/golang/geo/s1.Interval).String""",7,330,6,0,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0
/s2/point.go/PointArea,"""github.com/golang/geo/s2.PointArea""",52,312,9,1,1,24,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/RectBound,"""(*github.com/golang/geo/s2.Polygon).RectBound""",52,335,9,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/invert,"""github.com/golang/geo/s2.invert""",52,655,6,1,1,6,5,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval_test.go/TestIntervalOperations,"""github.com/golang/geo/r1.TestIntervalOperations""",3,333,22,1,0,89,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle.go/E7,"""(github.com/golang/geo/s1.Angle).E7""",7,98,2,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/Size,"""(github.com/golang/geo/s2.Rect).Size""",52,424,4,0,1,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector_test.go/TestPreciseRoundtrip,"""github.com/golang/geo/r3.TestPreciseRoundtrip""",5,461,20,1,0,15,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/vNorm,"""github.com/golang/geo/s2.vNorm""",52,289,5,2,1,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/encodeLossless,"""(*github.com/golang/geo/s2.Polygon).encodeLossless""",52,335,14,1,0,12,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Add,"""(github.com/golang/geo/r2.Point).Add""",3,241,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector_test.go/preciseEq,"""github.com/golang/geo/r3.preciseEq""",5,461,9,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/Expanded,"""(github.com/golang/geo/s2.Cap).Expanded""",52,467,8,1,1,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/exitAxis,"""(github.com/golang/geo/s2.pointUVW).exitAxis""",52,455,8,0,1,30,6,0,0,0,0,0,0,0,0,0,0,3,0,0,0,6,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/centerFaceSiTi,"""(github.com/golang/geo/s2.CellID).centerFaceSiTi""",52,885,14,0,1,28,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/Encode,"""(github.com/golang/geo/s2.Polyline).Encode""",52,192,6,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/sizeIJ,"""github.com/golang/geo/s2.sizeIJ""",52,885,6,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/randomPoint,"""github.com/golang/geo/s2.randomPoint""",52,395,11,0,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/faceIJOrientation,"""(github.com/golang/geo/s2.CellID).faceIJOrientation""",52,885,17,0,1,19,8,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/IntersectsCell,"""(github.com/golang/geo/s2.Point).IntersectsCell""",52,312,14,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector_test.go/TestPreciseMulByFloat64,"""github.com/golang/geo/r3.TestPreciseMulByFloat64""",5,461,23,1,0,43,15,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/expandedByDistanceUV,"""github.com/golang/geo/s2.expandedByDistanceUV""",52,885,20,2,1,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/ApproxEqual,"""(github.com/golang/geo/s2.Point).ApproxEqual""",52,312,11,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/Reset,"""(*github.com/golang/geo/s2.priorityQueue).Reset""",52,449,5,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/Area,"""(github.com/golang/geo/s2.Rect).Area""",52,424,4,0,1,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell_test.go/TestPaddedCellMethods,"""github.com/golang/geo/s2.TestPaddedCellMethods""",52,181,21,1,0,71,58,2,1,0,0,0,0,0,0,0,0,2,0,0,0,14,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_bounder_test.go/TestRectBounderMaxLatitudeRandom,"""github.com/golang/geo/s2.TestRectBounderMaxLatitudeRandom""",52,219,32,1,0,36,39,1,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectCellOps,"""github.com/golang/geo/s2.TestRectCellOps""",52,846,15,1,0,141,65,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/Length,"""(github.com/golang/geo/r1.Interval).Length""",3,145,6,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/Children,"""(github.com/golang/geo/s2.CellID).Children""",52,885,8,0,1,9,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/clipBoundAxis,"""github.com/golang/geo/s2.clipBoundAxis""",52,455,13,6,2,27,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/NumEdges,"""(*github.com/golang/geo/s2.Polygon).NumEdges""",52,335,8,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/TestPointRegularPoints,"""github.com/golang/geo/s2.TestPointRegularPoints""",52,375,22,1,0,54,33,3,0,0,0,0,0,0,0,0,0,7,0,1,0,6,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Vertices,"""(github.com/golang/geo/r2.Rect).Vertices""",3,241,8,0,1,7,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorDot,"""github.com/golang/geo/r3.TestVectorDot""",5,323,13,1,0,21,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/ContainsPoint,"""(*github.com/golang/geo/s2.CellUnion).ContainsPoint""",52,234,13,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/TestLoopCapBound,"""github.com/golang/geo/s2.TestLoopCapBound""",52,655,16,1,0,16,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/Contains,"""(github.com/golang/geo/s2.CellID).Contains""",52,885,8,1,1,2,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/ContainsCell,"""(github.com/golang/geo/s2.Point).ContainsCell""",52,312,12,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/TestLoopVertex,"""github.com/golang/geo/s2.TestLoopVertex""",52,655,14,1,0,33,24,1,0,0,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances.go/UpdateMinInteriorDistance,"""github.com/golang/geo/s2.UpdateMinInteriorDistance""",52,243,25,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/RectBound,"""(*github.com/golang/geo/s2.Polyline).RectBound""",52,192,9,0,1,6,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/EmptyInterval,"""github.com/golang/geo/r1.EmptyInterval""",3,145,13,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/ChordAngleFromSquaredLength,"""github.com/golang/geo/s1.ChordAngleFromSquaredLength""",7,192,27,1,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/readBool,"""(*github.com/golang/geo/s2.decoder).readBool""",52,167,8,0,1,7,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorMul,"""github.com/golang/geo/r3.TestVectorMul""",5,323,13,1,0,18,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/VertexNeighbors,"""(github.com/golang/geo/s2.CellID).VertexNeighbors""",52,885,15,1,1,33,10,0,0,0,0,0,0,0,0,0,0,4,0,1,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell.go/Level,"""(github.com/golang/geo/s2.PaddedCell).Level""",52,238,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/Reset,"""(*github.com/golang/geo/s2.ShapeIndexIterator).Reset""",52,481,5,0,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/readInt64,"""(*github.com/golang/geo/s2.decoder).readInt64""",52,167,9,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell.go/PaddedCellFromCellID,"""github.com/golang/geo/s2.PaddedCellFromCellID""",52,238,20,2,1,24,8,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/faceUVToXYZ,"""github.com/golang/geo/s2.faceUVToXYZ""",52,289,11,2,1,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/rotate,"""github.com/golang/geo/s2.rotate""",52,655,6,1,1,7,6,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/BenchmarkPointArea,"""github.com/golang/geo/s2.BenchmarkPointArea""",52,375,18,1,0,4,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle.go/Radians,"""(github.com/golang/geo/s1.Angle).Radians""",7,98,7,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/Add,"""(github.com/golang/geo/s1.ChordAngle).Add""",7,192,3,1,1,24,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/RectBound,"""(github.com/golang/geo/s2.Cap).RectBound""",52,467,9,0,1,45,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/Len,"""(github.com/golang/geo/s2.byID).Len""",52,234,3,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/String,"""(github.com/golang/geo/r2.Point).String""",3,241,6,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/AtBegin,"""(*github.com/golang/geo/s2.ShapeIndexIterator).AtBegin""",52,481,7,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval_test.go/TestAlmostFullOrEmpty,"""github.com/golang/geo/s1.TestAlmostFullOrEmpty""",7,441,21,1,0,25,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/encode,"""(github.com/golang/geo/s2.Cap).encode""",52,467,6,1,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/AddPoint,"""(github.com/golang/geo/s2.Rect).AddPoint""",52,424,8,1,1,8,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_bounder.go/AddPoint,"""(*github.com/golang/geo/s2.RectBounder).AddPoint""",52,338,8,1,0,128,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/LocatePoint,"""(*github.com/golang/geo/s2.ShapeIndexIterator).LocatePoint""",52,481,11,1,1,18,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/faceSiTiToXYZ,"""github.com/golang/geo/s2.faceSiTiToXYZ""",52,289,13,2,1,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/IntervalFromPoint,"""github.com/golang/geo/r1.IntervalFromPoint""",3,145,17,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/EdgeNeighbors,"""(github.com/golang/geo/s2.CellID).EdgeNeighbors""",52,885,13,0,1,10,11,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/ChildBeginAtLevel,"""(github.com/golang/geo/s2.CellID).ChildBeginAtLevel""",52,885,17,1,1,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/LastDescendant,"""(*github.com/golang/geo/s2.Polygon).LastDescendant""",52,335,14,1,1,13,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng.go/longitude,"""github.com/golang/geo/s2.longitude""",52,81,9,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/expanded,"""(github.com/golang/geo/s2.Rect).expanded""",52,424,8,1,1,12,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping_test.go/checkPointOnBoundary,"""github.com/golang/geo/s2.checkPointOnBoundary""",52,383,20,3,0,10,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3.go/setCol,"""(*github.com/golang/geo/s2.matrix3x3).setCol""",52,113,6,2,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/HasInterior,"""(*github.com/golang/geo/s2.Polyline).HasInterior""",52,192,11,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/coveringInternal,"""(*github.com/golang/geo/s2.coverer).coveringInternal""",52,449,16,1,0,28,11,2,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/ContainsCell,"""(github.com/golang/geo/s2.Cell).ContainsCell""",52,375,12,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/writeInt64,"""(*github.com/golang/geo/s2.encoder).writeInt64""",52,167,10,1,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/TestLoopRegularLoop,"""github.com/golang/geo/s2.TestLoopRegularLoop""",52,655,19,1,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion_test.go/TestCellUnion,"""github.com/golang/geo/s2.TestCellUnion""",52,707,13,1,0,153,36,5,4,0,0,0,0,0,0,0,0,0,0,17,0,8,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestExpandedEmpty,"""github.com/golang/geo/r2.TestExpandedEmpty""",3,457,17,1,0,27,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/Area,"""(github.com/golang/geo/s2.Cap).Area""",52,467,4,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping_test.go/choosePointInRect,"""github.com/golang/geo/s2.choosePointInRect""",52,383,17,1,1,12,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/chainStart,"""(*github.com/golang/geo/s2.Polyline).chainStart""",52,192,10,1,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/projectToBoundary,"""github.com/golang/geo/s2.projectToBoundary""",52,1032,17,2,1,18,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/Expanded,"""(github.com/golang/geo/r1.Interval).Expanded""",3,145,8,1,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/Level,"""(github.com/golang/geo/s2.Cell).Level""",52,375,5,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/CellIDFromFacePosLevel,"""github.com/golang/geo/s2.CellIDFromFacePosLevel""",52,885,22,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/dimension,"""(*github.com/golang/geo/s2.Loop).dimension""",52,446,9,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Distance,"""(github.com/golang/geo/r3.Vector).Distance""",5,168,8,1,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/dedupCellIDs,"""github.com/golang/geo/s2.dedupCellIDs""",52,1032,12,1,1,11,1,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/rectFromDegrees,"""github.com/golang/geo/s2.rectFromDegrees""",52,846,15,1,1,14,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/ApproxEquals,"""(github.com/golang/geo/r2.Rect).ApproxEquals""",3,241,12,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/IsEmpty,"""(github.com/golang/geo/s2.Cap).IsEmpty""",52,467,7,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/ID,"""(github.com/golang/geo/s2.Cell).ID""",52,375,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/Less,"""(github.com/golang/geo/s2.byCellID).Less""",52,1032,4,1,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3.go/toFrame,"""github.com/golang/geo/s2.toFrame""",52,113,7,2,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion_test.go/BenchmarkCellUnionFromRange,"""github.com/golang/geo/s2.BenchmarkCellUnionFromRange""",52,707,27,1,0,6,5,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval_test.go/TestIntervalContains,"""github.com/golang/geo/r1.TestIntervalContains""",3,333,20,1,0,35,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/clipDestination,"""github.com/golang/geo/s2.clipDestination""",52,455,15,2,2,52,11,0,0,0,0,0,0,0,0,0,0,2,0,0,0,6,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectPolarClosure,"""github.com/golang/geo/s2.TestRectPolarClosure""",52,846,20,1,0,27,11,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectFromCenterSize,"""github.com/golang/geo/s2.TestRectFromCenterSize""",52,846,22,1,0,26,12,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Cmp,"""(github.com/golang/geo/r3.Vector).Cmp""",5,168,3,1,1,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorCross,"""github.com/golang/geo/r3.TestVectorCross""",5,323,15,1,0,14,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/IntersectsCell,"""(github.com/golang/geo/s2.Cap).IntersectsCell""",52,467,14,1,1,10,3,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/containsEdge,"""(*github.com/golang/geo/s2.clippedShape).containsEdge""",52,481,12,1,1,9,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/LocateCellID,"""(*github.com/golang/geo/s2.ShapeIndexIterator).LocateCellID""",52,481,12,1,1,22,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector_test.go/TestPreciseIdentities,"""github.com/golang/geo/r3.TestPreciseIdentities""",5,461,21,1,0,52,27,1,0,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/Contains,"""(github.com/golang/geo/s1.Interval).Contains""",7,330,8,1,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval_test.go/TestContains,"""github.com/golang/geo/s1.TestContains""",7,441,12,1,0,38,8,5,4,0,0,0,0,0,0,0,0,0,0,22,0,4,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/ContainsPoint,"""(github.com/golang/geo/r2.Rect).ContainsPoint""",3,241,13,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/ContainsCell,"""(*github.com/golang/geo/s2.CellUnion).ContainsCell""",52,234,12,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/TestCellContainsPointContainsAmbiguousPoint,"""github.com/golang/geo/s2.TestCellContainsPointContainsAmbiguousPoint""",52,506,43,1,0,18,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/validateInterior,"""github.com/golang/geo/s2.validateInterior""",52,241,16,4,0,20,10,1,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/Normalize,"""(*github.com/golang/geo/s2.CellUnion).Normalize""",52,234,9,0,0,58,17,3,2,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/s2/cellid_test.go/TestCellIDAllNeighbors,"""github.com/golang/geo/s2.TestCellIDAllNeighbors""",52,1032,22,1,0,36,23,2,1,0,0,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0
/s1/interval.go/ContainsInterval,"""(github.com/golang/geo/s1.Interval).ContainsInterval""",7,330,16,1,1,11,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/Centroid,"""(*github.com/golang/geo/s2.Polyline).Centroid""",52,192,8,0,1,13,8,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crossings.go/SimpleCrossing,"""github.com/golang/geo/s2.SimpleCrossing""",52,149,14,1,1,15,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/NumEdges,"""(*github.com/golang/geo/s2.Loop).NumEdges""",52,446,8,0,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/RegularLoop,"""github.com/golang/geo/s2.RegularLoop""",52,446,11,3,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/encode,"""(github.com/golang/geo/s2.Loop).encode""",52,446,6,1,0,15,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval_test.go/TestIntersection,"""github.com/golang/geo/r1.TestIntersection""",3,333,16,1,0,16,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Expanded,"""(github.com/golang/geo/r2.Rect).Expanded""",3,241,8,1,1,7,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/Angle,"""(github.com/golang/geo/s1.ChordAngle).Angle""",7,192,5,0,1,8,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/Children,"""(github.com/golang/geo/s2.Cell).Children""",52,375,8,0,2,43,5,1,0,0,0,0,0,0,0,0,0,1,0,1,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/Loop,"""(*github.com/golang/geo/s2.Polygon).Loop""",52,335,4,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Norm,"""(github.com/golang/geo/r2.Point).Norm""",3,241,4,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/PrevWrap,"""(github.com/golang/geo/s2.CellID).PrevWrap""",52,885,8,0,1,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crosser.go/crossingSign,"""(*github.com/golang/geo/s2.EdgeCrosser).crossingSign""",52,217,12,2,1,68,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,1,16,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/EmptyRect,"""github.com/golang/geo/s2.EmptyRect""",52,424,9,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline_test.go/TestPolylineLengthAndCentroid,"""github.com/golang/geo/s2.TestPolylineLengthAndCentroid""",52,128,29,1,0,31,22,2,1,0,0,0,0,0,0,0,0,5,0,0,0,3,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/BoundUV,"""(github.com/golang/geo/s2.Cell).BoundUV""",52,375,7,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/findLSBSetNonZero64,"""github.com/golang/geo/s2.findLSBSetNonZero64""",52,885,19,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances.go/minUpdateDistanceMaxError,"""github.com/golang/geo/s2.minUpdateDistanceMaxError""",52,243,25,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon_test.go/TestPolygonParent,"""github.com/golang/geo/s2.TestPolygonParent""",52,324,17,1,0,20,3,1,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/ijToSTMin,"""github.com/golang/geo/s2.ijToSTMin""",52,885,9,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/encode,"""(github.com/golang/geo/s2.Point).encode""",52,312,6,1,0,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng_test.go/TestLatLngDistance,"""github.com/golang/geo/s2.TestLatLngDistance""",52,139,18,1,0,20,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test_test.go/TestParseLatLngs,"""github.com/golang/geo/s2.TestParseLatLngs""",52,180,16,1,0,20,3,1,0,0,0,0,0,0,0,0,0,0,0,4,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Ortho,"""(github.com/golang/geo/r2.Point).Ortho""",3,241,5,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapRadiusToHeight,"""github.com/golang/geo/s2.TestCapRadiusToHeight""",52,702,21,1,0,38,7,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapRectBounds,"""github.com/golang/geo/s2.TestCapRectBounds""",52,702,17,1,0,74,49,1,0,0,0,0,0,0,0,0,0,2,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/HasInterior,"""(*github.com/golang/geo/s2.testShape).HasInterior""",52,241,11,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/EmptyRect,"""github.com/golang/geo/r2.EmptyRect""",3,241,9,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Ortho,"""(github.com/golang/geo/r3.Vector).Ortho""",5,168,5,0,1,11,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/Push,"""(*github.com/golang/geo/s2.priorityQueue).Push""",52,449,4,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/numEdges,"""(*github.com/golang/geo/s2.clippedShape).numEdges""",52,481,8,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/InteriorIntersects,"""(github.com/golang/geo/r1.Interval).InteriorIntersects""",3,145,18,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval_test.go/TestLength,"""github.com/golang/geo/s1.TestLength""",7,441,10,1,0,22,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/regularPointsForFrame,"""github.com/golang/geo/s2.regularPointsForFrame""",52,312,21,3,1,17,11,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell.go/Padding,"""(github.com/golang/geo/s2.PaddedCell).Padding""",52,238,7,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDMaxTile,"""github.com/golang/geo/s2.TestCellIDMaxTile""",52,1032,17,1,0,78,87,1,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3_test.go/TestString,"""github.com/golang/geo/s2.TestString""",52,478,10,1,0,28,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/parseRect,"""github.com/golang/geo/s2.parseRect""",52,395,9,1,1,12,4,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/VertexIJ,"""(github.com/golang/geo/r2.Rect).VertexIJ""",3,241,8,1,1,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/Mul,"""(github.com/golang/geo/r3.PreciseVector).Mul""",5,184,3,1,1,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Mul,"""(github.com/golang/geo/r3.Vector).Mul""",5,168,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval_test.go/TestIntervalOperations,"""github.com/golang/geo/s1.TestIntervalOperations""",7,441,22,1,0,163,34,1,0,0,0,0,0,0,0,0,0,0,0,1,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Center,"""(github.com/golang/geo/r2.Rect).Center""",3,241,6,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/positiveDistance,"""github.com/golang/geo/s1.positiveDistance""",7,330,16,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/Edge,"""(*github.com/golang/geo/s2.Polyline).Edge""",52,192,4,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapCentroid,"""github.com/golang/geo/s2.TestCapCentroid""",52,702,15,1,0,20,17,1,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/ContainsOrigin,"""(*github.com/golang/geo/s2.Loop).ContainsOrigin""",52,446,14,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDVertexNeighbors,"""github.com/golang/geo/s2.TestCellIDVertexNeighbors""",52,1032,25,1,0,34,21,1,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0
/s2/matrix3x3_test.go/TestSetRow,"""github.com/golang/geo/s2.TestSetRow""",52,478,10,1,0,37,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv_test.go/TestXYZFaceSiTiRoundtrip,"""github.com/golang/geo/s2.TestXYZFaceSiTiRoundtrip""",52,346,24,1,0,11,9,2,1,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/chainStart,"""(*github.com/golang/geo/s2.Loop).chainStart""",52,446,10,1,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/NumEdges,"""(*github.com/golang/geo/s2.ShapeIndex).NumEdges""",52,481,8,0,1,6,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv_test.go/TestFaceXYZToUV,"""github.com/golang/geo/s2.TestFaceXYZToUV""",52,346,15,1,0,32,4,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle.go/round,"""github.com/golang/geo/s1.round""",7,98,5,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/CellIDFromToken,"""github.com/golang/geo/s2.CellIDFromToken""",52,885,15,1,1,13,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
/s1/interval_test.go/TestExpanded,"""github.com/golang/geo/s1.TestExpanded""",7,441,12,1,0,28,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/Point,"""(github.com/golang/geo/s2.CellID).Point""",52,885,5,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/Less,"""(github.com/golang/geo/s2.priorityQueue).Less""",52,449,4,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/writeUint64,"""(*github.com/golang/geo/s2.encoder).writeUint64""",52,167,11,1,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/initOriginAndBound,"""(*github.com/golang/geo/s2.Loop).initOriginAndBound""",52,446,18,0,0,42,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/randomFrameAtPoint,"""github.com/golang/geo/s2.randomFrameAtPoint""",52,395,18,1,1,9,8,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval_test.go/TestCenter,"""github.com/golang/geo/r1.TestCenter""",3,333,10,1,0,15,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestExpandedEquals,"""github.com/golang/geo/r2.TestExpandedEquals""",3,457,18,1,0,27,9,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/isInf,"""(github.com/golang/geo/s1.ChordAngle).isInf""",7,192,5,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/writeBool,"""(*github.com/golang/geo/s2.encoder).writeBool""",52,167,9,1,0,9,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,3,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/InteriorCellUnion,"""(*github.com/golang/geo/s2.RegionCoverer).InteriorCellUnion""",52,449,17,1,1,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell.go/PaddedCellFromParentIJ,"""github.com/golang/geo/s2.PaddedCellFromParentIJ""",52,238,22,2,1,33,4,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/uAxis,"""github.com/golang/geo/s2.uAxis""",52,289,5,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/Len,"""(github.com/golang/geo/s2.priorityQueue).Len""",52,449,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/cellIDFromPoint,"""github.com/golang/geo/s2.cellIDFromPoint""",52,885,15,1,1,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/ContainsCell,"""(*github.com/golang/geo/s2.Loop).ContainsCell""",52,446,12,1,1,21,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/CapBound,"""(github.com/golang/geo/s2.Rect).CapBound""",52,424,8,0,1,31,16,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances_test.go/TestEdgeDistancesInterpolateAntipodal,"""github.com/golang/geo/s2.TestEdgeDistancesInterpolateAntipodal""",52,246,37,1,0,11,8,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/testIteratorMethods,"""github.com/golang/geo/s2.testIteratorMethods""",52,241,19,2,0,118,93,3,2,0,0,0,0,0,0,0,0,2,0,1,0,23,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapEqual,"""github.com/golang/geo/s2.TestCapEqual""",52,702,12,1,0,23,13,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/perturbATowardsB,"""github.com/golang/geo/s2.perturbATowardsB""",52,395,16,1,1,23,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/String,"""(github.com/golang/geo/r3.PreciseVector).String""",5,184,6,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/AddPoint,"""(github.com/golang/geo/s1.Interval).AddPoint""",7,330,8,1,1,17,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/expandEndpoint,"""github.com/golang/geo/s2.expandEndpoint""",52,885,14,1,1,8,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorNorm,"""github.com/golang/geo/r3.TestVectorNorm""",5,323,14,1,0,15,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/Reset,"""(*github.com/golang/geo/s2.ShapeIndex).Reset""",52,481,5,0,0,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/Equals,"""(github.com/golang/geo/r3.PreciseVector).Equals""",5,184,6,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/init,"""github.com/golang/geo/s2.init""",52,885,4,0,0,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crosser.go/RestartAt,"""(*github.com/golang/geo/s2.EdgeCrosser).RestartAt""",52,217,9,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell.go/EntryVertex,"""(github.com/golang/geo/s2.PaddedCell).EntryVertex""",52,238,11,0,1,11,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates.go/expensiveSign,"""github.com/golang/geo/s2.expensiveSign""",52,222,13,1,1,21,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/TestCellRectBound,"""github.com/golang/geo/s2.TestCellRectBound""",52,506,17,1,0,22,8,2,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/TestLoopFromCell,"""github.com/golang/geo/s2.TestLoopFromCell""",52,655,16,1,0,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/Intersection,"""(github.com/golang/geo/r1.Interval).Intersection""",3,145,12,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Mul,"""(github.com/golang/geo/r2.Point).Mul""",3,241,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/RectFromCenterSize,"""github.com/golang/geo/r2.RectFromCenterSize""",3,241,18,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/TestLoopRectBound,"""github.com/golang/geo/s2.TestLoopRectBound""",52,655,17,1,0,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/String,"""(github.com/golang/geo/r2.Rect).String""",3,241,6,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/precFloat,"""github.com/golang/geo/r3.precFloat""",5,184,9,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapBasicEmptyFullValid,"""github.com/golang/geo/s2.TestCapBasicEmptyFullValid""",52,702,26,1,0,32,9,1,0,0,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/HasInterior,"""(*github.com/golang/geo/s2.Loop).HasInterior""",52,446,11,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/seek,"""(*github.com/golang/geo/s2.ShapeIndexIterator).seek""",52,481,4,1,0,12,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/AddRect,"""(github.com/golang/geo/r2.Rect).AddRect""",3,241,7,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Norm2,"""(github.com/golang/geo/r3.Vector).Norm2""",5,168,5,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector_test.go/TestPreciseDot,"""github.com/golang/geo/r3.TestPreciseDot""",5,461,14,1,0,50,19,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/InteriorIntersects,"""(github.com/golang/geo/s1.Interval).InteriorIntersects""",7,330,18,1,1,11,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/Encode,"""(github.com/golang/geo/s2.Cell).Encode""",52,375,6,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/LoopFromPoints,"""github.com/golang/geo/s2.LoopFromPoints""",52,446,14,1,1,7,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/dimension,"""(*github.com/golang/geo/s2.Polyline).dimension""",52,192,9,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/siTiToST,"""github.com/golang/geo/s2.siTiToST""",52,289,8,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/faceXYZtoUVW,"""github.com/golang/geo/s2.faceXYZtoUVW""",52,289,12,2,1,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/testCellChildren,"""github.com/golang/geo/s2.testCellChildren""",52,506,16,2,0,163,96,6,5,0,0,0,0,0,0,0,0,7,0,1,0,37,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/RectFromPoints,"""github.com/golang/geo/r2.RectFromPoints""",3,241,14,1,1,19,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/SmallestComponent,"""(github.com/golang/geo/r3.PreciseVector).SmallestComponent""",5,184,17,0,1,13,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/IsEmpty,"""(github.com/golang/geo/s1.Interval).IsEmpty""",7,330,7,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval_test.go/TestAddPoint,"""github.com/golang/geo/s1.TestAddPoint""",7,441,12,1,0,29,4,2,1,0,0,0,0,0,0,0,0,0,0,13,0,1,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Add,"""(github.com/golang/geo/r3.Vector).Add""",5,168,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/ClipEdge,"""github.com/golang/geo/s2.ClipEdge""",52,455,8,2,2,17,4,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crosser.go/ChainCrossingSign,"""(*github.com/golang/geo/s2.EdgeCrosser).ChainCrossingSign""",52,217,17,1,1,19,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/ContainsPoint,"""(*github.com/golang/geo/s2.Polyline).ContainsPoint""",52,192,13,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Size,"""(github.com/golang/geo/r2.Rect).Size""",3,241,4,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/InteriorIntersects,"""(github.com/golang/geo/r2.Rect).InteriorIntersects""",3,241,18,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle_test.go/TestNormalizeCorrectlyCanonicalizesAngles,"""github.com/golang/geo/s1.TestNormalizeCorrectlyCanonicalizesAngles""",7,153,41,1,0,16,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/AdvanceWrap,"""(github.com/golang/geo/s2.CellID).AdvanceWrap""",52,885,11,1,1,30,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval_test.go/TestIntervalString,"""github.com/golang/geo/r1.TestIntervalString""",3,333,18,1,0,5,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/ApproxEqual,"""(github.com/golang/geo/r3.Vector).ApproxEqual""",5,168,11,1,1,3,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances.go/DistanceFraction,"""github.com/golang/geo/s2.DistanceFraction""",52,243,16,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDTokensNominal,"""github.com/golang/geo/s2.TestCellIDTokensNominal""",52,1032,23,1,0,49,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/float64Eq,"""github.com/golang/geo/r3.float64Eq""",5,323,9,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/ContainsPoint,"""(*github.com/golang/geo/s2.Loop).ContainsPoint""",52,446,13,1,1,24,7,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv_test.go/TestUVWFace,"""github.com/golang/geo/s2.TestUVWFace""",52,346,11,1,0,12,12,2,1,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle_test.go/TestPiRadiansExactly180Degrees,"""github.com/golang/geo/s1.TestPiRadiansExactly180Degrees""",7,153,30,1,0,25,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/Edge,"""(github.com/golang/geo/s2.Cell).Edge""",52,375,4,1,1,11,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping_test.go/TestEdgeClippingExitAxis,"""github.com/golang/geo/s2.TestEdgeClippingExitAxis""",52,383,24,1,0,19,12,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3_test.go/TestCol,"""github.com/golang/geo/s2.TestCol""",52,478,7,1,0,32,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/RectBound,"""(github.com/golang/geo/s2.Cell).RectBound""",52,375,9,0,1,79,22,0,0,0,0,0,0,0,0,0,0,3,0,0,0,7,1,6,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/iteratorContainsPoint,"""(*github.com/golang/geo/s2.Loop).iteratorContainsPoint""",52,446,21,2,1,18,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/Iterator,"""(*github.com/golang/geo/s2.ShapeIndex).Iterator""",52,481,8,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon_test.go/TestPolygonLoop,"""github.com/golang/geo/s2.TestPolygonLoop""",52,324,15,1,0,15,7,0,0,0,0,0,0,0,0,0,0,0,1,1,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/Add,"""(*github.com/golang/geo/s2.ShapeIndex).Add""",52,481,3,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/Swap,"""(github.com/golang/geo/s2.byCellID).Swap""",52,1032,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/metric_test.go/TestMetricSizeRelations,"""github.com/golang/geo/s2.TestMetricSizeRelations""",52,93,23,1,0,22,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/pointsApproxEqual,"""github.com/golang/geo/r2.pointsApproxEqual""",3,457,17,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/Less,"""(github.com/golang/geo/s2.byID).Less""",52,234,4,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/intersectsFace,"""(github.com/golang/geo/s2.pointUVW).intersectsFace""",52,455,14,0,1,13,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng.go/Normalized,"""(github.com/golang/geo/s2.LatLng).Normalized""",52,81,10,0,1,9,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/LoopFromCell,"""github.com/golang/geo/s2.LoopFromCell""",52,446,12,1,1,12,5,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorAngle,"""github.com/golang/geo/r3.TestVectorAngle""",5,323,15,1,0,19,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/ClipToPaddedFace,"""github.com/golang/geo/s2.ClipToPaddedFace""",52,455,16,3,2,48,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances_test.go/TestEdgeDistancesInterpolate,"""github.com/golang/geo/s2.TestEdgeDistancesInterpolate""",52,246,28,1,0,45,12,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectContainsLatLng,"""github.com/golang/geo/s2.TestRectContainsLatLng""",52,846,22,1,0,32,10,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDString,"""github.com/golang/geo/s2.TestCellIDString""",52,1032,16,1,0,5,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/numChains,"""(*github.com/golang/geo/s2.Loop).numChains""",52,446,9,0,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates.go/triageSign,"""github.com/golang/geo/s2.triageSign""",52,222,10,1,1,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/expandChildren,"""(*github.com/golang/geo/s2.coverer).expandChildren""",52,449,14,3,1,21,8,1,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/IsFresh,"""(*github.com/golang/geo/s2.ShapeIndex).IsFresh""",52,481,7,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/seekForward,"""(*github.com/golang/geo/s2.ShapeIndexIterator).seekForward""",52,481,11,1,0,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv_test.go/TestUVWAxis,"""github.com/golang/geo/s2.TestUVWAxis""",52,346,11,1,0,29,28,1,0,0,0,0,0,0,0,0,0,1,0,0,0,7,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/ApproxEqual,"""(github.com/golang/geo/r1.Interval).ApproxEqual""",3,145,11,1,1,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/interpolateFloat64,"""github.com/golang/geo/s2.interpolateFloat64""",52,455,18,1,1,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/ContainsPoint,"""(github.com/golang/geo/s2.Point).ContainsPoint""",52,312,13,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/newCoverer,"""(*github.com/golang/geo/s2.RegionCoverer).newCoverer""",52,449,10,0,1,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng.go/String,"""(github.com/golang/geo/s2.LatLng).String""",52,81,6,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/encode,"""(github.com/golang/geo/s2.Cell).encode""",52,375,6,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates.go/Sign,"""github.com/golang/geo/s2.Sign""",52,222,4,1,1,12,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion_test.go/TestCellUnionRectBound,"""github.com/golang/geo/s2.TestCellUnionRectBound""",52,707,22,1,0,66,17,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/TestLoopContainsMatchesCrossingSign,"""github.com/golang/geo/s2.TestLoopContainsMatchesCrossingSign""",52,655,35,1,0,88,58,1,0,0,0,0,0,0,0,0,0,1,0,1,0,10,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/RectBound,"""(*github.com/golang/geo/s2.Loop).RectBound""",52,446,9,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/ContainsOrigin,"""(*github.com/golang/geo/s2.Polyline).ContainsOrigin""",52,192,14,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/Encode,"""(github.com/golang/geo/s2.Rect).Encode""",52,424,6,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/makePolyline,"""github.com/golang/geo/s2.makePolyline""",52,395,12,1,1,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/IsValid,"""(github.com/golang/geo/s2.Cap).IsValid""",52,467,7,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/Complement,"""(github.com/golang/geo/s2.Cap).Complement""",52,467,10,0,1,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/CommonAncestorLevel,"""(github.com/golang/geo/s2.CellID).CommonAncestorLevel""",52,885,19,1,2,14,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell.go/CellID,"""(github.com/golang/geo/s2.PaddedCell).CellID""",52,238,6,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/ContainsPoint,"""(github.com/golang/geo/s2.Cell).ContainsPoint""",52,375,13,1,1,15,4,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/randomCellIDForLevel,"""github.com/golang/geo/s2.randomCellIDForLevel""",52,395,20,1,1,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/concentricLoopsPolygon,"""github.com/golang/geo/s2.concentricLoopsPolygon""",52,395,22,2,1,7,6,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Angle,"""(github.com/golang/geo/r3.Vector).Angle""",5,168,5,1,1,2,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle_test.go/TestChordAngleFromAngle,"""github.com/golang/geo/s1.TestChordAngleFromAngle""",7,233,23,1,0,14,13,1,0,0,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/RectBound,"""(github.com/golang/geo/s2.Point).RectBound""",52,312,9,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/face,"""github.com/golang/geo/s2.face""",52,289,4,1,1,11,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/Union,"""(github.com/golang/geo/r1.Interval).Union""",3,145,5,1,1,8,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval_test.go/TestUnion,"""github.com/golang/geo/r1.TestUnion""",3,333,9,1,0,19,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestVertices,"""github.com/golang/geo/r2.TestVertices""",3,457,12,1,0,6,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/regularPoints,"""github.com/golang/geo/s2.regularPoints""",52,312,13,3,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/IsValid,"""(github.com/golang/geo/s2.CellID).IsValid""",52,885,7,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/Len,"""(*github.com/golang/geo/s2.ShapeIndex).Len""",52,481,3,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/precStr,"""github.com/golang/geo/r3.precStr""",5,184,7,1,1,4,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/Vertices,"""(*github.com/golang/geo/s2.Loop).Vertices""",52,446,8,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectVertex,"""github.com/golang/geo/s2.TestRectVertex""",52,846,14,1,0,18,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3.go/setRow,"""(*github.com/golang/geo/s2.matrix3x3).setRow""",52,113,6,2,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/Intersects,"""(github.com/golang/geo/s2.Rect).Intersects""",52,424,10,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping_test.go/randomPointFromInterval,"""github.com/golang/geo/s2.randomPointFromInterval""",52,383,23,1,1,16,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,3,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates_test.go/BenchmarkRobustSignNearCollinear,"""github.com/golang/geo/s2.BenchmarkRobustSignNearCollinear""",52,298,32,1,0,4,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv_test.go/TestXYZToFaceSiTi,"""github.com/golang/geo/s2.TestXYZToFaceSiTi""",52,346,17,1,0,71,43,3,2,0,0,0,0,0,0,0,0,2,0,0,0,13,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/Equal,"""(github.com/golang/geo/s2.Cap).Equal""",52,467,5,1,1,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/AverageArea,"""(github.com/golang/geo/s2.Cell).AverageArea""",52,375,11,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/boundUV,"""(github.com/golang/geo/s2.CellID).boundUV""",52,885,7,0,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell.go/Middle,"""(*github.com/golang/geo/s2.PaddedCell).Middle""",52,238,6,0,1,13,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle_test.go/TestChordAngleExpanded,"""github.com/golang/geo/s1.TestChordAngleExpanded""",7,233,22,1,0,21,10,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/NextWrap,"""(github.com/golang/geo/s2.CellID).NextWrap""",52,885,8,0,1,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/ijLevelToBoundUV,"""github.com/golang/geo/s2.ijLevelToBoundUV""",52,885,16,1,1,15,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/Next,"""(*github.com/golang/geo/s2.ShapeIndexIterator).Next""",52,481,4,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval_test.go/TestClampPoint,"""github.com/golang/geo/r1.TestClampPoint""",3,333,14,1,0,15,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping.go/intersectsOppositeEdges,"""(github.com/golang/geo/s2.pointUVW).intersectsOppositeEdges""",52,455,23,0,1,20,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/Encode,"""(*github.com/golang/geo/s2.Polygon).Encode""",52,335,6,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/NewShapeIndexCell,"""github.com/golang/geo/s2.NewShapeIndexCell""",52,481,17,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/CapFromCenterChordAngle,"""github.com/golang/geo/s2.CapFromCenterChordAngle""",52,467,23,2,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/Vertex,"""(*github.com/golang/geo/s2.Loop).Vertex""",52,446,6,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping_test.go/testClipToPaddedFace,"""github.com/golang/geo/s2.testClipToPaddedFace""",52,383,20,2,0,74,53,1,0,0,0,0,0,0,0,0,0,3,0,0,0,13,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Intersection,"""(github.com/golang/geo/r2.Rect).Intersection""",3,241,12,1,1,8,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/Sub,"""(github.com/golang/geo/r3.PreciseVector).Sub""",5,184,3,1,1,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/ExactArea,"""(github.com/golang/geo/s2.Cell).ExactArea""",52,375,9,0,1,3,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/makePolygon,"""github.com/golang/geo/s2.makePolygon""",52,395,11,2,1,15,5,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDCenterFaceSiTi,"""github.com/golang/geo/s2.TestCellIDCenterFaceSiTi""",52,1032,24,1,0,35,9,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/TestLoopEmptyAndFull,"""github.com/golang/geo/s2.TestLoopEmptyAndFull""",52,655,20,1,0,36,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon_test.go/TestPolygonShape,"""github.com/golang/geo/s2.TestPolygonShape""",52,324,16,1,0,53,40,2,1,0,0,0,0,0,0,0,0,3,0,0,0,12,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector_test.go/TestPreciseMul,"""github.com/golang/geo/r3.TestPreciseMul""",5,461,14,1,0,43,21,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/initBound,"""(*github.com/golang/geo/s2.Loop).initBound""",52,446,9,0,0,37,14,1,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestIJLevelToBoundUV,"""github.com/golang/geo/s2.TestIJLevelToBoundUV""",52,1032,20,1,0,106,22,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDDistanceToBegin,"""github.com/golang/geo/s2.TestCellIDDistanceToBegin""",52,1032,25,1,0,41,18,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/IsInverted,"""(github.com/golang/geo/s1.Interval).IsInverted""",7,330,10,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/CapBound,"""(*github.com/golang/geo/s2.CellUnion).CapBound""",52,234,8,0,1,30,13,2,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/Center,"""(github.com/golang/geo/s2.Rect).Center""",52,424,6,0,1,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/Pop,"""(*github.com/golang/geo/s2.priorityQueue).Pop""",52,449,3,0,1,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval_test.go/TestSimplePredicates,"""github.com/golang/geo/s1.TestSimplePredicates""",7,441,20,1,0,19,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3.go/det,"""(*github.com/golang/geo/s2.matrix3x3).det""",52,113,3,0,1,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/InteriorContainsPoint,"""(github.com/golang/geo/r2.Rect).InteriorContainsPoint""",3,241,21,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/Expanded,"""(github.com/golang/geo/s1.ChordAngle).Expanded""",7,192,8,1,1,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapContains,"""github.com/golang/geo/s2.TestCapContains""",52,702,15,1,0,24,8,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crosser.go/EdgeOrVertexChainCrossing,"""(*github.com/golang/geo/s2.EdgeCrosser).EdgeOrVertexChainCrossing""",52,217,25,1,1,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/uvwAxis,"""github.com/golang/geo/s2.uvwAxis""",52,289,7,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestFindLSBSetNonZero64,"""github.com/golang/geo/s2.TestFindLSBSetNonZero64""",52,1032,23,1,0,22,11,1,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval_test.go/TestApproxEqual,"""github.com/golang/geo/r1.TestApproxEqual""",3,333,15,1,0,39,10,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/TestCellRectBoundAroundPoleMinLat,"""github.com/golang/geo/s2.TestCellRectBoundAroundPoleMinLat""",52,506,33,1,0,32,12,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test_test.go/TestKmToAngle,"""github.com/golang/geo/s2.TestKmToAngle""",52,180,13,1,0,20,5,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv_test.go/TestUVNorms,"""github.com/golang/geo/s2.TestUVNorms""",52,346,11,1,0,12,16,2,1,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/ClampPoint,"""(github.com/golang/geo/r1.Interval).ClampPoint""",3,145,10,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/cellIDFromFaceIJSame,"""github.com/golang/geo/s2.cellIDFromFaceIJSame""",52,885,20,2,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/IntersectsCellID,"""(*github.com/golang/geo/s2.CellUnion).IntersectsCellID""",52,234,16,1,1,8,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/s2/cellid_test.go/TestCellIDWrapping,"""github.com/golang/geo/s2.TestCellIDWrapping""",52,1032,18,1,0,91,76,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/AddPoint,"""(github.com/golang/geo/r2.Rect).AddPoint""",3,241,8,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/PlanarCentroid,"""github.com/golang/geo/s2.PlanarCentroid""",52,312,14,1,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/Lo,"""(github.com/golang/geo/s2.Rect).Lo""",52,424,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping_test.go/getFraction,"""github.com/golang/geo/s2.getFraction""",52,383,11,2,1,12,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/samplePointFromRect,"""github.com/golang/geo/s2.samplePointFromRect""",52,395,19,1,1,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle.go/InfAngle,"""github.com/golang/geo/s1.InfAngle""",7,98,8,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/sizeST,"""(github.com/golang/geo/s2.CellID).sizeST""",52,885,6,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3.go/fromFrame,"""github.com/golang/geo/s2.fromFrame""",52,113,9,2,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer_test.go/checkCoveringTight,"""github.com/golang/geo/s2.checkCoveringTight""",52,135,18,5,0,28,20,2,0,0,0,0,0,0,0,0,0,1,0,0,0,6,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Union,"""(github.com/golang/geo/r2.Rect).Union""",3,241,5,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/Contains,"""(github.com/golang/geo/s2.Point).Contains""",52,312,8,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion_test.go/TestCellUnionFromRange,"""github.com/golang/geo/s2.TestCellUnionFromRange""",52,707,22,1,0,52,39,3,1,0,0,0,0,0,0,0,0,3,0,0,0,9,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop_test.go/cloneLoop,"""github.com/golang/geo/s2.cloneLoop""",52,655,9,1,1,12,5,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/metric.go/ClosestLevel,"""(github.com/golang/geo/s2.Metric).ClosestLevel""",52,150,12,1,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/CellID,"""(*github.com/golang/geo/s2.ShapeIndexIterator).CellID""",52,481,6,0,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon_test.go/TestPolygonLastDescendant,"""github.com/golang/geo/s2.TestPolygonLastDescendant""",52,324,25,1,0,22,3,1,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector.go/NewPreciseVector,"""github.com/golang/geo/r3.NewPreciseVector""",5,184,16,1,1,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/uvToST,"""github.com/golang/geo/s2.uvToST""",52,289,6,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_clipping_test.go/TestEdgeClippingClipToPaddedFace,"""github.com/golang/geo/s2.TestEdgeClippingClipToPaddedFace""",52,383,32,1,0,36,21,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/String,"""(github.com/golang/geo/s2.CellID).String""",52,885,6,0,1,11,10,1,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,3,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
/s2/edge_distances.go/Project,"""github.com/golang/geo/s2.Project""",52,243,7,1,1,15,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/readInt16,"""(*github.com/golang/geo/s2.decoder).readInt16""",52,167,9,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/boundaryApproxIntersects,"""(*github.com/golang/geo/s2.Loop).boundaryApproxIntersects""",52,446,24,2,1,23,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/TestCellCapBound,"""github.com/golang/geo/s2.TestCellCapBound""",52,506,16,1,0,8,8,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/TestOriginPoint,"""github.com/golang/geo/s2.TestOriginPoint""",52,375,15,1,0,22,13,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/TestPointTrueCentroid,"""github.com/golang/geo/s2.TestPointTrueCentroid""",52,375,21,1,0,34,37,1,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorIdentities,"""github.com/golang/geo/r3.TestVectorIdentities""",5,323,20,1,0,38,23,1,0,0,0,0,0,0,0,0,0,0,0,1,0,5,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/IsValid,"""(github.com/golang/geo/s1.Interval).IsValid""",7,330,7,0,1,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/findMSBSetNonZero64,"""github.com/golang/geo/s2.findMSBSetNonZero64""",52,885,19,1,1,11,1,1,0,0,0,0,0,0,0,0,0,2,0,2,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/IntervalFromPointPair,"""github.com/golang/geo/s1.IntervalFromPointPair""",7,330,21,1,1,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/Vertex,"""(github.com/golang/geo/s2.Rect).Vertex""",52,424,6,1,1,18,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,4,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3_test.go/TestRow,"""github.com/golang/geo/s2.TestRow""",52,478,7,1,0,32,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestFromVariousTypes,"""github.com/golang/geo/r2.TestFromVariousTypes""",3,457,20,1,0,32,11,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/IsFull,"""(*github.com/golang/geo/s2.Loop).IsFull""",52,446,6,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell.go/Bound,"""(github.com/golang/geo/s2.PaddedCell).Bound""",52,238,5,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/r2PointsApproxEquals,"""github.com/golang/geo/s2.r2PointsApproxEquals""",52,395,20,2,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectString,"""github.com/golang/geo/s2.TestRectString""",52,846,14,1,0,5,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle_test.go/float64Eq,"""github.com/golang/geo/s1.float64Eq""",7,153,9,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/CellFromPoint,"""github.com/golang/geo/s2.CellFromPoint""",52,375,13,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/writeFloat32,"""(*github.com/golang/geo/s2.encoder).writeFloat32""",52,167,12,1,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/ContainsCell,"""(*github.com/golang/geo/s2.Polyline).ContainsCell""",52,192,12,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/interval.go/Length,"""(github.com/golang/geo/s1.Interval).Length""",7,330,6,0,1,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex.go/End,"""(*github.com/golang/geo/s2.ShapeIndex).End""",52,481,3,0,1,9,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestFindMSBSetNonZero64,"""github.com/golang/geo/s2.TestFindMSBSetNonZero64""",52,1032,23,1,0,26,13,1,0,0,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances_test.go/TestEdgeDistancesRepeatedInterpolation,"""github.com/golang/geo/s2.TestEdgeDistancesRepeatedInterpolation""",52,246,38,1,0,13,5,2,1,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/intersects,"""(github.com/golang/geo/s2.Cap).intersects""",52,467,10,2,1,47,9,1,0,0,0,0,0,0,0,0,0,1,0,0,0,6,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/OrderedCCW,"""github.com/golang/geo/s2.OrderedCCW""",52,312,10,1,1,12,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv_test.go/TestFaceUVToXYZ,"""github.com/golang/geo/s2.TestFaceUVToXYZ""",52,346,15,1,0,46,27,1,0,0,0,0,0,0,0,0,0,3,0,0,0,8,1,3,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestOrtho,"""github.com/golang/geo/r2.TestOrtho""",3,457,9,1,0,16,5,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/TestInteriorContainsPoint,"""github.com/golang/geo/r2.TestInteriorContainsPoint""",3,457,25,1,0,22,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/PolarClosure,"""(github.com/golang/geo/s2.Rect).PolarClosure""",52,424,12,0,1,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/TestPointAreaQuarterHemisphere,"""github.com/golang/geo/s2.TestPointAreaQuarterHemisphere""",52,375,30,1,0,22,6,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/ContainsPoint,"""(github.com/golang/geo/s2.Cap).ContainsPoint""",52,467,13,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/ContainsCellID,"""(*github.com/golang/geo/s2.CellUnion).ContainsCellID""",52,234,14,1,1,8,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
/s2/s2_test_test.go/TestParsePoint,"""github.com/golang/geo/s2.TestParsePoint""",52,180,14,1,0,26,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle.go/Abs,"""(github.com/golang/geo/s1.Angle).Abs""",7,98,3,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/CapFromCenterHeight,"""github.com/golang/geo/s2.CapFromCenterHeight""",52,467,19,2,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/oneIn,"""github.com/golang/geo/s2.oneIn""",52,395,5,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/ApproxEqual,"""(github.com/golang/geo/s2.Cap).ApproxEqual""",52,467,11,1,1,10,8,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/TestCellAreas,"""github.com/golang/geo/s2.TestCellAreas""",52,506,13,1,0,57,47,2,1,0,0,0,0,0,0,0,0,9,0,0,0,5,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/latitude,"""(github.com/golang/geo/s2.Cell).latitude""",52,375,8,1,1,19,5,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,1,5,1,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion.go/IntersectsCell,"""(*github.com/golang/geo/s2.CellUnion).IntersectsCell""",52,234,14,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/Parent,"""(*github.com/golang/geo/s2.Polygon).Parent""",52,335,6,1,2,15,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/RectFromLatLng,"""github.com/golang/geo/s2.RectFromLatLng""",52,424,14,1,1,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/EmptyCap,"""github.com/golang/geo/s2.EmptyCap""",52,467,8,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/writeFloat64,"""(*github.com/golang/geo/s2.encoder).writeFloat64""",52,167,12,1,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/loop.go/EmptyLoop,"""github.com/golang/geo/s2.EmptyLoop""",52,446,9,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell.go/ChildIJ,"""(github.com/golang/geo/s2.PaddedCell).ChildIJ""",52,238,7,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell.go/Center,"""(github.com/golang/geo/s2.Cell).Center""",52,375,6,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/TestCellFaces,"""github.com/golang/geo/s2.TestCellFaces""",52,506,13,1,0,54,35,4,1,0,0,0,0,0,0,0,0,2,0,0,2,10,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/chainStart,"""(*github.com/golang/geo/s2.testShape).chainStart""",52,241,10,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Contains,"""(github.com/golang/geo/r2.Rect).Contains""",3,241,8,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point.go/PointCross,"""(github.com/golang/geo/s2.Point).PointCross""",52,312,10,1,1,13,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/encode,"""(*github.com/golang/geo/s2.Polygon).encode""",52,335,6,1,0,12,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/predicates.go/RobustSign,"""github.com/golang/geo/s2.RobustSign""",52,222,10,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval.go/AddPoint,"""(github.com/golang/geo/r1.Interval).AddPoint""",3,145,8,1,1,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Normalize,"""(github.com/golang/geo/r3.Vector).Normalize""",5,168,9,0,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/Union,"""(github.com/golang/geo/s2.Cap).Union""",52,467,5,1,1,21,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/latlng_test.go/TestLatLngString,"""github.com/golang/geo/s2.TestLatLngString""",52,139,16,1,0,6,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellunion_test.go/TestCellUnionBasic,"""github.com/golang/geo/s2.TestCellUnionBasic""",52,707,18,1,0,36,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/TestPointCross,"""github.com/golang/geo/s2.TestPointCross""",52,375,14,1,0,23,12,1,0,0,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/precisevector_test.go/TestPreciseLargestSmallestComponents,"""github.com/golang/geo/r3.TestPreciseLargestSmallestComponents""",5,461,36,1,0,45,10,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/Cos,"""(github.com/golang/geo/s1.ChordAngle).Cos""",7,192,3,0,1,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/initialCandidates,"""(*github.com/golang/geo/s2.coverer).initialCandidates""",52,449,17,0,0,9,7,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap_test.go/TestCapIntersectsCell,"""github.com/golang/geo/s2.TestCapIntersectsCell""",52,702,21,1,0,69,47,3,2,0,0,0,0,0,0,0,0,2,0,0,0,11,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDContainment,"""github.com/golang/geo/s2.TestCellIDContainment""",52,1032,21,1,0,39,13,1,0,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon_test.go/TestPolygonEmptyAndFull,"""github.com/golang/geo/s2.TestPolygonEmptyAndFull""",52,324,23,1,0,42,24,0,0,0,0,0,0,0,0,0,0,4,0,0,0,12,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/kmToAngle,"""github.com/golang/geo/s2.kmToAngle""",52,395,9,1,1,4,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorNorm2,"""github.com/golang/geo/r3.TestVectorNorm2""",5,323,15,1,0,17,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/writeInt8,"""(*github.com/golang/geo/s2.encoder).writeInt8""",52,167,9,1,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/NumEdges,"""(*github.com/golang/geo/s2.Polyline).NumEdges""",52,192,8,0,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/Contains,"""(github.com/golang/geo/s2.Rect).Contains""",52,424,8,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/Sub,"""(github.com/golang/geo/s1.ChordAngle).Sub""",7,192,3,1,1,10,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDFaceSiTi,"""github.com/golang/geo/s2.TestCellIDFaceSiTi""",52,1032,18,1,0,17,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv_test.go/TestSiTiSTRoundtrip,"""github.com/golang/geo/s2.TestSiTiSTRoundtrip""",52,346,19,1,0,17,10,2,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval_test.go/TestExpanded,"""github.com/golang/geo/r1.TestExpanded""",3,333,12,1,0,16,3,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/paddedcell.go/ExitVertex,"""(github.com/golang/geo/s2.PaddedCell).ExitVertex""",52,238,10,0,1,12,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/FullRect,"""github.com/golang/geo/s2.FullRect""",52,424,8,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/randomUniformFloat64,"""github.com/golang/geo/s2.randomUniformFloat64""",52,395,20,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/Encode,"""(github.com/golang/geo/s2.Cap).Encode""",52,467,6,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/LatLng,"""(github.com/golang/geo/s2.CellID).LatLng""",52,885,6,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3.go/row,"""(*github.com/golang/geo/s2.matrix3x3).row""",52,113,3,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect_test.go/float64Eq,"""github.com/golang/geo/r2.float64Eq""",3,457,9,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect_test.go/TestRectIntervalOps,"""github.com/golang/geo/s2.TestRectIntervalOps""",52,846,19,1,0,129,46,1,0,0,0,0,0,0,0,0,0,0,0,1,0,6,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/InteriorContainsPoint,"""(github.com/golang/geo/s2.Cap).InteriorContainsPoint""",52,467,21,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/stuv.go/xyzToFaceSiTi,"""github.com/golang/geo/s2.xyzToFaceSiTi""",52,289,13,1,3,24,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle_test.go/float64Near,"""github.com/golang/geo/s1.float64Near""",7,153,11,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/matrix3x3_test.go/TestFrames,"""github.com/golang/geo/s2.TestFrames""",52,478,10,1,0,34,27,1,0,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/regioncoverer.go/adjustLevel,"""(*github.com/golang/geo/s2.coverer).adjustLevel""",52,449,11,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/wedge_relations.go/WedgeContains,"""github.com/golang/geo/s2.WedgeContains""",52,83,13,1,1,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cell_test.go/TestCellContainsCell,"""github.com/golang/geo/s2.TestCellContainsCell""",52,506,20,1,0,37,36,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/MaxTile,"""(github.com/golang/geo/s2.CellID).MaxTile""",52,885,7,1,1,30,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_crossings.go/EdgeOrVertexCrossing,"""github.com/golang/geo/s2.EdgeOrVertexCrossing""",52,149,20,1,1,9,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polygon.go/IsEmpty,"""(*github.com/golang/geo/s2.Polygon).IsEmpty""",52,335,7,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/polyline.go/CapBound,"""(*github.com/golang/geo/s2.Polyline).CapBound""",52,192,8,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/FullCap,"""github.com/golang/geo/s2.FullCap""",52,467,7,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/Center,"""(github.com/golang/geo/s2.Cap).Center""",52,467,6,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/Intersects,"""(github.com/golang/geo/s2.Cap).Intersects""",52,467,10,1,1,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/point_test.go/TestChordAngleBetweenPoints,"""github.com/golang/geo/s2.TestChordAngleBetweenPoints""",52,375,27,1,0,21,26,1,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/shapeindex_test.go/validateEdge,"""github.com/golang/geo/s2.validateEdge""",52,241,12,4,0,15,7,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/readInt8,"""(*github.com/golang/geo/s2.decoder).readInt8""",52,167,8,0,1,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/Cross,"""(github.com/golang/geo/r2.Point).Cross""",3,241,5,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r2/rect.go/InteriorContains,"""(github.com/golang/geo/r2.Rect).InteriorContains""",3,241,16,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cap.go/CapFromCenterArea,"""github.com/golang/geo/s2.CapFromCenterArea""",52,467,17,2,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/ChildEnd,"""(github.com/golang/geo/s2.CellID).ChildEnd""",52,885,8,0,1,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector.go/Norm,"""(github.com/golang/geo/r3.Vector).Norm""",5,168,4,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid_test.go/TestCellIDEdgeNeighbors,"""github.com/golang/geo/s2.TestCellIDEdgeNeighbors""",52,1032,23,1,0,31,20,3,1,0,0,0,0,0,0,0,0,2,0,2,0,3,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r3/vector_test.go/TestVectorCmp,"""github.com/golang/geo/r3.TestVectorCmp""",5,323,13,1,0,21,2,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/chordangle.go/Tan,"""(github.com/golang/geo/s1.ChordAngle).Tan""",7,192,3,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/edge_distances.go/minUpdateInteriorDistanceMaxError,"""github.com/golang/geo/s2.minUpdateInteriorDistanceMaxError""",52,243,33,1,1,9,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/s2_test.go/randomBits,"""github.com/golang/geo/s2.randomBits""",52,395,10,1,1,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s1/angle_test.go/TestEmptyValue,"""github.com/golang/geo/s1.TestEmptyValue""",7,153,14,1,0,5,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/cellIDFromFaceIJWrap,"""github.com/golang/geo/s2.cellIDFromFaceIJWrap""",52,885,20,1,1,29,14,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/cellid.go/initLookupCell,"""github.com/golang/geo/s2.initLookupCell""",52,885,14,1,0,17,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/encode.go/writeInt16,"""(*github.com/golang/geo/s2.encoder).writeInt16""",52,167,10,1,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/r1/interval_test.go/TestIsEmpty,"""github.com/golang/geo/r1.TestIsEmpty""",3,333,11,1,0,14,8,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
/s2/rect.go/IsEmpty,"""(github.com/golang/geo/s2.Rect).IsEmpty""",52,424,7,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
